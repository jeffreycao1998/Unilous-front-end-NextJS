{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\Projects\\\\projectU\\\\projectu\\\\pages\\\\blog\\\\react_to_nextjs.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Layout from '../../components/Layout';\nimport Head from 'next/head';\nimport B from '../../styles/blog.module.css';\n\nconst RtN = () => {\n  const reactPackages = `\n\"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n},`;\n  const nextPackages = `\n\"scripts\": {\n    \"dev\": \"next\",\n    \"build\": \"next build\",\n    \"start\": \"next start\"\n},`;\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, \"Contact | Unilous\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"Contact the Unilous team\",\n    key: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"navbar-height\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: B.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    className: B.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"Converting a React application with Redux and Apollo to Next.JS\"), __jsx(\"img\", {\n    className: B.imgTitle,\n    src: \"/svg/events/usaB.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }), __jsx(\"p\", {\n    className: B.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"If you have clicked on this blog odds are that you have heard of \", __jsx(\"a\", {\n    href: \"https://nextjs.org/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 86\n    }\n  }, \"Next.JS\"), \", if not allow me to introduce it. Next.JS is a \", __jsx(\"a\", {\n    href: \"https://reactjs.org/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 34\n    }\n  }, \"React\"), \" framework that is best known for its server side rendering capablities which allows for better search engine optimization (SEO). In short the reason for which we among other React developers switch to Next.JS is to aliviate the hastle of SEO in the most effective manner.\"), __jsx(\"p\", {\n    className: B.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Although Next.JS is already built on the shoulders of React, there are still many changes which need to happen before gettin the application up and running. For this guide I will not only show how to transform a React application to a Next.JS application, but a react application built with the centralized state management: \", __jsx(\"a\", {\n    href: \"https://redux.js.org/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 189\n    }\n  }, \"Redux\"), \", and the GraphQL API: \", __jsx(\"a\", {\n    href: \"https://www.apollographql.com/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 253\n    }\n  }, \"Apollo\"), \".\"), __jsx(\"h2\", {\n    className: B.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"1. Update your node environment\"), __jsx(\"p\", {\n    className: B.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"First you must set up the proper node packages so that the application runs as a Next.JS app rather than a React app.\"), __jsx(\"p\", {\n    className: B.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"You will need to replace the following scripts from React\"), __jsx(\"div\", {\n    className: `${B.codeContainer} ${B.remove}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, __jsx(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, reactPackages)), __jsx(\"p\", {\n    className: B.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"With the standard Next.JS scripts\"), __jsx(\"div\", {\n    className: `${B.codeContainer} ${B.add}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, __jsx(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, nextPackages)), __jsx(\"h2\", {\n    className: B.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"2. Prepare routing\"), __jsx(\"p\", {\n    className: B.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Next.JS routing depends on the file structure whereas React routing was dependant on the \", __jsx(\"span\", {\n    className: B.codeBit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 110\n    }\n  }, __jsx(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 138\n    }\n  }, \"BrowserRouter\")), \" component. This process can be separated into several steps...\"), __jsx(\"h3\", {\n    className: B.subTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"a. Reorganize components\"), __jsx(\"p\", {\n    className: B.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"Next.JS requires a root level folder named \\\"pages\\\". Within this folder is where all of the routing happens\"), __jsx(\"h3\", {\n    className: B.subTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"b. Redirect paths\")));\n};\n\n_c = RtN;\n\nconst mapStateToProps = state => {\n  return {// currentUser: state.currentUser,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {// setUserDD: bindActionCreators(setUserDD, dispatch),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RtN);\n\nvar _c;\n\n$RefreshReg$(_c, \"RtN\");","map":{"version":3,"sources":["C:/Code/Projects/projectU/projectu/pages/blog/react_to_nextjs.js"],"names":["React","connect","Layout","Head","B","RtN","reactPackages","nextPackages","container","title","imgTitle","text","codeContainer","remove","add","codeBit","subTitle","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Layout from '../../components/Layout'\r\nimport Head from 'next/head'\r\nimport B from '../../styles/blog.module.css'\r\n\r\nconst RtN = () => {\r\n    const reactPackages = `\r\n\"scripts\": {\r\n    \"start\": \"react-scripts start\",\r\n    \"build\": \"react-scripts build\",\r\n    \"test\": \"react-scripts test\",\r\n    \"eject\": \"react-scripts eject\"\r\n},`\r\n    const nextPackages = `\r\n\"scripts\": {\r\n    \"dev\": \"next\",\r\n    \"build\": \"next build\",\r\n    \"start\": \"next start\"\r\n},`\r\n    return (\r\n        <Layout>\r\n            <Head>\r\n                <title>Contact | Unilous</title>\r\n                <meta name=\"description\" content=\"Contact the Unilous team\" key=\"description\"/>\r\n            </Head>\r\n            <div className=\"navbar-height\" />\r\n            <div className={B.container}>\r\n                <h1 className={B.title}>Converting a React application with Redux and Apollo to Next.JS</h1>\r\n                <img className={B.imgTitle} src=\"/svg/events/usaB.svg\" />\r\n                <p className={B.text}>\r\n                    If you have clicked on this blog odds are that you have heard of <a href=\"https://nextjs.org/\">Next.JS</a>, if not allow me to introduce it. \r\n                    Next.JS is a <a href=\"https://reactjs.org/\">React</a> framework that is best known for its server side rendering capablities which allows for better search engine optimization (SEO). \r\n                    In short the reason for which we among other React developers switch to Next.JS is to aliviate the hastle of SEO in the most effective manner.\r\n                </p>\r\n                <p className={B.text}>\r\n                    Although Next.JS is already built on the shoulders of React, there are still many changes which need to happen before gettin the application up and running.\r\n                    For this guide I will not only show how to transform a React application to a Next.JS application, but a react application built with the centralized state management: <a href=\"https://redux.js.org/\">Redux</a>, and the GraphQL API: <a href=\"https://www.apollographql.com/\">Apollo</a>. \r\n                </p>\r\n                <h2 className={B.title}>1. Update your node environment</h2>\r\n                <p className={B.text}>\r\n                    First you must set up the proper node packages so that the application runs as a Next.JS app rather than a React app.\r\n                </p>\r\n                <p className={B.text}>\r\n                    You will need to replace the following scripts from React\r\n                </p>\r\n                <div className={`${B.codeContainer} ${B.remove}`}>\r\n                    <code>{reactPackages}</code>\r\n                </div>\r\n                <p className={B.text}>\r\n                    With the standard Next.JS scripts\r\n                </p>\r\n                <div className={`${B.codeContainer} ${B.add}`}>\r\n                    <code>{nextPackages}</code>\r\n                </div>\r\n                <h2 className={B.title}>2. Prepare routing</h2>\r\n                <p className={B.text}>\r\n                    Next.JS routing depends on the file structure whereas React routing was dependant on the <span className={B.codeBit}><code>BrowserRouter</code></span> component. \r\n                    This process can be separated into several steps...\r\n                </p>\r\n                <h3 className={B.subTitle}>a. Reorganize components</h3>\r\n                <p className={B.text}>\r\n                    Next.JS requires a root level folder named \"pages\". Within this folder is where all of the routing happens\r\n                </p>\r\n                <h3 className={B.subTitle}>b. Redirect paths</h3>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n        // currentUser: state.currentUser,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // setUserDD: bindActionCreators(setUserDD, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(RtN)"]},"metadata":{},"sourceType":"module"}