{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\Projects\\\\projectU\\\\projectu\\\\pages\\\\results.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport resStyle from '../styles/pages/results.module.css'; // import Post from '../components/post/Post'\n\nimport { useQuery } from '@apollo/react-hooks';\nimport { SEARCH_POSTS } from '../src/schemas/queries';\nimport { addPosts } from '../redux/reducers/posts';\nimport { Link } from 'react-router-dom';\nimport Loading from '../components/Loading';\nimport { palletteGenerator } from '../src/functions/functions';\nimport { toggleStretchLayout } from '../redux/reducers/stretchLayout';\nimport { setEventSearch } from '../redux/reducers/eventSearch';\nimport { bindActionCreators } from 'redux';\n\nconst Results = props => {\n  _s();\n\n  if (false) return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, console.log('hello'), __jsx(\"h1\", {\n    className: resStyle.test,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"rendering\"));else {\n    const currentIds = props.posts ? props.posts.map(p => p._id) : [];\n    const {\n      0: scrollAtBottom,\n      1: setScrollAtBottom\n    } = useState(false);\n    const decodedSearch = decodeURIComponent(props.query);\n    const SPQuery = useQuery(SEARCH_POSTS, {\n      variables: {\n        filterString: '',\n        postIds: currentIds,\n        eventQuery: props.eventSearch\n      }\n    });\n    console.log(SPQuery);\n\n    const moreResults = () => {\n      if (SPQuery.data && SPQuery.data.searchPosts === null) {\n        return false;\n      }\n\n      return true;\n    };\n\n    if (window.innerHeight + window.scrollY > document.body.offsetHeight - 100 && !scrollAtBottom) {\n      setScrollAtBottom(true);\n    }\n\n    if (window.innerHeight + window.scrollY <= document.body.offsetHeight - 100 && scrollAtBottom) {\n      setScrollAtBottom(false);\n    }\n\n    const triggerWhenScroll = () => {\n      if (window.innerHeight + window.scrollY > document.body.offsetHeight - 100 && !scrollAtBottom) {\n        setScrollAtBottom(true);\n      }\n\n      if (window.innerHeight + window.scrollY <= document.body.offsetHeight - 100 && scrollAtBottom) {\n        setScrollAtBottom(false);\n      }\n    };\n\n    window.addEventListener('scroll', triggerWhenScroll, false);\n\n    const postChangeConditions = (query, reducer) => {\n      if (!scrollAtBottom) return false;\n      if (!query) return false;\n      if (!query.searchPosts) return false;\n\n      if (!reducer) {\n        return true;\n      }\n\n      const queryTitles = query.searchPosts.map(i => i.title);\n      const reducerTitles = reducer.map(i => i.title);\n\n      for (const title of queryTitles) {\n        if (!reducerTitles.includes(title)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    const postsSearched = postChangeConditions(SPQuery.data, props.posts) ? SPQuery.data.searchPosts : null;\n    useEffect(() => {\n      if (postsSearched && !props.posts) {\n        props.addPosts(SPQuery.data.searchPosts);\n        setScrollAtBottom(false);\n      }\n\n      if (postsSearched && props.posts) {\n        if (postsSearched.length > 0) {\n          if (!props.posts.map(p => p._id).includes(postsSearched[0]._id)) {\n            props.addPosts(SPQuery.data.searchPosts);\n            setScrollAtBottom(false);\n          }\n        }\n      }\n    }, [SPQuery, props.addPosts, props, postsSearched]);\n\n    if (!props.posts) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        style: {\n          height: '5vh'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }), __jsx(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    const eventQuery = props.eventSearch;\n\n    const eventKeys = () => {\n      if (eventQuery === 'COVID-19') {\n        return ['covid', 'coronavirus', 'outbreak', 'virus', 'emergency response'];\n      }\n\n      if (eventQuery === '2020 Election') {\n        return ['election', 'democrat', 'republican', 'vote'];\n      }\n\n      return null;\n    };\n\n    const postToShow = (post, eventKeys) => {\n      if (eventKeys) {\n        for (const keyWord of eventKeys) {\n          if (post.description.toLowerCase().includes(keyWord) || post.title.toLowerCase().includes(keyWord)) {\n            if (post.title.toLowerCase().includes(decodedSearch.toLowerCase())) return true;\n          }\n        }\n\n        return false;\n      }\n\n      if (post.title.toLowerCase().includes(decodedSearch.toLowerCase())) return true;\n\n      for (const skill of post.skillNames) {\n        if (decodedSearch.includes(skill)) return true;\n      }\n\n      return false;\n    };\n\n    let postsToShow = props.posts;\n    postsToShow = postsToShow.map(p => postToShow(p, eventKeys()) ? __jsx(Post, {\n      stretch: props.stretchLayout,\n      key: `post${p._id}`,\n      post: p,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 73\n      }\n    }) : null);\n    const pallette = palletteGenerator('rgb(40,40,40)').colorPallette;\n    const layoutBtnClass = props.stretchLayout ? 'layoutButtonGrid' : 'layoutButtonStretch';\n    const layoutClass = !props.stretchLayout ? 'resultsContentGrid' : 'resultsContentStretch';\n    const eventsList = [{\n      name: 'COVID-19',\n      color: 'rgb(237,32,40)',\n      iconB: '/svg/events/virusB.svg',\n      iconW: '/svg/events/virusW.svg',\n      iconC: '/svg/events/virusC.svg'\n    }, {\n      name: '2020 Election',\n      color: 'rgb(255,0,255)',\n      iconB: '/svg/events/usaB.svg',\n      iconW: '/svg/events/usaW.svg',\n      iconC: '/svg/events/usaC.svg'\n    }];\n    const eventsHTML = eventsList.map(e => e.name === props.eventSearch ? __jsx(\"div\", {\n      className: resStyle.eventSelected,\n      onClick: () => props.setEventSearch(null),\n      style: {\n        borderColor: e.color,\n        backgroundColor: e.color\n      },\n      key: `EV${e.name}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, __jsx(\"img\", {\n      src: e.iconW,\n      className: resStyle.eventImage,\n      alt: e.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }), __jsx(\"h3\", {\n      className: resStyle.eventText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, e.name)) : __jsx(\"div\", {\n      className: resStyle.event,\n      onClick: () => props.setEventSearch(e.name),\n      style: {\n        borderColor: e.color,\n        color: e.color\n      },\n      key: `EV${e.name}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, __jsx(\"img\", {\n      src: e.iconC,\n      className: resStyle.ventImage,\n      alt: e.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }), __jsx(\"h3\", {\n      className: resStyle.eventText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, e.name)));\n    const eventsContainerClass = props.eventSearch ? resStyle.ECActive : null;\n    const showLoading = moreResults() ? __jsx(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 45\n      }\n    }) : __jsx(\"h3\", {\n      style: {\n        opacity: '0.8'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 59\n      }\n    }, \"no more posts\");\n    return __jsx(\"div\", {\n      className: \"home-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, __jsx(\"h1\", {\n      className: resStyle.test,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, \"Results\"), __jsx(\"div\", {\n      className: resStyle.results - container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, __jsx(Link, {\n      to: \"/post-form/\",\n      className: `${resStyle.form - container - expand} standard-hover neutralize-link`,\n      title: props.setTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, __jsx(\"img\", {\n      className: resStyle.form - expand - icon,\n      src: pallette.plusIcon,\n      alt: \"team up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    })), __jsx(\"div\", {\n      className: \"navbar-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }), __jsx(\"h2\", {\n      className: resStyle.secondary - title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, \"events\"), __jsx(\"div\", {\n      className: `${resStyle.events - container} ${eventsContainerClass}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }, eventsHTML), __jsx(\"div\", {\n      onClick: () => props.toggleStretchLayout(!props.stretchLayout),\n      className: resStyle.layout - wrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: resStyle.layout - container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: `layout-button ${layoutBtnClass}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 29\n      }\n    }, __jsx(\"div\", {\n      className: resStyle.layout - box,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 33\n      }\n    }), __jsx(\"div\", {\n      className: resStyle.layout - box,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 33\n      }\n    }), __jsx(\"div\", {\n      className: resStyle.layout - box,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 33\n      }\n    }), __jsx(\"div\", {\n      className: resStyle.layout - box,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 33\n      }\n    })))), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }), __jsx(\"div\", {\n      className: `results-content ${layoutClass}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }, postsToShow), __jsx(\"div\", {\n      style: {\n        position: 'relative',\n        height: '400px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    }, showLoading)));\n  }\n}; // const mapStateToProps = (state) => {\n// \treturn {\n//         posts: state.posts,\n//         search: state.search,\n//         stretchLayout: state.stretchLayout,\n//         eventSearch: state.eventSearch,\n// \t}\n// }\n// export default connect(\n//     mapStateToProps,\n//     { addPosts, toggleStretchLayout, setEventSearch }\n// )(Results)\n\n\n_s(Results, \"Tr6hAAZ4lOTstbTpwAADi3sQdGQ=\", false, function () {\n  return [useQuery];\n});\n\n_c = Results;\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts,\n    stretchLayout: state.stretchLayout,\n    eventSearch: state.eventSearch\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addPosts: bindActionCreators(addPosts, dispatch),\n    toggleStretchLayout: bindActionCreators(toggleStretchLayout, dispatch),\n    setEventSearch: bindActionCreators(setEventSearch, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Results);\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["C:/Code/Projects/projectU/projectu/pages/results.js"],"names":["React","useState","useEffect","connect","resStyle","useQuery","SEARCH_POSTS","addPosts","Link","Loading","palletteGenerator","toggleStretchLayout","setEventSearch","bindActionCreators","Results","props","console","log","test","currentIds","posts","map","p","_id","scrollAtBottom","setScrollAtBottom","decodedSearch","decodeURIComponent","query","SPQuery","variables","filterString","postIds","eventQuery","eventSearch","moreResults","data","searchPosts","window","innerHeight","scrollY","document","body","offsetHeight","triggerWhenScroll","addEventListener","postChangeConditions","reducer","queryTitles","i","title","reducerTitles","includes","postsSearched","length","height","eventKeys","postToShow","post","keyWord","description","toLowerCase","skill","skillNames","postsToShow","stretchLayout","pallette","colorPallette","layoutBtnClass","layoutClass","eventsList","name","color","iconB","iconW","iconC","eventsHTML","e","eventSelected","borderColor","backgroundColor","eventImage","eventText","event","ventImage","eventsContainerClass","ECActive","showLoading","opacity","results","container","form","expand","setTitle","icon","plusIcon","secondary","events","layout","wrapper","box","position","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport resStyle from '../styles/pages/results.module.css'\r\n// import Post from '../components/post/Post'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport { SEARCH_POSTS } from '../src/schemas/queries'\r\nimport { addPosts } from '../redux/reducers/posts'\r\nimport { Link } from 'react-router-dom'\r\nimport Loading from '../components/Loading'\r\nimport { palletteGenerator } from '../src/functions/functions'\r\nimport { toggleStretchLayout } from '../redux/reducers/stretchLayout'\r\nimport { setEventSearch } from '../redux/reducers/eventSearch'\r\nimport {bindActionCreators} from 'redux'\r\n\r\nconst Results = (props) => {\r\n    \r\n    if (typeof window === 'undefined') return (\r\n        <React.Fragment>\r\n            {console.log('hello')}\r\n            <h1 className={resStyle.test}>rendering</h1>\r\n        </React.Fragment>\r\n    )\r\n    else {\r\n        const currentIds = props.posts ? props.posts.map(p => p._id) : []\r\n        const [scrollAtBottom, setScrollAtBottom] = useState(false)\r\n        const decodedSearch = decodeURIComponent(props.query)\r\n        const SPQuery = useQuery(SEARCH_POSTS, {\r\n            variables: {\r\n                filterString: '',\r\n                postIds: currentIds,\r\n                eventQuery: props.eventSearch,\r\n            }\r\n        })\r\n        console.log(SPQuery)\r\n        const moreResults = () => {\r\n            if (SPQuery.data && SPQuery.data.searchPosts === null) {\r\n                return false\r\n            }\r\n            return true\r\n        }\r\n        if ((window.innerHeight + window.scrollY) > (document.body.offsetHeight - 100) && !scrollAtBottom) {\r\n            setScrollAtBottom(true)\r\n        }\r\n        if ((window.innerHeight + window.scrollY) <= (document.body.offsetHeight - 100) && scrollAtBottom) {\r\n            setScrollAtBottom(false)\r\n        }\r\n        const triggerWhenScroll = () => {\r\n            if ((window.innerHeight + window.scrollY) > (document.body.offsetHeight - 100) && !scrollAtBottom) {\r\n                setScrollAtBottom(true)\r\n            }\r\n            if ((window.innerHeight + window.scrollY) <= (document.body.offsetHeight - 100) && scrollAtBottom) {\r\n                setScrollAtBottom(false)\r\n            }\r\n        }\r\n        window.addEventListener('scroll', triggerWhenScroll, false)\r\n\r\n        const postChangeConditions = (query, reducer) => {\r\n            if (!scrollAtBottom) return false\r\n            if (!query) return false\r\n            if (!query.searchPosts) return false\r\n            if (!reducer) {\r\n                return true\r\n            }\r\n            const queryTitles = query.searchPosts.map(i => i.title)\r\n            const reducerTitles = reducer.map(i => i.title)\r\n            for (const title of queryTitles) {\r\n                if (!reducerTitles.includes(title)) {\r\n                    return true\r\n                }\r\n            }\r\n            return false\r\n        }\r\n        const postsSearched = postChangeConditions(SPQuery.data, props.posts) ?\r\n            SPQuery.data.searchPosts : null\r\n        useEffect(() => {\r\n            if (postsSearched && !props.posts) {\r\n                props.addPosts(SPQuery.data.searchPosts)\r\n                setScrollAtBottom(false)\r\n            }\r\n            if (postsSearched && props.posts) {\r\n                if (postsSearched.length > 0) {\r\n                    if (!props.posts.map(p => p._id).includes(postsSearched[0]._id)){\r\n                        props.addPosts(SPQuery.data.searchPosts)\r\n                        setScrollAtBottom(false)\r\n                    }\r\n                }\r\n            }\r\n        }, [SPQuery, props.addPosts, props, postsSearched])\r\n        if (!props.posts) {\r\n            return (\r\n                <div>\r\n                    <div style={{height: '5vh'}}/>\r\n                    <Loading />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        const eventQuery = props.eventSearch\r\n        const eventKeys = () => {\r\n            if (eventQuery === 'COVID-19') {\r\n                return ['covid', 'coronavirus', 'outbreak', 'virus', 'emergency response']\r\n            }\r\n            if (eventQuery === '2020 Election') {\r\n                return ['election', 'democrat', 'republican', 'vote']\r\n            }\r\n            return null\r\n        }\r\n        const postToShow = (post, eventKeys) => {\r\n            if (eventKeys) {\r\n                for (const keyWord of eventKeys) {\r\n                    if (post.description.toLowerCase().includes(keyWord) || post.title.toLowerCase().includes(keyWord)) {\r\n                        if (post.title.toLowerCase().includes(decodedSearch.toLowerCase())) return true\r\n                    }\r\n                }\r\n                return false\r\n            }\r\n            if (post.title.toLowerCase().includes(decodedSearch.toLowerCase())) return true\r\n            for (const skill of post.skillNames) {\r\n                if (decodedSearch.includes(skill)) return true\r\n            }\r\n\r\n            return false\r\n        }\r\n        let postsToShow = props.posts\r\n        postsToShow = postsToShow.map(p => postToShow(p, eventKeys()) ? <Post stretch={props.stretchLayout} key={`post${p._id}`} post={p} /> : null)\r\n        const pallette = palletteGenerator('rgb(40,40,40)').colorPallette\r\n        const layoutBtnClass = props.stretchLayout ? 'layoutButtonGrid' : 'layoutButtonStretch'\r\n        const layoutClass = !props.stretchLayout ? 'resultsContentGrid' : 'resultsContentStretch'\r\n        \r\n        const eventsList = [\r\n            {name: 'COVID-19', color: 'rgb(237,32,40)', iconB: '/svg/events/virusB.svg', iconW: '/svg/events/virusW.svg', iconC: '/svg/events/virusC.svg'},\r\n            {name: '2020 Election', color: 'rgb(255,0,255)', iconB: '/svg/events/usaB.svg', iconW: '/svg/events/usaW.svg', iconC: '/svg/events/usaC.svg'} \r\n        ]\r\n        const eventsHTML = eventsList.map(e => e.name === props.eventSearch ? \r\n            <div className={resStyle.eventSelected} onClick={() => props.setEventSearch(null)} style={{borderColor: e.color, backgroundColor: e.color}} key={`EV${e.name}`}>\r\n                <img src={e.iconW} className={resStyle.eventImage} alt={e.name} />\r\n                <h3 className={resStyle.eventText}>{e.name}</h3>\r\n            </div>\r\n            :\r\n            <div className={resStyle.event} onClick={() => props.setEventSearch(e.name)} style={{borderColor: e.color, color: e.color}} key={`EV${e.name}`}>\r\n                <img src={e.iconC} className={resStyle.ventImage} alt={e.name} />\r\n                <h3 className={resStyle.eventText}>{e.name}</h3>\r\n            </div>\r\n        )\r\n        \r\n        const eventsContainerClass = props.eventSearch ? resStyle.ECActive : null\r\n        const showLoading = moreResults() ? <Loading /> : <h3 style={{opacity: '0.8'}}>no more posts</h3>\r\n        return (\r\n            <div className=\"home-wrapper\">\r\n                <h1 className={resStyle.test}>Results</h1>\r\n                <div className={resStyle.results-container}>\r\n                    <Link to=\"/post-form/\" className={`${resStyle.form-container-expand} standard-hover neutralize-link`} title={props.setTitle}>\r\n                        <img className={resStyle.form-expand-icon} src={pallette.plusIcon} alt=\"team up\" />\r\n                    </Link>\r\n                    <div className=\"navbar-height\"/>\r\n                    <h2 className={resStyle.secondary-title}>events</h2>\r\n                    <div className={`${resStyle.events-container} ${eventsContainerClass}`}>\r\n                        {eventsHTML}\r\n                    </div>\r\n                    <div onClick={() => props.toggleStretchLayout(!props.stretchLayout)} className={resStyle.layout-wrapper}>\r\n                        <div className={resStyle.layout-container}>\r\n                            <div className={`layout-button ${layoutBtnClass}`} >\r\n                                <div className={resStyle.layout-box}/>\r\n                                <div className={resStyle.layout-box}/>\r\n                                <div className={resStyle.layout-box}/>\r\n                                <div className={resStyle.layout-box}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div />\r\n                    <div className={`results-content ${layoutClass}`}>\r\n                        {postsToShow}\r\n                    </div>\r\n                    <div style={{position: 'relative', height: '400px'}}>\r\n                        {showLoading}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n// \treturn {\r\n//         posts: state.posts,\r\n//         search: state.search,\r\n//         stretchLayout: state.stretchLayout,\r\n//         eventSearch: state.eventSearch,\r\n// \t}\r\n// }\r\n// export default connect(\r\n//     mapStateToProps,\r\n//     { addPosts, toggleStretchLayout, setEventSearch }\r\n// )(Results)\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n        posts: state.posts,\r\n        stretchLayout: state.stretchLayout,\r\n        eventSearch: state.eventSearch,\r\n\t}\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPosts: bindActionCreators(addPosts, dispatch),\r\n        toggleStretchLayout: bindActionCreators(toggleStretchLayout, dispatch),\r\n        setEventSearch: bindActionCreators(setEventSearch, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Results)"]},"metadata":{},"sourceType":"module"}