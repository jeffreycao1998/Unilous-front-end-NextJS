{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\Projects\\\\projectU\\\\projectu\\\\pages\\\\postformpage.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useMutation } from '@apollo/react-hooks';\nimport { CREATE_POST } from '../../schemas/mutations';\nimport { useField, triggerAlert, palletteGenerator, websiteStats } from '../../functions/functions';\nimport '../../static/css/pages/postForm.css';\nimport { withRouter } from 'react-router-dom';\nimport InputHeader from '../text-field/InputHeader';\nimport { setAlert, resetAlert } from '../../reducers/alertNotif';\nimport SkillSugg from '../text-field/SkillSugg';\n\nlet PostFormPage = props => {\n  const title = useField('text');\n  const description = useField('text');\n  const {\n    0: color,\n    1: setColor\n  } = useState(null);\n  const groupContactLink = useField('url');\n  const {\n    0: skillName,\n    1: setSkillName\n  } = useState('');\n  const {\n    0: skillNameList,\n    1: setSkillNameList\n  } = useState([]);\n  const {\n    0: skillCapacity,\n    1: setSkillCapacity\n  } = useState('');\n  const {\n    0: skillCapList,\n    1: setSkillCapList\n  } = useState([]);\n  const {\n    0: imageLink,\n    1: setImageLink\n  } = useState('');\n  const {\n    0: imageLinkList,\n    1: setImageLinkList\n  } = useState([]);\n  const {\n    0: referenceLink,\n    1: setReferenceLink\n  } = useState('');\n  const {\n    0: referenceLinkList,\n    1: setReferenceLinkList\n  } = useState([]);\n  const {\n    0: skillProposition,\n    1: setSkillProposition\n  } = useState(null);\n  const {\n    0: skillSelected,\n    1: setSkillSelected\n  } = useState(null);\n\n  const handleError = e => {\n    const message = e.message;\n\n    if (message.includes('Response not successful')) {\n      triggerAlert('warning', 'all$: title, description, color, group/contact link, skills, and contribution are all required', props.setAlert, props.resetAlert);\n      return null;\n    }\n\n    if (message.includes('Path `title` (')) {\n      triggerAlert('warning', `title$: title of ${title.fields.value.length} characters must only have at most 100 characters`, props.setAlert, props.resetAlert);\n      return null;\n    }\n\n    if (message.includes('dup key: { title')) {\n      triggerAlert('warning', `title$: ${title.fields.value} is not unique. Title must be unique`, props.setAlert, props.resetAlert);\n      return null;\n    }\n\n    if (message.includes('duplicate description')) {\n      triggerAlert('warning', `description$: description is not unique. Description must be unique`, props.setAlert, props.resetAlert);\n      return null;\n    }\n\n    if (message.includes('minimum allowed length')) {\n      triggerAlert('warning', `description$: description of ${description.fields.value.length} characters must at least have 100 characters`, props.setAlert, props.resetAlert);\n      return null;\n    }\n\n    if (message.includes('Path `description` (')) {\n      triggerAlert('warning', `description$: description of ${description.fields.value.length} characters must only have at most 3000 characters`, props.setAlert, props.resetAlert);\n      return null;\n    }\n\n    if (message.includes('duplicate contactLink')) {\n      triggerAlert('warning', `group/contact link$: ${groupContactLink.fields.value} is not unique. Group/contact link must be unique`, props.setAlert, props.resetAlert);\n      return null;\n    }\n  };\n\n  const [createPost] = useMutation(CREATE_POST, {\n    onError: handleError\n  });\n  const pallette = color ? palletteGenerator(color).colorPallette : {\n    color: null,\n    heigherColor: null\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!props.token) {\n      triggerAlert('warning', 'sign in$: must be signed in to perform this action', props.setAlert, props.resetAlert);\n      return null;\n    }\n\n    if (!skillNameList.length || !groupContactLink.fields.value.length) {\n      triggerAlert('warning', 'all$: title, description, color, group/contact link, skills, and contribution are all required', props.setAlert, props.resetAlert);\n      return null;\n    }\n\n    let cleanedTitle = [];\n\n    for (const word of title.fields.value.split(' ')) {\n      if (word.length) cleanedTitle.push(word);\n    }\n\n    const postCreated = await createPost({\n      variables: {\n        title: cleanedTitle.join(' '),\n        user: props.currentUser._id,\n        skillNames: skillNameList,\n        skillCapacities: skillCapList,\n        skillFills: skillProposition,\n        description: description.fields.value,\n        contactLink: groupContactLink.fields.value,\n        color: color,\n        imageLinks: imageLinkList,\n        referenceLinks: referenceLinkList\n      }\n    });\n\n    if (postCreated) {\n      title.reset();\n      description.reset();\n      groupContactLink.reset();\n      setSkillName('');\n      setSkillNameList([]);\n      setSkillCapacity('');\n      setSkillCapList([]);\n      setImageLink('');\n      setImageLinkList([]);\n      setReferenceLink('');\n      setReferenceLinkList([]);\n      props.history.push(`/post/${encodeURIComponent(postCreated.data.addPost.title)}`);\n    }\n  };\n\n  const colors = ['rgb(199,0,57)', 'rgb(224,52,77)', 'rgb(245,165,0)', 'rgb(250,116,79)', 'rgb(246,172,200)', 'rgb(16,79,37)', 'rgb(15,138,95)', 'rgb(140,186,81)', 'rgb(152,183,49)', 'rgb(127,205,145)', 'rgb(2,66,73)', 'rgb(15,76,117)', 'rgb(50,62,221)', 'rgb(1,152,173)', 'rgb(113,112,255)', 'rgb(20,20,20)', 'rgb(60,60,60)', 'rgb(133,156,177)'];\n  const colorsHTML = colors.map(c => __jsx(\"div\", {\n    onClick: () => setColor(c),\n    className: \"color-ins\",\n    style: {\n      backgroundColor: c\n    },\n    key: `PFC${c}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 40\n    }\n  }));\n\n  const addSkills = () => {\n    let cleanedSkill = [];\n\n    for (const word of skillName.split(' ')) {\n      if (word.length) cleanedSkill.push(word);\n    }\n\n    setSkillName(cleanedSkill.join(' '));\n\n    if (Number(skillCapacity)) {\n      setSkillNameList(skillNameList.concat(skillName.toLowerCase()));\n      setSkillName('');\n      setSkillCapList(skillCapList.concat(Number(skillCapacity)));\n      setSkillCapacity('');\n      setSkillProposition(null);\n      setSkillSelected(null);\n    }\n  };\n\n  const removeSkill = ind => {\n    const newSkillNameList = [];\n\n    for (const i in skillNameList) {\n      if (i !== ind) {\n        newSkillNameList.push(skillNameList[i]);\n      }\n    }\n\n    setSkillNameList(newSkillNameList);\n    const newSkillCapList = [];\n\n    for (const i in skillCapList) {\n      if (i !== ind) {\n        newSkillCapList.push(skillCapList[i]);\n      }\n    }\n\n    setSkillCapList(newSkillCapList);\n    const newSkillProposition = [];\n\n    for (const i in props.skillProposition) {\n      if (i !== ind) {\n        newSkillProposition.push(props.skillProposition[i]);\n      }\n    }\n  };\n\n  const removeImage = ind => {\n    const newImageLinkList = [];\n\n    for (const i in imageLinkList) {\n      if (i !== ind) {\n        newImageLinkList.push(imageLinkList[i]);\n      }\n    }\n\n    setImageLinkList(newImageLinkList);\n  };\n\n  const addImage = () => {\n    if (imageLink.includes('https://') || imageLink.includes('http://')) {\n      setImageLinkList(imageLinkList.concat(imageLink));\n      setImageLink('');\n    }\n  };\n\n  const removeRL = ind => {\n    const newReferenceLinkList = [];\n\n    for (const i in referenceLinkList) {\n      if (i !== ind) {\n        newReferenceLinkList.push(referenceLinkList[i]);\n      }\n    }\n\n    setReferenceLinkList(newReferenceLinkList);\n  };\n\n  const addRL = () => {\n    if (referenceLink.includes('https://') || referenceLink.includes('http://')) {\n      setReferenceLinkList(referenceLinkList.concat(referenceLink));\n      setReferenceLink('');\n    }\n  };\n\n  const skillsHTML = () => {\n    let skillsHTML = [];\n\n    for (const ind in skillNameList) {\n      skillsHTML.push(__jsx(\"div\", {\n        className: \"PF-skill-wrapper\",\n        key: `PFS${skillNameList[ind]}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"PF-skill-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"PF-skill-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }\n      }, skillNameList[ind]), __jsx(\"div\", {\n        className: \"PF-skill-cap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }\n      }, skillCapList[ind])), __jsx(\"div\", {\n        className: \"PF-skill-remove\",\n        onClick: () => removeSkill(ind),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }\n      }, \"x\")));\n    }\n\n    return skillsHTML;\n  };\n\n  const skillContribution = () => {\n    if (!skillNameList.length) {\n      return __jsx(\"h4\", {\n        className: \"PF-input-title\",\n        style: {\n          opacity: 0.7\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 20\n        }\n      }, \"must add skill first\");\n    }\n\n    const handleSkillSelect = i => {\n      const skillArray = Array(skillNameList.length).fill(0);\n      skillArray[i] = 1;\n      setSkillProposition(skillArray);\n      setSkillSelected(skillNameList[i]);\n    };\n\n    const skillMap = [];\n\n    for (const i in skillNameList) {\n      const skillClass = skillSelected === skillNameList[i] ? 'skill-selected' : 'skill-normal';\n      skillMap.push(__jsx(\"h4\", {\n        onClick: () => handleSkillSelect(i, skillNameList[i]),\n        className: skillClass,\n        key: `SKILL${i}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }\n      }, skillNameList[i]));\n    }\n\n    return __jsx(\"div\", {\n      className: \"skills-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    }, skillMap);\n  };\n\n  const imagesHTML = () => {\n    const allImages = [];\n\n    for (const ind in imageLinkList) {\n      allImages.push(__jsx(\"div\", {\n        className: \"PF-image-display-container\",\n        key: `IL${ind}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }\n      }, __jsx(\"img\", {\n        className: \"PF-image-display\",\n        src: imageLinkList[ind],\n        alt: `(${imageLinkList[ind]}) failed to load`,\n        key: `IL${imageLinkList[ind]}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }\n      }), __jsx(\"div\", {\n        onClick: () => removeImage(ind),\n        className: \"PF-skill-remove\",\n        style: {\n          height: '75px',\n          lineHeight: '70px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }\n      }, \"x\")));\n    }\n\n    return allImages.map(img => img);\n  };\n\n  const referenceLinksHTML = () => {\n    const allRL = [];\n\n    for (const ind in referenceLinkList) {\n      allRL.push(__jsx(\"div\", {\n        className: \"PF-link-container\",\n        key: `RL${ind}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }\n      }, __jsx(\"a\", {\n        href: referenceLinkList[ind],\n        className: \"PF-reference-link neutralize-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }\n      }, referenceLinkList[ind].split('/')[2]), __jsx(\"div\", {\n        onClick: () => removeRL(ind),\n        className: \"PF-skill-remove\",\n        style: {\n          lineHeight: '30px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }\n      }, \"x\")));\n    }\n\n    return allRL.map(rl => rl);\n  };\n\n  const groupCommType = () => {\n    const siteStats = websiteStats(groupContactLink.fields.value);\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      className: \"GCL-type\",\n      href: groupContactLink.fields.value,\n      title: siteStats.title,\n      style: {\n        backgroundColor: siteStats.color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }\n    }, __jsx(\"img\", {\n      className: \"GCL-image\",\n      src: siteStats.icon,\n      alt: siteStats.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 145\n      }\n    })), __jsx(\"input\", _extends({\n      className: \"PF-search-input-normal\",\n      id: \"PF-GC-Link\"\n    }, groupContactLink.fields, {\n      style: {\n        marginBottom: 0,\n        borderColor: siteStats.color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }\n    })));\n  };\n\n  const signInWarning = props.token ? null : __jsx(\"h3\", {\n    className: \"warning-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }\n  }, \"must be signed in to add post\");\n\n  const onSuggestionClicked = skill => {\n    const skillToEnter = `${skill} `;\n    setSkillName(skillToEnter);\n  };\n\n  return __jsx(\"div\", {\n    className: \"post-form0-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"navbar-height\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }), signInWarning, __jsx(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"post-form0-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 17\n    }\n  }, __jsx(\"h1\", {\n    className: \"pp-form-title\",\n    style: {\n      textAlign: 'start',\n      marginLeft: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 21\n    }\n  }, \"create post\"), __jsx(InputHeader, {\n    info: false,\n    title: \"title\",\n    color: \"white\",\n    inputFor: \"PF-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 21\n    }\n  }), __jsx(\"input\", _extends({\n    className: \"PF-search-input\",\n    id: \"PF-title\"\n  }, title.fields, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 21\n    }\n  })), __jsx(InputHeader, {\n    info: true,\n    title: \"description\",\n    color: \"white\",\n    inputFor: \"PF-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 21\n    }\n  }, __jsx(\"ul\", {\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 25\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 29\n    }\n  }, \"any links starting with (https://) or (http://) get decorated like this \", __jsx(\"a\", {\n    href: \"https://www.unilous.com/post-form/\",\n    className: \"p-link neutralize-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 105\n    }\n  }, \"http://decorated-link.com\")))), __jsx(\"textarea\", _extends({\n    className: \"PF-search-input\",\n    id: \"PF-description\"\n  }, description.fields, {\n    style: {\n      height: '100px',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 21\n    }\n  })), __jsx(InputHeader, {\n    info: true,\n    title: \"color\",\n    color: \"white\",\n    inputFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 21\n    }\n  }, __jsx(\"ul\", {\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 25\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 29\n    }\n  }, \"used sparingly to decorate the post\"))), __jsx(\"div\", {\n    className: \"PF-display-color\",\n    style: {\n      backgroundColor: pallette.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"PF-display-part\",\n    style: {\n      backgroundColor: pallette.color,\n      color: pallette.textColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 25\n    }\n  }, __jsx(\"h4\", {\n    style: {\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 127\n    }\n  }, \"primary\")), __jsx(\"div\", {\n    className: \"PF-display-part\",\n    style: {\n      backgroundColor: pallette.higherColor,\n      color: pallette.textColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 25\n    }\n  }, __jsx(\"h4\", {\n    style: {\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 133\n    }\n  }, \"secondary\"))), __jsx(\"div\", {\n    className: \"PF-input-colors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 21\n    }\n  }, colorsHTML), __jsx(InputHeader, {\n    info: true,\n    title: \"skills\",\n    color: \"white\",\n    inputFor: \"PF-skillName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 21\n    }\n  }, __jsx(\"p\", {\n    style: {\n      margin: 0,\n      marginBottom: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 25\n    }\n  }, \"skills needed to execute the project\"), __jsx(\"p\", {\n    style: {\n      margin: 0,\n      marginBottom: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 25\n    }\n  }, \"amount of people needed per skill\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"PF-skill-fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    className: \"PF-search-input\",\n    placeholder: \"skill name\",\n    id: \"PF-skillName\",\n    value: skillName,\n    onChange: e => setSkillName(e.target.value),\n    type: \"text\",\n    style: {\n      marginBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 29\n    }\n  }), __jsx(\"input\", {\n    className: \"PF-search-input\",\n    placeholder: \"amount of help\",\n    value: skillCapacity,\n    onChange: e => setSkillCapacity(e.target.value),\n    type: \"number\",\n    style: {\n      marginBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 29\n    }\n  }), __jsx(\"div\", {\n    className: \"PF-skill-sugg-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 29\n    }\n  }, __jsx(SkillSugg, {\n    query: skillName,\n    onSuggestionClicked: onSuggestionClicked,\n    style: {\n      gridColumn: '1/2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 33\n    }\n  }))), __jsx(\"h4\", {\n    onClick: () => addSkills(),\n    className: \"PF-field-submit standard-hover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 25\n    }\n  }, \"add skill\")), skillsHTML().map(s => s), __jsx(InputHeader, {\n    info: true,\n    title: \"contribution\",\n    color: \"white\",\n    inputFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 21\n    }\n  }, __jsx(\"p\", {\n    style: {\n      margin: 0,\n      marginBottom: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 25\n    }\n  }, \"skill you contribute to the project\")), skillContribution(), __jsx(InputHeader, {\n    info: true,\n    title: \"group/contact link\",\n    color: \"white\",\n    inputFor: \"PF-GC-Link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 21\n    }\n  }, __jsx(\"p\", {\n    style: {\n      margin: 0,\n      marginBottom: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 25\n    }\n  }, \"link shown to users who have been accepted to join the project\"), __jsx(\"ul\", {\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 25\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 29\n    }\n  }, \"group links recommended: \", __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 58\n    }\n  }, \"Slack\"), \", \", __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 82\n    }\n  }, \"Trello\"), \", \", __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 107\n    }\n  }, \"Discord\"), \", or \", __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 136\n    }\n  }, \"WhatsApp\")))), __jsx(\"div\", {\n    className: \"GCL-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 21\n    }\n  }, groupCommType()), __jsx(InputHeader, {\n    info: false,\n    title: \"images\",\n    color: \"white\",\n    inputFor: \"PF-imageLinks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 21\n    }\n  }), __jsx(\"input\", {\n    className: \"PF-search-input\",\n    type: \"url\",\n    placeholder: \"image link\",\n    id: \"PF-imageLinks\",\n    value: imageLink,\n    onChange: e => setImageLink(e.target.value),\n    style: {\n      marginBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 21\n    }\n  }), __jsx(\"h4\", {\n    onClick: () => addImage(),\n    className: \"PF-field-submit standard-hover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 21\n    }\n  }, \"add image\"), __jsx(\"div\", {\n    className: \"PF-images-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 21\n    }\n  }, imagesHTML()), __jsx(InputHeader, {\n    info: false,\n    title: \"links\",\n    color: \"white\",\n    inputFor: \"PF-referenceLinks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 21\n    }\n  }), __jsx(\"input\", {\n    className: \"PF-search-input\",\n    type: \"url\",\n    id: \"PF-referenceLinks\",\n    value: referenceLink,\n    onChange: e => setReferenceLink(e.target.value),\n    style: {\n      marginBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 21\n    }\n  }), __jsx(\"h4\", {\n    onClick: () => addRL(),\n    className: \"PF-field-submit standard-hover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 21\n    }\n  }, \"add link\"), referenceLinksHTML()), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"PF-submit standard-hover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 17\n    }\n  }, __jsx(\"h2\", {\n    style: {\n      margin: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 76\n    }\n  }, \"create post\"))));\n};\n\nPostFormPage = withRouter(PostFormPage);\n\nconst mapStateToProps = state => {\n  return {\n    skillProposition: state.skillProposition,\n    currentUser: state.currentUser,\n    token: state.token\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  resetAlert\n})(PostFormPage);","map":{"version":3,"sources":["C:/Code/Projects/projectU/projectu/pages/postformpage.js"],"names":["React","useState","connect","useMutation","CREATE_POST","useField","triggerAlert","palletteGenerator","websiteStats","withRouter","InputHeader","setAlert","resetAlert","SkillSugg","PostFormPage","props","title","description","color","setColor","groupContactLink","skillName","setSkillName","skillNameList","setSkillNameList","skillCapacity","setSkillCapacity","skillCapList","setSkillCapList","imageLink","setImageLink","imageLinkList","setImageLinkList","referenceLink","setReferenceLink","referenceLinkList","setReferenceLinkList","skillProposition","setSkillProposition","skillSelected","setSkillSelected","handleError","e","message","includes","fields","value","length","createPost","onError","pallette","colorPallette","heigherColor","handleSubmit","preventDefault","token","cleanedTitle","word","split","push","postCreated","variables","join","user","currentUser","_id","skillNames","skillCapacities","skillFills","contactLink","imageLinks","referenceLinks","reset","history","encodeURIComponent","data","addPost","colors","colorsHTML","map","c","backgroundColor","addSkills","cleanedSkill","Number","concat","toLowerCase","removeSkill","ind","newSkillNameList","i","newSkillCapList","newSkillProposition","removeImage","newImageLinkList","addImage","removeRL","newReferenceLinkList","addRL","skillsHTML","skillContribution","opacity","handleSkillSelect","skillArray","Array","fill","skillMap","skillClass","imagesHTML","allImages","height","lineHeight","img","referenceLinksHTML","allRL","rl","groupCommType","siteStats","icon","marginBottom","borderColor","signInWarning","onSuggestionClicked","skill","skillToEnter","textAlign","marginLeft","margin","width","textColor","higherColor","target","gridColumn","s","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { CREATE_POST } from '../../schemas/mutations'\r\nimport { useField, triggerAlert, palletteGenerator, websiteStats } from '../../functions/functions'\r\nimport '../../static/css/pages/postForm.css'\r\nimport { withRouter } from 'react-router-dom'\r\nimport InputHeader from '../text-field/InputHeader'\r\nimport { setAlert, resetAlert } from '../../reducers/alertNotif'\r\nimport SkillSugg from '../text-field/SkillSugg'\r\n\r\nlet PostFormPage = (props) => {\r\n    const title = useField('text')\r\n    const description = useField('text')\r\n    const [color, setColor] = useState(null)\r\n    const groupContactLink = useField('url')\r\n\r\n    const [skillName, setSkillName] = useState('')\r\n    const [skillNameList, setSkillNameList] = useState([])\r\n    const [skillCapacity, setSkillCapacity] = useState('')\r\n    const [skillCapList, setSkillCapList] = useState([])\r\n    const [imageLink, setImageLink] = useState('')\r\n    const [imageLinkList, setImageLinkList] = useState([])\r\n    const [referenceLink, setReferenceLink] = useState('')\r\n    const [referenceLinkList, setReferenceLinkList] = useState([])\r\n\r\n    const [skillProposition, setSkillProposition] = useState(null)\r\n    const [skillSelected, setSkillSelected] = useState(null)\r\n\r\n    const handleError = (e) => {\r\n        const message = e.message\r\n        if (message.includes('Response not successful')) {\r\n           triggerAlert('warning', 'all$: title, description, color, group/contact link, skills, and contribution are all required', props.setAlert, props.resetAlert)\r\n           return null \r\n        }\r\n        if (message.includes('Path `title` (')) {\r\n            triggerAlert('warning', `title$: title of ${title.fields.value.length} characters must only have at most 100 characters`, props.setAlert, props.resetAlert)\r\n            return null\r\n        }\r\n        if (message.includes('dup key: { title')) {\r\n            triggerAlert('warning', `title$: ${title.fields.value} is not unique. Title must be unique`, props.setAlert, props.resetAlert)\r\n            return null\r\n        }\r\n        if (message.includes('duplicate description')) {\r\n            triggerAlert('warning', `description$: description is not unique. Description must be unique`, props.setAlert, props.resetAlert)\r\n            return null\r\n        }\r\n        if (message.includes('minimum allowed length')) {\r\n            triggerAlert('warning', `description$: description of ${description.fields.value.length} characters must at least have 100 characters`, props.setAlert, props.resetAlert)\r\n            return null\r\n        }\r\n        if (message.includes('Path `description` (')) {\r\n            triggerAlert('warning', `description$: description of ${description.fields.value.length} characters must only have at most 3000 characters`, props.setAlert, props.resetAlert)\r\n            return null\r\n        }\r\n        if (message.includes('duplicate contactLink')) {\r\n            triggerAlert('warning', `group/contact link$: ${groupContactLink.fields.value} is not unique. Group/contact link must be unique`, props.setAlert, props.resetAlert)\r\n            return null\r\n        }\r\n    }\r\n    const [createPost] = useMutation( CREATE_POST, {\r\n        onError: handleError\r\n    })\r\n    const pallette = color ? palletteGenerator(color).colorPallette : {color: null, heigherColor: null}\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        if (!props.token) {\r\n            triggerAlert('warning', 'sign in$: must be signed in to perform this action', props.setAlert, props.resetAlert)\r\n            return null\r\n        }\r\n        if (!skillNameList.length || !groupContactLink.fields.value.length) {\r\n            triggerAlert('warning', 'all$: title, description, color, group/contact link, skills, and contribution are all required', props.setAlert, props.resetAlert)\r\n            return null\r\n        }\r\n        let cleanedTitle = []\r\n        for (const word of title.fields.value.split(' ')) {\r\n            if (word.length) cleanedTitle.push(word)\r\n        }\r\n        const postCreated = await createPost({\r\n            variables: {\r\n                title: cleanedTitle.join(' '),\r\n                user: props.currentUser._id,\r\n                skillNames: skillNameList,\r\n                skillCapacities: skillCapList,\r\n                skillFills: skillProposition,\r\n                description: description.fields.value,\r\n                contactLink: groupContactLink.fields.value,\r\n                color: color,\r\n                imageLinks: imageLinkList,\r\n                referenceLinks: referenceLinkList\r\n            }\r\n        })\r\n        if (postCreated) {\r\n            title.reset()\r\n            description.reset()\r\n            groupContactLink.reset()\r\n            setSkillName('')\r\n            setSkillNameList([])\r\n            setSkillCapacity('')\r\n            setSkillCapList([])\r\n            setImageLink('')\r\n            setImageLinkList([])\r\n            setReferenceLink('')\r\n            setReferenceLinkList([])\r\n            props.history.push(`/post/${encodeURIComponent(postCreated.data.addPost.title)}`)\r\n        }\r\n    }\r\n    const colors = [\r\n        'rgb(199,0,57)', 'rgb(224,52,77)', 'rgb(245,165,0)', 'rgb(250,116,79)', 'rgb(246,172,200)',\r\n        'rgb(16,79,37)', 'rgb(15,138,95)', 'rgb(140,186,81)', 'rgb(152,183,49)', 'rgb(127,205,145)', \r\n        'rgb(2,66,73)', 'rgb(15,76,117)', 'rgb(50,62,221)', 'rgb(1,152,173)', 'rgb(113,112,255)',  \r\n        'rgb(20,20,20)', 'rgb(60,60,60)', 'rgb(133,156,177)'\r\n    ]\r\n    const colorsHTML = colors.map(c => <div onClick={() => setColor(c)} className=\"color-ins\" style={{backgroundColor: c}} key={`PFC${c}`} />)\r\n    const addSkills = () => {\r\n        let cleanedSkill = []\r\n        for (const word of skillName.split(' ')) {\r\n            if (word.length) cleanedSkill.push(word)\r\n        }\r\n        setSkillName(cleanedSkill.join(' '))\r\n        if (Number(skillCapacity)){\r\n            setSkillNameList(skillNameList.concat(skillName.toLowerCase()))\r\n            setSkillName('')\r\n            setSkillCapList(skillCapList.concat(Number(skillCapacity)))\r\n            setSkillCapacity('')\r\n            setSkillProposition(null)\r\n            setSkillSelected(null)\r\n        }\r\n    }\r\n    const removeSkill = (ind) => {\r\n        const newSkillNameList = []\r\n        for (const i in skillNameList) {\r\n            if (i !== ind) { newSkillNameList.push(skillNameList[i]) }\r\n        }\r\n        setSkillNameList(newSkillNameList)\r\n        const newSkillCapList = []\r\n        for (const i in skillCapList) {\r\n            if (i !== ind) { newSkillCapList.push(skillCapList[i]) }\r\n        }\r\n        setSkillCapList(newSkillCapList)\r\n        const newSkillProposition = []\r\n        for (const i in props.skillProposition) {\r\n            if (i !== ind) { newSkillProposition.push(props.skillProposition[i]) }\r\n        }\r\n    }\r\n    \r\n    const removeImage = (ind) => {\r\n        const newImageLinkList = []\r\n        for (const i in imageLinkList) {\r\n            if (i !== ind) { newImageLinkList.push(imageLinkList[i]) }\r\n        }\r\n        setImageLinkList(newImageLinkList)\r\n    }\r\n    \r\n    const addImage = () => {\r\n        if (imageLink.includes('https://') || imageLink.includes('http://')) {\r\n            setImageLinkList(imageLinkList.concat(imageLink))\r\n            setImageLink('')\r\n        }\r\n    }\r\n\r\n    const removeRL = (ind) => {\r\n        const newReferenceLinkList = []\r\n        for (const i in referenceLinkList) {\r\n            if (i !== ind) { newReferenceLinkList.push(referenceLinkList[i]) }\r\n        }\r\n        setReferenceLinkList(newReferenceLinkList)\r\n    }\r\n\r\n    const addRL = () => {\r\n        if (referenceLink.includes('https://') || referenceLink.includes('http://')) {\r\n            setReferenceLinkList(referenceLinkList.concat(referenceLink))\r\n            setReferenceLink('')\r\n        }\r\n    }\r\n\r\n    const skillsHTML = () => {\r\n        let skillsHTML = []\r\n        for (const ind in skillNameList) {\r\n            skillsHTML.push(\r\n                <div className=\"PF-skill-wrapper\" key={`PFS${skillNameList[ind]}`}>\r\n                    <div className=\"PF-skill-container\">\r\n                        <div className=\"PF-skill-name\">{skillNameList[ind]}</div>\r\n                        <div className=\"PF-skill-cap\">{skillCapList[ind]}</div>\r\n                    </div>\r\n                    <div className=\"PF-skill-remove\" onClick={() => removeSkill(ind)}>x</div>\r\n                </div>\r\n            )\r\n        }\r\n        return skillsHTML\r\n    }\r\n\r\n    const skillContribution = () => {\r\n        if (!skillNameList.length) {\r\n            return <h4 className=\"PF-input-title\" style={{opacity: 0.7}}>must add skill first</h4>\r\n        }\r\n\r\n        const handleSkillSelect = (i) => {\r\n            const skillArray = Array(skillNameList.length).fill(0)\r\n            skillArray[i] = 1\r\n            setSkillProposition(skillArray)\r\n            setSkillSelected(skillNameList[i])\r\n        }\r\n\r\n        const skillMap = []\r\n        for (const i in skillNameList) {\r\n            const skillClass = skillSelected === skillNameList[i] ?\r\n                'skill-selected' : 'skill-normal'\r\n            skillMap.push(\r\n                <h4 onClick={() => handleSkillSelect(i, skillNameList[i])} className={skillClass} key={`SKILL${i}`}>{skillNameList[i]}</h4>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"skills-container\">\r\n                {skillMap}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const imagesHTML = () => {\r\n        const allImages = []\r\n        for (const ind in imageLinkList) {\r\n            allImages.push(\r\n                <div className=\"PF-image-display-container\" key={`IL${ind}`}>\r\n                    <img className=\"PF-image-display\" src={imageLinkList[ind]} alt={`(${imageLinkList[ind]}) failed to load`} key={`IL${imageLinkList[ind]}`} />\r\n                    <div onClick={() => removeImage(ind)} className=\"PF-skill-remove\" style={{height: '75px', lineHeight: '70px'}} >x</div>\r\n                </div>\r\n            )\r\n        }\r\n        return allImages.map(img => img)\r\n    }\r\n\r\n    const referenceLinksHTML = () => {\r\n        const allRL = []\r\n        for (const ind in referenceLinkList) {\r\n            allRL.push(\r\n                <div className=\"PF-link-container\" key={`RL${ind}`}>\r\n                    <a href={referenceLinkList[ind]} className=\"PF-reference-link neutralize-link\">{referenceLinkList[ind].split('/')[2]}</a>\r\n                    <div onClick={() => removeRL(ind)} className=\"PF-skill-remove\" style={{lineHeight: '30px'}}>x</div>\r\n                </div>\r\n            )\r\n        }\r\n        return allRL.map(rl => rl)\r\n    }\r\n    const groupCommType = () => {\r\n        const siteStats = websiteStats(groupContactLink.fields.value)\r\n        return (\r\n            <React.Fragment>\r\n                <a className=\"GCL-type\" href={groupContactLink.fields.value} title={siteStats.title} style={{backgroundColor: siteStats.color}}><img className=\"GCL-image\" src={siteStats.icon} alt={siteStats.title} /></a>\r\n                <input className=\"PF-search-input-normal\" id=\"PF-GC-Link\" {...groupContactLink.fields} style={{marginBottom: 0, borderColor: siteStats.color}} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    const signInWarning = props.token ? null : (\r\n        <h3 className=\"warning-container\">must be signed in to add post</h3>\r\n    )\r\n    const onSuggestionClicked = (skill) => {\r\n        const skillToEnter = `${skill} `\r\n        setSkillName(skillToEnter)\r\n    }\r\n    return (\r\n        <div className=\"post-form0-container\">\r\n            <div className=\"navbar-height\" />\r\n            {signInWarning}\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n                <div className=\"post-form0-form\">\r\n                    <h1 className=\"pp-form-title\" style={{textAlign: 'start', marginLeft: 0}}>create post</h1>\r\n                    <InputHeader info={false} title=\"title\" color=\"white\" inputFor=\"PF-title\" />\r\n                    <input className=\"PF-search-input\" id=\"PF-title\" {...title.fields} />\r\n                    <InputHeader info={true} title=\"description\" color=\"white\" inputFor=\"PF-description\" >\r\n                        <ul style={{margin: 0}}>\r\n                            <li>any links starting with (https://) or (http://) get decorated like this <a href=\"https://www.unilous.com/post-form/\" className=\"p-link neutralize-link\">http://decorated-link.com</a></li>\r\n                        </ul>\r\n                    </InputHeader>\r\n                    <textarea className=\"PF-search-input\" id=\"PF-description\" {...description.fields}  style={{height: '100px', width: '100%'}} />\r\n                    <InputHeader info={true} title=\"color\" color=\"white\" inputFor=\"\">\r\n                        <ul style={{margin: 0}}>\r\n                            <li>used sparingly to decorate the post</li>\r\n                        </ul>\r\n                    </InputHeader>\r\n                    <div className=\"PF-display-color\" style={{backgroundColor: pallette.color}} >\r\n                        <div className=\"PF-display-part\" style={{backgroundColor: pallette.color, color: pallette.textColor}}><h4 style={{margin: 'auto'}}>primary</h4></div>\r\n                        <div className=\"PF-display-part\" style={{backgroundColor: pallette.higherColor, color: pallette.textColor}}><h4 style={{margin: 'auto'}}>secondary</h4></div>\r\n                    </div>\r\n                    <div className=\"PF-input-colors\">\r\n                        {colorsHTML}\r\n                    </div>\r\n                    <InputHeader info={true} title=\"skills\" color=\"white\" inputFor=\"PF-skillName\">\r\n                        <p style={{margin: 0, marginBottom: '5px'}}>skills needed to execute the project</p>\r\n                        <p style={{margin: 0, marginBottom: '5px'}}>amount of people needed per skill</p>\r\n                    </InputHeader>\r\n                    <div>\r\n                        <div className=\"PF-skill-fields\">\r\n                            <input className=\"PF-search-input\" placeholder=\"skill name\" id=\"PF-skillName\" value={skillName} onChange={(e) => setSkillName(e.target.value)} type=\"text\" style={{marginBottom: 0}} />\r\n                            <input className=\"PF-search-input\" placeholder=\"amount of help\" value={skillCapacity} onChange={(e) => setSkillCapacity(e.target.value)} type=\"number\" style={{marginBottom: 0}} />\r\n                            <div className=\"PF-skill-sugg-container\">\r\n                                <SkillSugg query={skillName} onSuggestionClicked={onSuggestionClicked} style={{gridColumn: '1/2'}} />\r\n                            </div>\r\n                        </div>\r\n                        <h4 onClick={() => addSkills()} className=\"PF-field-submit standard-hover\">add skill</h4>               \r\n                    </div>\r\n                    {skillsHTML().map(s => s)}\r\n                    <InputHeader info={true} title=\"contribution\" color=\"white\" inputFor=\"\">\r\n                        <p style={{margin: 0, marginBottom: '5px'}}>skill you contribute to the project</p>\r\n                    </InputHeader>\r\n                    {skillContribution()}\r\n                    <InputHeader info={true} title=\"group/contact link\" color=\"white\" inputFor=\"PF-GC-Link\">\r\n                        <p style={{margin: 0, marginBottom: '5px'}}>link shown to users who have been accepted to join the project</p>\r\n                        <ul style={{margin: 0}}>\r\n                            <li>group links recommended: <strong>Slack</strong>, <strong>Trello</strong>, <strong>Discord</strong>, or <strong>WhatsApp</strong></li>\r\n                        </ul>\r\n                    </InputHeader>\r\n                    <div className=\"GCL-input\">\r\n                        {groupCommType()}\r\n                    </div>\r\n                    <InputHeader info={false} title=\"images\" color=\"white\" inputFor=\"PF-imageLinks\" />\r\n                    <input className=\"PF-search-input\" type=\"url\" placeholder=\"image link\" id=\"PF-imageLinks\" value={imageLink} onChange={(e) => setImageLink(e.target.value)} style={{marginBottom: 0}} />\r\n                    <h4 onClick={() => addImage()} className=\"PF-field-submit standard-hover\">add image</h4>\r\n                    <div className=\"PF-images-container\">\r\n                        {imagesHTML()}\r\n                    </div>\r\n                    <InputHeader info={false} title=\"links\" color=\"white\" inputFor=\"PF-referenceLinks\" />\r\n                    <input className=\"PF-search-input\" type=\"url\" id=\"PF-referenceLinks\" value={referenceLink} onChange={(e) => setReferenceLink(e.target.value)} style={{marginBottom: 0}} />\r\n                    <h4 onClick={() => addRL()} className=\"PF-field-submit standard-hover\">add link</h4>\r\n                    {referenceLinksHTML()}\r\n                </div>\r\n                <button type=\"submit\" className=\"PF-submit standard-hover\"><h2 style={{margin: '5px'}}>create post</h2></button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nPostFormPage = withRouter(PostFormPage)\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n        skillProposition: state.skillProposition,\r\n        currentUser: state.currentUser,\r\n        token: state.token\r\n\t}\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    { setAlert, resetAlert }\r\n)(PostFormPage)"]},"metadata":{},"sourceType":"module"}