{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\Projects\\\\projectU\\\\projectu\\\\components\\\\post\\\\PostSmall.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/react-hooks';\nimport { REMOVE_SAVED_POST } from '../../src/schemas/mutations'; // import userIcon from '../../static/svg/userB.svg'\n\nimport { setCurrentUserPosts, setCurrentUserSP } from '../../redux/reducers/currentUser';\nimport { setAlert, resetAlert } from '../../redux/reducers/alertNotif';\nimport { triggerAlert, palletteGenerator } from '../../src/functions/functions';\nimport PT from '../../styles/post.module.css';\n\nconst PostSmall = props => {\n  const handleError = e => {\n    console.log(e);\n  }; // const [ deletePostMutation ] = useMutation(DELETE_POST, {\n  //     onError: handleError\n  // })\n\n\n  const [removeSPMutation] = useMutation(REMOVE_SAVED_POST, {\n    onError: handleError\n  });\n  const p = props.post;\n  const user = props.post.user ? props.post.user.username : props.user;\n  const pallette = palletteGenerator(p.color).colorPallette; // const handleRemove = async () => {\n  //     const result = await deletePostMutation({\n  //         variables: {postId: props.post._id}\n  //     })\n  //     if (result) {\n  //         props.setCurrentUserPosts(props.currentUser.posts.filter(p => p._id !== props.post._id))\n  //         triggerAlert('danger', `deleted $: deleted post '${p.title}'`, props.setAlert, props.resetAlert)\n  //     }\n  // }\n\n  const handleSaveRemove = async () => {\n    const result = await removeSPMutation({\n      variables: {\n        user: props.currentUser._id,\n        postId: p._id\n      }\n    });\n\n    if (result) {\n      const newSavedPosts = props.currentUser.savedPosts.filter(post => post._id !== p._id);\n      props.setCurrentUserSP(newSavedPosts);\n      triggerAlert('danger', `unfollowed$: unfollowed post '${p.title}'`, props.setAlert, props.resetAlert);\n    }\n  };\n\n  if (props.type === 'saved') {\n    return __jsx(\"div\", {\n      className: \"post-wrapper-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"post-color-indicator\",\n      style: {\n        backgroundColor: pallette.color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: PT.postContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: PT.post - header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      to: `/user/${encodeURIComponent(user.username)}`,\n      className: `PT.PHUser neutralize-link`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, __jsx(\"img\", {\n      className: PT.PHU - icon,\n      src: \"/svg/userB.svg\",\n      alt: \"user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }, user))), __jsx(\"div\", {\n      to: `/post/${encodeURIComponent(p.title)}`,\n      className: \"neutralize-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, __jsx(\"h3\", {\n      className: PT.post - title,\n      style: {\n        marginBottom: '7px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 98\n      }\n    }, p.title))), __jsx(\"div\", {\n      onClick: () => handleSaveRemove(),\n      className: \"post-sm-remove\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"x\"));\n  }\n\n  if (props.currentUser) {\n    if (user === props.currentUser.username) {\n      return __jsx(\"div\", {\n        className: \"post-wrapper-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"post-color-indicator\",\n        style: {\n          backgroundColor: pallette.color\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }), __jsx(\"div\", {\n        className: \"post-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"post-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        to: `/user/${encodeURIComponent(user)}`,\n        className: \"PH-user neutralize-link \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }\n      }, __jsx(\"img\", {\n        className: \"PHU-icon\",\n        src: \"/svg/userB.svg\",\n        alt: \"user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 33\n        }\n      }), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 33\n        }\n      }, user))), __jsx(\"div\", {\n        to: `/post/${encodeURIComponent(p.title)}`,\n        className: \"neutralize-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      }, __jsx(\"h3\", {\n        className: \"post-title\",\n        style: {\n          marginBottom: '7px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 102\n        }\n      }, p.title))));\n    }\n  }\n\n  return __jsx(\"div\", {\n    className: \"post-wrapper-sm\",\n    style: {\n      gridTemplateColumns: '8px auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"post-color-indicator\",\n    style: {\n      backgroundColor: pallette.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"post-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"post-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    to: `/user/${encodeURIComponent(props.user)}`,\n    className: \"PH-user neutralize-link \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    className: \"PHU-icon\",\n    src: \"/svg/userB.svg\",\n    alt: \"user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, user))), __jsx(\"div\", {\n    to: `/post/${encodeURIComponent(p.title)}`,\n    className: \"neutralize-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, __jsx(\"h3\", {\n    className: \"post-title\",\n    style: {\n      marginBottom: '7px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 94\n    }\n  }, p.title))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setCurrentUserPosts,\n  setCurrentUserSP,\n  setAlert,\n  resetAlert\n})(PostSmall);","map":{"version":3,"sources":["C:/Code/Projects/projectU/projectu/components/post/PostSmall.js"],"names":["React","connect","Link","useMutation","REMOVE_SAVED_POST","setCurrentUserPosts","setCurrentUserSP","setAlert","resetAlert","triggerAlert","palletteGenerator","PT","PostSmall","props","handleError","e","console","log","removeSPMutation","onError","p","post","user","username","pallette","color","colorPallette","handleSaveRemove","result","variables","currentUser","_id","postId","newSavedPosts","savedPosts","filter","title","type","backgroundColor","postContainer","header","encodeURIComponent","PHU","icon","marginBottom","gridTemplateColumns","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { REMOVE_SAVED_POST } from '../../src/schemas/mutations'\r\n// import userIcon from '../../static/svg/userB.svg'\r\nimport { setCurrentUserPosts, setCurrentUserSP } from '../../redux/reducers/currentUser'\r\nimport { setAlert, resetAlert } from '../../redux/reducers/alertNotif'\r\nimport { triggerAlert, palletteGenerator } from '../../src/functions/functions'\r\nimport PT from '../../styles/post.module.css'\r\n\r\nconst PostSmall = (props) => {\r\n    const handleError = (e) => {\r\n        console.log(e)\r\n    }\r\n    // const [ deletePostMutation ] = useMutation(DELETE_POST, {\r\n    //     onError: handleError\r\n    // })\r\n    const [ removeSPMutation ] = useMutation(REMOVE_SAVED_POST, {\r\n        onError: handleError\r\n    })\r\n    const p = props.post\r\n    const user = props.post.user ? props.post.user.username : props.user\r\n    const pallette = palletteGenerator(p.color).colorPallette\r\n    // const handleRemove = async () => {\r\n    //     const result = await deletePostMutation({\r\n    //         variables: {postId: props.post._id}\r\n    //     })\r\n    //     if (result) {\r\n    //         props.setCurrentUserPosts(props.currentUser.posts.filter(p => p._id !== props.post._id))\r\n    //         triggerAlert('danger', `deleted $: deleted post '${p.title}'`, props.setAlert, props.resetAlert)\r\n    //     }\r\n    // }\r\n    const handleSaveRemove = async () => {\r\n        const result = await removeSPMutation({\r\n            variables: {\r\n                user: props.currentUser._id,\r\n                postId: p._id\r\n            }\r\n        })\r\n        if (result) {\r\n            const newSavedPosts = props.currentUser.savedPosts.filter(post => post._id !== p._id)\r\n            props.setCurrentUserSP(newSavedPosts)\r\n            triggerAlert('danger', `unfollowed$: unfollowed post '${p.title}'`, props.setAlert, props.resetAlert)\r\n        }\r\n    }\r\n    \r\n    if (props.type === 'saved') {\r\n        return (\r\n            <div className=\"post-wrapper-sm\">\r\n                <div className=\"post-color-indicator\" style={{backgroundColor: pallette.color}} />\r\n                <div className={PT.postContainer}>\r\n                    <div className={PT.post-header}>\r\n                        <div to={`/user/${encodeURIComponent(user.username)}`} className={`PT.PHUser neutralize-link`}>\r\n                            <img className={PT.PHU-icon} src=\"/svg/userB.svg\" alt=\"user\" />\r\n                            <div>{user}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div to={`/post/${encodeURIComponent(p.title)}`} className=\"neutralize-link\"><h3 className={PT.post-title} style={{marginBottom: '7px'}}>{p.title}</h3></div>\r\n                </div>\r\n                <div onClick={() => handleSaveRemove()} className=\"post-sm-remove\">x</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (props.currentUser) {\r\n        if (user === props.currentUser.username) {\r\n            return (\r\n                <div className=\"post-wrapper-sm\">\r\n                    <div className=\"post-color-indicator\" style={{backgroundColor: pallette.color}} />\r\n                    <div className=\"post-container\">\r\n                        <div className=\"post-header\">\r\n                            <div to={`/user/${encodeURIComponent(user)}`} className=\"PH-user neutralize-link \">\r\n                                <img className=\"PHU-icon\" src=\"/svg/userB.svg\" alt=\"user\" />\r\n                                <div>{user}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div to={`/post/${encodeURIComponent(p.title)}`} className=\"neutralize-link\"><h3 className=\"post-title\" style={{marginBottom: '7px'}}>{p.title}</h3></div>\r\n                    </div>\r\n                    {/* <div onClick={() => handleRemove()} className=\"post-sm-remove\">x</div> */}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"post-wrapper-sm\" style={{gridTemplateColumns: '8px auto'}}>\r\n            <div className=\"post-color-indicator\" style={{backgroundColor: pallette.color}} />\r\n            <div className=\"post-container\">\r\n                <div className=\"post-header\">\r\n                    <div to={`/user/${encodeURIComponent(props.user)}`} className=\"PH-user neutralize-link \">\r\n                        <img className=\"PHU-icon\" src=\"/svg/userB.svg\" alt=\"user\" />\r\n                        <div>{user}</div>\r\n                    </div>\r\n                </div>\r\n                <div to={`/post/${encodeURIComponent(p.title)}`} className=\"neutralize-link\"><h3 className=\"post-title\" style={{marginBottom: '7px'}}>{p.title}</h3></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n        currentUser: state.currentUser,\r\n\t}\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    { setCurrentUserPosts, setCurrentUserSP, setAlert, resetAlert }\r\n)(PostSmall)"]},"metadata":{},"sourceType":"module"}