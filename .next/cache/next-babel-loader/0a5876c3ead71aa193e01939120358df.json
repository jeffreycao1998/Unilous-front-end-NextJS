{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\Projects\\\\projectU\\\\projectu\\\\components\\\\postPage\\\\PostImages.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PP from '../../styles/pages/newPostPage.module.css';\n\nconst PostImages = props => {\n  _s();\n\n  console.log(props.imageLinks);\n  const {\n    0: imgShown,\n    1: setImgShown\n  } = useState(null);\n  const images = props.imageLinks;\n  const imagesAmt = images.length;\n  useEffect(() => {\n    if (imagesAmt > 0) setImgShown(images[0]);\n  }, [images, imagesAmt]);\n\n  const setToImgShown = src => {\n    setImgShown(src);\n  };\n\n  const HIStyle = {\n    borderColor: props.color,\n    width: '100%'\n  };\n  if (imagesAmt === 0) return null;else if (imagesAmt === 1) {\n    return __jsx(\"div\", {\n      className: PP.PPCPicturesContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, __jsx(\"img\", {\n      style: HIStyle,\n      className: PP.PPCPicturesHighlight,\n      src: imgShown,\n      alt: \"highlight pic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }));\n  } else {\n    const imageOptions = images.map(i => i === imgShown ? __jsx(\"img\", {\n      key: `img${i}`,\n      onClick: () => setToImgShown(i),\n      className: PP.PPCPicturesInstance,\n      style: {\n        borderColor: props.color\n      },\n      src: i,\n      alt: \"pic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }) : __jsx(\"img\", {\n      key: `img${i}`,\n      onClick: () => setToImgShown(i),\n      className: PP.PPCPicturesInstance,\n      style: {\n        borderColor: '#282828'\n      },\n      src: i,\n      alt: \"pic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }));\n    return __jsx(\"div\", {\n      className: PP.PPCPicturesContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, __jsx(\"img\", {\n      style: HIStyle,\n      className: PP.PPCPicturesHighlight,\n      src: imgShown,\n      alt: \"highlight pic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: PP.PPCAllPicturesContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, imageOptions));\n  }\n}; // const mapStateToProps = (state) => {\n// \treturn {\n//         \n// \t}\n// }\n\n\n_s(PostImages, \"TScVIPFln6O07/i/wGe6qJj5grg=\");\n\n_c = PostImages;\nexport default connect(null)(PostImages);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostImages\");","map":{"version":3,"sources":["C:/Code/Projects/projectU/projectu/components/postPage/PostImages.js"],"names":["React","useState","useEffect","connect","PP","PostImages","props","console","log","imageLinks","imgShown","setImgShown","images","imagesAmt","length","setToImgShown","src","HIStyle","borderColor","color","width","PPCPicturesContainer","PPCPicturesHighlight","imageOptions","map","i","PPCPicturesInstance","PPCAllPicturesContainer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PP from '../../styles/pages/newPostPage.module.css'\r\n\r\nconst PostImages = (props) => {\r\n    console.log(props.imageLinks)\r\n    const [imgShown, setImgShown] = useState(null)\r\n    \r\n    const images = props.imageLinks\r\n    const imagesAmt = images.length\r\n    useEffect(() => {\r\n        if (imagesAmt > 0) setImgShown(images[0])\r\n    }, [images, imagesAmt])\r\n    const setToImgShown = (src) =>  {\r\n        setImgShown(src)\r\n    }\r\n    \r\n\r\n    const HIStyle = {\r\n            borderColor: props.color,\r\n            width: '100%'   \r\n        }\r\n    if (imagesAmt === 0) return null\r\n    else if (imagesAmt  === 1) {\r\n        return (\r\n            <div className={PP.PPCPicturesContainer}>\r\n                <img style={HIStyle} className={PP.PPCPicturesHighlight} src={imgShown} alt=\"highlight pic\" />\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        const imageOptions = images.map(i => i === imgShown ?\r\n            <img key={`img${i}`} onClick={() => setToImgShown(i)} className={PP.PPCPicturesInstance} style={{borderColor: props.color}} src={i} alt=\"pic\" />\r\n            :\r\n            <img key={`img${i}`} onClick={() => setToImgShown(i)} className={PP.PPCPicturesInstance} style={{borderColor: '#282828'}} src={i} alt=\"pic\" />\r\n        )\r\n        \r\n        return (\r\n            <div className={PP.PPCPicturesContainer}>\r\n                <img style={HIStyle} className={PP.PPCPicturesHighlight} src={imgShown} alt=\"highlight pic\" />\r\n                <div className={PP.PPCAllPicturesContainer}>\r\n                    {imageOptions}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n// \treturn {\r\n//         \r\n// \t}\r\n// }\r\nexport default connect(\r\n    null\r\n)(PostImages)"]},"metadata":{},"sourceType":"module"}