{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\Projects\\\\projectU\\\\projectu\\\\components\\\\user\\\\utilities\\\\UserNotifList.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useQuery } from '@apollo/react-hooks';\nimport { LIST_OF_NOTIFICATIONS } from '../../../src/schemas/queries';\nimport { setCurrentUserNotifications } from '../../../redux/reducers/currentUser';\nimport Notif from './Notif';\nimport Loading from '../../Loading';\nimport apollo, { apolloClient } from '../../../lib/apollo';\nimport { bindActionCreators } from 'redux';\n\nconst UserNotifList = props => {\n  const notifsListQuery = useQuery(LIST_OF_NOTIFICATIONS, {\n    // variables: {notifications: props.currentUser.notifications.map(n => n._id)}\n    variables: {\n      notifications: [\"5ea3a4ea138c01000450206d\", \"5ea4692a80819a0004a37f1a\"]\n    }\n  })[(\"5ea3a4ea138c01000450206d\", \"5ea4692a80819a0004a37f1a\")];\n  console.log(notifsListQuery); // const notifsListQuery = apolloClient.query({\n  //     query: LIST_OF_NOTIFICATIONS,\n  //     variables: {notifications: props.currentUser.notifications.map(n => n._id)}\n  // }).catch(err => console.log(err))\n\n  const {\n    0: sentFilter,\n    1: setSentFilter\n  } = useState('to you');\n  const {\n    0: showSFDD,\n    1: setShowSFDD\n  } = useState(false);\n  const {\n    0: statusFilter,\n    1: setStatusFilter\n  } = useState('pending');\n  const {\n    0: showStatusDD,\n    1: setShowStatusDD\n  } = useState(false);\n\n  const notifsListConditions = (query, reducer) => {\n    if (!query) {\n      return null;\n    }\n\n    if (!query.listOfNotifications) {\n      return null;\n    }\n\n    if (reducer.length === 0) {\n      return null;\n    }\n\n    if (reducer[0].userTo) {\n      if (query.listOfNotifications[0]._id === reducer[0]._id) {\n        return null;\n      }\n    }\n\n    return query;\n  };\n\n  const notifsList = notifsListConditions(notifsListQuery.data, props.currentUser.notifications);\n  useEffect(() => {\n    if (notifsList) {\n      props.setCurrentUserNotifications(notifsList);\n    }\n  }, [notifsList, props, props.setCurrentUserNotifications]);\n\n  if (props.currentUser.notifications.length > 0) {\n    if (!props.currentUser.notifications[0].userTo) {\n      return __jsx(\"div\", {\n        style: {\n          gridColumn: '1/3'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        style: {\n          height: '5vh'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }), __jsx(Loading, {\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n  const Filter = () => {\n    const sentOptions = () => {\n      const allOptions = ['from you', 'to you'];\n\n      const onOptionClick = option => {\n        setSentFilter(option);\n        setShowSFDD(!showSFDD);\n      };\n\n      return allOptions.map(o => o !== sentFilter ? __jsx(\"div\", {\n        onClick: () => onOptionClick(o),\n        className: \"NF-DD-option\",\n        key: `SFDD${o}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 59\n        }\n      }, o) : null);\n    };\n\n    const sentDD = showSFDD ? __jsx(\"div\", {\n      className: \"NF-dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"NF-splitter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }), sentOptions()) : null;\n\n    const statusOptions = () => {\n      const allOptions = ['all', 'accepted', 'declined', 'pending', 'messages'];\n\n      const onOptionClick = option => {\n        setStatusFilter(option);\n        setShowStatusDD(!showStatusDD);\n      };\n\n      return allOptions.map(o => o !== statusFilter ? __jsx(\"div\", {\n        onClick: () => onOptionClick(o),\n        className: `${o}-option NF-DD-option`,\n        key: `StatusDD${o}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 61\n        }\n      }, o) : null);\n    };\n\n    const statusDD = showStatusDD ? __jsx(\"div\", {\n      className: \"NF-dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"NF-splitter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }), statusOptions()) : null;\n    return __jsx(\"div\", {\n      className: \"notif-filter-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"NF-creator-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, __jsx(\"h4\", {\n      className: \"NF-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, \"status\"), __jsx(\"div\", {\n      className: \"NF-option-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      onClick: () => setShowStatusDD(!showStatusDD),\n      className: `${statusFilter}-option NF-option`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, statusFilter), statusDD)), __jsx(\"div\", {\n      className: \"NF-creator-container\",\n      style: {\n        marginLeft: '15px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, __jsx(\"h4\", {\n      className: \"NF-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, \"sent\"), __jsx(\"div\", {\n      className: \"NF-option-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      onClick: () => setShowSFDD(!showSFDD),\n      className: \"NF-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, sentFilter), sentDD)));\n  };\n\n  const statusConditions = notif => {\n    if (statusFilter === 'all') return true;\n    const notifStatus = notif.accepted === null ? 'pending' : notif.accepted ? notif.post ? 'accepted' : 'messages' : 'declined';\n    if (statusFilter === notifStatus) return true;\n    return false;\n  };\n\n  const sentConditions = notif => {\n    if (sentFilter === 'all') return true;\n    const sentStatus = notif.userFrom.username === props.currentUser.username ? 'from you' : 'to you';\n    if (sentFilter === sentStatus) return true;\n    return false;\n  };\n\n  const showNotifications = props.currentUser.notifications.map(n => {\n    if (statusConditions(n) && sentConditions(n)) {\n      return __jsx(Notif, {\n        notif: n,\n        key: `UN${n._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return null;\n  }).reverse();\n  return __jsx(\"div\", {\n    className: \"userUtil-notif\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, __jsx(Filter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    style: {\n      height: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }), showNotifications, __jsx(\"div\", {\n    style: {\n      height: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentUserNotifications: bindActionCreators(setCurrentUserNotifications, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserNotifList);","map":{"version":3,"sources":["C:/Code/Projects/projectU/projectu/components/user/utilities/UserNotifList.js"],"names":["React","useState","useEffect","connect","useQuery","LIST_OF_NOTIFICATIONS","setCurrentUserNotifications","Notif","Loading","apollo","apolloClient","bindActionCreators","UserNotifList","props","notifsListQuery","variables","notifications","console","log","sentFilter","setSentFilter","showSFDD","setShowSFDD","statusFilter","setStatusFilter","showStatusDD","setShowStatusDD","notifsListConditions","query","reducer","listOfNotifications","length","userTo","_id","notifsList","data","currentUser","gridColumn","height","Filter","sentOptions","allOptions","onOptionClick","option","map","o","sentDD","statusOptions","statusDD","marginLeft","statusConditions","notif","notifStatus","accepted","post","sentConditions","sentStatus","userFrom","username","showNotifications","n","reverse","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport { LIST_OF_NOTIFICATIONS } from '../../../src/schemas/queries'\r\nimport { setCurrentUserNotifications } from'../../../redux/reducers/currentUser'\r\nimport Notif from './Notif'\r\nimport Loading from '../../Loading'\r\nimport apollo, {apolloClient} from '../../../lib/apollo'\r\nimport {bindActionCreators} from 'redux'\r\n\r\n\r\n\r\nconst UserNotifList = (props) => {\r\n    \r\n    const notifsListQuery = useQuery(LIST_OF_NOTIFICATIONS, {\r\n        // variables: {notifications: props.currentUser.notifications.map(n => n._id)}\r\n        variables: {notifications: [ \"5ea3a4ea138c01000450206d\", \"5ea4692a80819a0004a37f1a\" ]}\r\n    })\r\n    [ \"5ea3a4ea138c01000450206d\", \"5ea4692a80819a0004a37f1a\" ]\r\n    console.log(notifsListQuery)\r\n    // const notifsListQuery = apolloClient.query({\r\n    //     query: LIST_OF_NOTIFICATIONS,\r\n    //     variables: {notifications: props.currentUser.notifications.map(n => n._id)}\r\n    // }).catch(err => console.log(err))\r\n\r\n    const [sentFilter, setSentFilter] = useState('to you')\r\n    const [showSFDD, setShowSFDD] = useState(false)\r\n    const [statusFilter, setStatusFilter] = useState('pending')\r\n    const [showStatusDD, setShowStatusDD] = useState(false)\r\n\r\n    const notifsListConditions = (query, reducer) => {\r\n        if (!query) { return null }\r\n        if (!query.listOfNotifications) { return null }\r\n        if (reducer.length === 0) { return null }\r\n        if (reducer[0].userTo) {\r\n            if (query.listOfNotifications[0]._id === reducer[0]._id ) { return null }\r\n        }\r\n        return query\r\n    }\r\n    \r\n\r\n    const notifsList = notifsListConditions(notifsListQuery.data, props.currentUser.notifications)\r\n\r\n    useEffect(() => {\r\n        if (notifsList) {\r\n            props.setCurrentUserNotifications(notifsList)\r\n        }\r\n    }, [notifsList, props, props.setCurrentUserNotifications])\r\n\r\n    if (props.currentUser.notifications.length > 0) {\r\n        if (!props.currentUser.notifications[0].userTo) {\r\n            return (\r\n                <div style={{gridColumn: '1/3'}}>\r\n                    <div style={{height: '5vh'}}/>\r\n                    <Loading color=\"white\" />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const Filter = () => {\r\n        const sentOptions = () => {\r\n            const allOptions = ['from you', 'to you']\r\n            const onOptionClick = (option) => {\r\n                setSentFilter(option)\r\n                setShowSFDD(!showSFDD)\r\n            }\r\n            return allOptions.map(o => o !== sentFilter ? <div onClick={() => onOptionClick(o)} className=\"NF-DD-option\" key={`SFDD${o}`}>{o}</div> : null)\r\n        }\r\n        const sentDD = showSFDD ? (\r\n                <div className=\"NF-dropdown\">\r\n                    <div className=\"NF-splitter\" />\r\n                    {sentOptions()}\r\n                </div>\r\n            ): null\r\n\r\n        const statusOptions = () => {\r\n            const allOptions = ['all', 'accepted', 'declined', 'pending', 'messages']\r\n            const onOptionClick = (option) => {\r\n                setStatusFilter(option)\r\n                setShowStatusDD(!showStatusDD)\r\n            }\r\n            return allOptions.map(o => o !== statusFilter ? <div onClick={() => onOptionClick(o)} className={`${o}-option NF-DD-option`} key={`StatusDD${o}`}>{o}</div> : null)\r\n        }\r\n        const statusDD = showStatusDD ? (\r\n                <div className=\"NF-dropdown\">\r\n                    <div className=\"NF-splitter\" />\r\n                    {statusOptions()}\r\n                </div>\r\n            ): null\r\n        return (\r\n            <div className=\"notif-filter-container\">\r\n                <div className=\"NF-creator-container\">\r\n                    <h4 className=\"NF-label\">status</h4>\r\n                    <div className=\"NF-option-container\">\r\n                        <div onClick={() => setShowStatusDD(!showStatusDD)} className={`${statusFilter}-option NF-option`}>{statusFilter}</div>\r\n                        {statusDD}\r\n                    </div>\r\n                </div>\r\n                <div className=\"NF-creator-container\" style={{marginLeft: '15px'}}>\r\n                    <h4 className=\"NF-label\">sent</h4>\r\n                    <div className=\"NF-option-container\">\r\n                        <div onClick={() => setShowSFDD(!showSFDD)} className=\"NF-option\">{sentFilter}</div>\r\n                        {sentDD}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const statusConditions = (notif) => {\r\n        if (statusFilter === 'all') return true\r\n        const notifStatus = notif.accepted === null ?\r\n            'pending' : \r\n            notif.accepted ?\r\n            notif.post ?\r\n                'accepted' : 'messages'\r\n            : 'declined'\r\n        if (statusFilter === notifStatus) return true\r\n        return false\r\n    }\r\n    const sentConditions = (notif) => {\r\n        if (sentFilter === 'all') return true\r\n        const sentStatus = notif.userFrom.username === props.currentUser.username ?\r\n            'from you' : 'to you'\r\n        if (sentFilter === sentStatus) return true\r\n        return false\r\n    }\r\n    const showNotifications = props.currentUser.notifications.map(n => {\r\n        if (statusConditions(n) && sentConditions(n)){\r\n            return <Notif notif={n} key={`UN${n._id}`}/>\r\n        }\r\n        return null\r\n    }).reverse()\r\n    return (\r\n        <div className=\"userUtil-notif\">\r\n            <Filter />\r\n            <div style={{height: '10px'}} />\r\n            {showNotifications}\r\n            <div style={{height: '10px'}} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n        currentUser: state.currentUser\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setCurrentUserNotifications: bindActionCreators(setCurrentUserNotifications, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(UserNotifList)"]},"metadata":{},"sourceType":"module"}