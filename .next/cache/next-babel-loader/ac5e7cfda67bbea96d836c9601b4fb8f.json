{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\Projects\\\\projectU\\\\projectu\\\\components\\\\Layout.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { setCurrentUser, setPendingNotifications } from './reducers/currentUser';\nimport { setToken } from './reducers/token';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\nimport NavBar from './components/navBar/NavBar';\nimport { FIND_USER, PENDING_NOTIFS } from './schemas/queries';\n\nconst Layout = props => {\n  const {\n    0: query,\n    1: setQuery\n  } = useState('');\n\n  const onQueryChange = event => {\n    setQuery(event.target.value);\n  };\n\n  if (localStorage.getItem('token') && props.token === null) {\n    props.setToken(localStorage.getItem('token'));\n  }\n\n  const currentUserId = props.currentUser ? props.currentUser._id : 'thisisfake';\n  const pendingNotifsQuery = useQuery(PENDING_NOTIFS, {\n    variables: {\n      userId: currentUserId\n    }\n  });\n  const currentUserUN = localStorage.getItem('username') ? localStorage.getItem('username') : 'thisisfake';\n  const userQuery = useQuery(FIND_USER, {\n    variables: {\n      username: currentUserUN\n    }\n  });\n\n  const pendingNotifsConditions = () => {\n    if (!pendingNotifsQuery.data) return null;\n    if (props.currentUser && props.currentUser.pendingNotifications) return null;\n    return pendingNotifsQuery.data.searchAwaitingNotifs;\n  };\n\n  const userConditions = (query, reducer) => {\n    if (!query.data) return null;\n    if (!query.data.findUser) return null;\n    if (reducer) return null;\n    return query.data.findUser;\n  };\n\n  const pendingNotifs = pendingNotifsConditions();\n  const user = userConditions(userQuery, props.currentUser);\n  useEffect(() => {\n    if (user) {\n      props.setCurrentUser(user);\n    }\n\n    if (pendingNotifs) {\n      props.setPendingNotifications(pendingNotifs);\n    }\n  }, [user, props.currentUser, props, pendingNotifs, props.setPendingNotifications]);\n  return __jsx(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(NavBar, {\n    query: query,\n    onQueryChange: onQueryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), __jsx(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => __jsx(PostPage, {\n      home: true,\n      postTitle: \"Unilous\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 47\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), __jsx(Route, {\n    exact: true,\n    path: \"/contact/\",\n    render: () => __jsx(Contact, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 55\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), __jsx(Route, {\n    exact: true,\n    path: \"/browse/\",\n    render: () => __jsx(Results, {\n      query: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 54\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), __jsx(Route, {\n    path: \"/browse/:query\",\n    render: ({\n      match\n    }) => __jsx(Results, {\n      query: match.params.query,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 61\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), __jsx(Route, {\n    exact: true,\n    path: \"/post-form/\",\n    render: () => __jsx(PostFormPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 57\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), __jsx(Route, {\n    path: \"/post/:title\",\n    render: ({\n      match\n    }) => __jsx(PostPage, {\n      postTitle: match.params.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 59\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), __jsx(Route, {\n    path: \"/user/:username\",\n    render: ({\n      match\n    }) => __jsx(UserPage, {\n      userUsername: match.params.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 62\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default Layout;","map":{"version":3,"sources":["C:/Code/Projects/projectU/projectu/components/Layout.js"],"names":["React","useState","useEffect","setCurrentUser","setPendingNotifications","setToken","connect","BrowserRouter","Router","Route","useQuery","NavBar","FIND_USER","PENDING_NOTIFS","Layout","props","query","setQuery","onQueryChange","event","target","value","localStorage","getItem","token","currentUserId","currentUser","_id","pendingNotifsQuery","variables","userId","currentUserUN","userQuery","username","pendingNotifsConditions","data","pendingNotifications","searchAwaitingNotifs","userConditions","reducer","findUser","pendingNotifs","user","match","params","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { setCurrentUser, setPendingNotifications } from './reducers/currentUser'\r\nimport { setToken } from './reducers/token'\r\nimport { connect } from 'react-redux'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport NavBar from './components/navBar/NavBar'\r\nimport { FIND_USER, PENDING_NOTIFS } from './schemas/queries'\r\n\r\nconst Layout = (props) => {\r\n    const [query, setQuery] = useState('')\r\n\r\n    const onQueryChange = (event) => {\r\n      setQuery(event.target.value)\r\n    }\r\n    if (localStorage.getItem('token') && props.token === null) {\r\n      props.setToken(localStorage.getItem('token'))\r\n    }\r\n    const currentUserId = props.currentUser ? props.currentUser._id : 'thisisfake'\r\n    const pendingNotifsQuery = useQuery(PENDING_NOTIFS, {\r\n      variables:  {userId: currentUserId}\r\n    })\r\n    const currentUserUN = localStorage.getItem('username') ? localStorage.getItem('username') : 'thisisfake'\r\n    const userQuery = useQuery(FIND_USER, {\r\n      variables: {username: currentUserUN}\r\n    })\r\n    const pendingNotifsConditions = () => {\r\n      if (!pendingNotifsQuery.data) return null\r\n      if (props.currentUser && props.currentUser.pendingNotifications) return null\r\n      return pendingNotifsQuery.data.searchAwaitingNotifs\r\n    }\r\n    const userConditions = (query, reducer) => {\r\n      if (!query.data) return null\r\n      if (!query.data.findUser) return null\r\n      if (reducer) return null\r\n      return query.data.findUser\r\n    }\r\n    const pendingNotifs = pendingNotifsConditions()\r\n    const user = userConditions(userQuery, props.currentUser)\r\n    useEffect(() => {\r\n      if (user) {\r\n        props.setCurrentUser(user)\r\n      }\r\n      if (pendingNotifs) {\r\n        props.setPendingNotifications(pendingNotifs)\r\n      }\r\n    }, [user, props.currentUser, props, pendingNotifs, props.setPendingNotifications])\r\n  \r\n    return (\r\n      <div className=\"wrapper\">\r\n        <Router>\r\n          <NavBar query={query} onQueryChange={onQueryChange} />\r\n          <Route exact path=\"/\" render={() => <PostPage home={true} postTitle=\"Unilous\" /> } />\r\n          <Route exact path=\"/contact/\" render={() => <Contact />} />\r\n          <Route exact path=\"/browse/\" render={() => <Results query=\"\" /> } />\r\n          <Route path=\"/browse/:query\" render={({match}) => <Results query={match.params.query} /> } />\r\n          <Route exact path=\"/post-form/\" render={() => <PostFormPage /> } />\r\n          <Route path=\"/post/:title\" render={({match}) => <PostPage postTitle={match.params.title} /> } />\r\n          <Route path=\"/user/:username\" render={({match}) => <UserPage userUsername={match.params.username} /> } />\r\n        </Router>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Layout"]},"metadata":{},"sourceType":"module"}