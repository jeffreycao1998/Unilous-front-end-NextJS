{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\Projects\\\\projectU\\\\projectu\\\\pages\\\\homePage.js\";\nvar __jsx = React.createElement;\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport Link from 'next/link';\nimport { withRouter } from 'next/router';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Layout from '../components/Layout';\nimport Loading from '../components/Loading';\nimport PostQandA from '../components/postPage/PostQandA';\nimport InputHeader from '../components/text-field/InputHeader';\nimport { apolloClient } from '../lib/apollo';\nimport { resetAlert, setAlert } from '../redux/reducers/alertNotif';\nimport { setCurrentUserSP } from '../redux/reducers/currentUser';\nimport { setToken } from '../redux/reducers/token';\nimport { palletteGenerator, triggerAlert, useField } from '../functions/functions';\nimport { ASK_QUESTION, MAKE_NOTIFICATION, SAVE_POST } from '../schemas/mutations';\nimport { FIND_POST, Q_AND_A_NOTIFS } from '../schemas/queries';\nimport indexStyle from '../styles/pages/homePage.module.css';\nimport ppStyle from '../styles/pages/newPostPage.module.css';\nconst PostPage = withRouter(props => {\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    id: \"filler\",\n    style: {\n      height: 70\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: `${indexStyle.container} ${indexStyle.buildYourTeamCreateYourProject}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: `${indexStyle.containerItem} ${indexStyle.containerItemText}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"Build a team, create a project\"), __jsx(\"p\", {\n    className: indexStyle.lgPara,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, \"Unilous is a platform uniquely designed for building teams. At the center of Unilous lies the project post which provides both the information a user would want to know about the project, and features necessary for an effective joining process.\"), __jsx(\"button\", {\n    className: `${indexStyle.button} ${indexStyle.btnLight} `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"Get started\")), __jsx(\"div\", {\n    className: indexStyle.containerItemImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    src: \"./svg/infoW.svg\",\n    alt: \"build your team\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }))), __jsx(\"div\", {\n    id: \"community\",\n    className: `${indexStyle.container} ${indexStyle.communityOrProjectsDiv}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: indexStyle.containerItemText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Community\"), __jsx(\"p\", {\n    className: indexStyle.lgPara,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"), __jsx(\"button\", {\n    className: ` ${indexStyle.button} ${indexStyle.btnDark} ${indexStyle.halfWidthButton}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Join\")), __jsx(\"div\", {\n    className: indexStyle.containerItemImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    src: \"./svg/usaB.svg\",\n    alt: \"community\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }))), __jsx(\"div\", {\n    id: \"projects\",\n    className: `${indexStyle.container} ${indexStyle.communityOrProjectsDiv}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: indexStyle.containerItemText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Projects\"), __jsx(\"p\", {\n    className: indexStyle.lgPara,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"), __jsx(\"button\", {\n    className: ` ${indexStyle.button} ${indexStyle.btnDark} ${indexStyle.halfWidthButton}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Join\")), __jsx(\"div\", {\n    className: indexStyle.containerItemImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    src: \"./svg/usaB.svg\",\n    alt: \"projects\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  })))));\n}); // const mapStateToProps = (state) => {\n// \treturn {\n//         currentUser: state.currentUser,\n//         token: state.token\n// \t}\n// }\n// export default connect(\n//     mapStateToProps, \n//     { setAlert, resetAlert, setCurrentUserSP }\n// )(PostPage)\n\nPostPage.getInitialProps = async () => {\n  const postQuery = await apolloClient.query({\n    query: FIND_POST,\n    variables: {\n      title: 'Unilous'\n    }\n  }).catch(err => console.log(err));\n  console.log(postQuery);\n  return {\n    post: postQuery.data.findPost\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser,\n    token: state.token,\n    alertNotif: state.alertNotif\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAlert: bindActionCreators(setAlert, dispatch),\n    resetAlert: bindActionCreators(resetAlert, dispatch),\n    setToken: bindActionCreators(setToken, dispatch),\n    setCurrentUserSP: bindActionCreators(setCurrentUserSP, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostPage);","map":{"version":3,"sources":["C:/Code/Projects/projectU/projectu/pages/homePage.js"],"names":["useMutation","useQuery","Link","withRouter","React","useEffect","useState","connect","bindActionCreators","Layout","Loading","PostQandA","InputHeader","apolloClient","resetAlert","setAlert","setCurrentUserSP","setToken","palletteGenerator","triggerAlert","useField","ASK_QUESTION","MAKE_NOTIFICATION","SAVE_POST","FIND_POST","Q_AND_A_NOTIFS","indexStyle","ppStyle","PostPage","props","height","container","buildYourTeamCreateYourProject","containerItem","containerItemText","lgPara","button","btnLight","containerItemImage","communityOrProjectsDiv","btnDark","halfWidthButton","getInitialProps","postQuery","query","variables","title","catch","err","console","log","post","data","findPost","mapStateToProps","state","currentUser","token","alertNotif","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { useMutation, useQuery } from '@apollo/react-hooks'\r\nimport Link from 'next/link'\r\nimport { withRouter } from 'next/router'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport Layout from '../components/Layout'\r\nimport Loading from '../components/Loading'\r\nimport PostQandA from '../components/postPage/PostQandA'\r\nimport InputHeader from '../components/text-field/InputHeader'\r\nimport { apolloClient } from '../lib/apollo'\r\nimport { resetAlert, setAlert } from '../redux/reducers/alertNotif'\r\nimport { setCurrentUserSP } from '../redux/reducers/currentUser'\r\nimport { setToken } from '../redux/reducers/token'\r\nimport { palletteGenerator, triggerAlert, useField } from '../functions/functions'\r\nimport { ASK_QUESTION, MAKE_NOTIFICATION, SAVE_POST } from '../schemas/mutations'\r\nimport { FIND_POST, Q_AND_A_NOTIFS } from '../schemas/queries'\r\nimport indexStyle from '../styles/pages/homePage.module.css'\r\nimport ppStyle from '../styles/pages/newPostPage.module.css'\r\n\r\nconst PostPage = withRouter((props) => {\r\n\r\n    return (\r\n        <>\r\n          <Layout>        \r\n            <div id='filler' style={{ height: 70 }}></div>\r\n            <div className={`${indexStyle.container} ${indexStyle.buildYourTeamCreateYourProject}` }>\r\n              <div className={`${indexStyle.containerItem} ${indexStyle.containerItemText}` }>\r\n                <h1>Build a team, create a project</h1>\r\n                <p className={indexStyle.lgPara}>\r\n                    Unilous is a platform uniquely designed for building teams. At the center of Unilous lies the project post which provides both the information a user would want to know about the project, and features necessary for an effective joining process.\r\n                </p>\r\n                <button className={`${indexStyle.button} ${indexStyle.btnLight} `}>Get started</button>\r\n              </div>\r\n              <div className={indexStyle.containerItemImage}>\r\n                <img src='./svg/infoW.svg' alt='build your team' width='100%'></img>\r\n              </div>\r\n            </div>\r\n            <div id='community' className={`${indexStyle.container} ${indexStyle.communityOrProjectsDiv}`}>\r\n              <div className={indexStyle.containerItemText}>            \r\n                <h2>Community</h2>\r\n                <p className={indexStyle.lgPara}>\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \r\n                </p>\r\n                <button className={` ${indexStyle.button} ${indexStyle.btnDark} ${indexStyle.halfWidthButton}`}>Join</button>     \r\n              </div>\r\n              <div className={indexStyle.containerItemImage}>\r\n                <img src='./svg/usaB.svg' alt='community' width='100%'></img>\r\n              </div>\r\n            </div>\r\n            <div id='projects' className={`${indexStyle.container} ${indexStyle.communityOrProjectsDiv}`}>\r\n              <div className={indexStyle.containerItemText}>       \r\n                <h2>Projects</h2>\r\n                <p className={indexStyle.lgPara}>\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \r\n                </p>\r\n                <button className={` ${indexStyle.button} ${indexStyle.btnDark} ${indexStyle.halfWidthButton}`}>Join</button>            \r\n              </div>\r\n              <div className={indexStyle.containerItemImage}>\r\n                <img src='./svg/usaB.svg' alt='projects' width='100%'></img>\r\n              </div>\r\n            </div>\r\n          </Layout>\r\n        {/* original below */}\r\n        {/* <Layout>\r\n            <Head>\r\n                <title>Unilous</title>\r\n                <meta property=\"og:image\" content=\"https://i.imgur.com/d6bsnRx.png\" key=\"title\" />\r\n                <meta name=\"description\" content=\"Looking to join or make a team, Unilous will help you make it happen! Join our skilled community of people looking to make something great.\" key=\"description\"/>\r\n                <meta name=\"google-site-verification\" content=\"-ccdPuW0WxjjhXsjDgnfbYeolghrlU6r3MLjOdWKpCw\" />\r\n            </Head>\r\n            <div className=\"navbar-height\" />\r\n            <div className={ppStyle.postPageContainer}>\r\n                <div className={ppStyle.PPContent}>\r\n                    <HomeContent />\r\n                    <h2 className={ppStyle.PPCTitle}>{currentPost.title}</h2>\r\n                    <div className={ppStyle.PPCSubHeader}>\r\n                        <Link href=\"/user/[username]\" as={`/user/${encodeURIComponent(currentPost.user.username)}`} >\r\n                            <a className={`${ppStyle.PPCUserContainer} neutralize-link`}>\r\n                                <img className={ppStyle.PPCUserIcon} src='/svg/userB.svg' alt=\"user\" />\r\n                                <p className=\"NM\">{currentPost.user.username}</p>\r\n                            </a>\r\n                        </Link>\r\n                        <p className={ppStyle.PPCTime}>{cleanedTime}</p>\r\n                    </div>\r\n                    <ModifiedDescription />\r\n                    <PostImages imageLinks={currentPost.imageLinks} color={currentPost.color} />\r\n                    <PostLinks referenceLinks={currentPost.referenceLinks} />\r\n                    <h3 className={ppStyle.PPCTitle}>Q and A</h3>\r\n                    <div className={ppStyle.PPCAllQandaContainer}>\r\n                        {qandaList}\r\n                    </div>\r\n                    <h3 className={ppStyle.PPCTitle}>team</h3>\r\n                    <div className={ppStyle.teamInfo}>{teamHTML.length} team members</div>\r\n                    <div className={ppStyle.PPCTeamContainer}>\r\n                        {teamHTML}\r\n                    </div>\r\n                </div>\r\n                <FormContainer pallette={pallette}>\r\n                    <div  className={ppStyle.PPSFollowHeader} >\r\n                        <div onClick={() => handleFollow()} className={ppStyle.PPSFollowHeader} style={{borderTop: '2px solid currentPost.color'}}>\r\n                            <svg className={ppStyle.PPCUserIcon} fill={currentPost.color} viewBox=\"0 -28 512.00002 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m471.382812 44.578125c-26.503906-28.746094-62.871093-44.578125-102.410156-44.578125-29.554687 0-56.621094 9.34375-80.449218 27.769531-12.023438 9.300781-22.917969 20.679688-32.523438 33.960938-9.601562-13.277344-20.5-24.660157-32.527344-33.960938-23.824218-18.425781-50.890625-27.769531-80.445312-27.769531-39.539063 0-75.910156 15.832031-102.414063 44.578125-26.1875 28.410156-40.613281 67.222656-40.613281 109.292969 0 43.300781 16.136719 82.9375 50.78125 124.742187 30.992188 37.394531 75.535156 75.355469 127.117188 119.3125 17.613281 15.011719 37.578124 32.027344 58.308593 50.152344 5.476563 4.796875 12.503907 7.4375 19.792969 7.4375 7.285156 0 14.316406-2.640625 19.785156-7.429687 20.730469-18.128907 40.707032-35.152344 58.328125-50.171876 51.574219-43.949218 96.117188-81.90625 127.109375-119.304687 34.644532-41.800781 50.777344-81.4375 50.777344-124.742187 0-42.066407-14.425781-80.878907-40.617188-109.289063zm0 0\"/></svg>\r\n                            <p className=\"NM\">follow</p>\r\n                        </div>\r\n                    </div>\r\n                    {skillsHTML}\r\n                    <div style={questionStyle}>\r\n                        <div className={ppStyle.PPSDivision} />\r\n                        <div className={ppStyle.PPSTitle}>\r\n                            <InputHeader inputFor=\"PPS-question\" info={true} title=\"question\" color=\"white\" >\r\n                                <ul style={{margin: 0}}>\r\n                                    <li>if answered it will be shown on post</li>\r\n                                </ul>\r\n                            </InputHeader>\r\n                        </div>\r\n                        <div className={ppStyle.PPSInputContainer}>\r\n                            <textarea className={ppStyle.PPSInput} id=\"PPS-question\" {...question.fields}></textarea>\r\n                        </div>\r\n                        <div className={ppStyle.PPCSubmitContainer}>\r\n                            <h4 onClick={() => handleQuestion()} className={ppStyle.PPSButton} style={{borderColor: currentPost.color}}>ask</h4>\r\n                        </div>\r\n                    </div>\r\n                </FormContainer>\r\n            </div>\r\n        </Layout> */}\r\n        </>\r\n    )\r\n})\r\n\r\n// const mapStateToProps = (state) => {\r\n// \treturn {\r\n//         currentUser: state.currentUser,\r\n//         token: state.token\r\n// \t}\r\n// }\r\n// export default connect(\r\n//     mapStateToProps, \r\n//     { setAlert, resetAlert, setCurrentUserSP }\r\n// )(PostPage)\r\n\r\nPostPage.getInitialProps = async () => {\r\n    const postQuery = await apolloClient.query({\r\n        query: FIND_POST,\r\n        variables: {title: 'Unilous'} \r\n    }).catch(err => console.log(err))\r\n    console.log(postQuery)\r\n    return {\r\n        post: postQuery.data.findPost,\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n        currentUser: state.currentUser,\r\n        token: state.token,\r\n        alertNotif: state.alertNotif,\r\n\t}\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setAlert: bindActionCreators(setAlert, dispatch),\r\n        resetAlert: bindActionCreators(resetAlert, dispatch),\r\n        setToken: bindActionCreators(setToken, dispatch),\r\n        setCurrentUserSP: bindActionCreators(setCurrentUserSP, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(PostPage)"]},"metadata":{},"sourceType":"module"}