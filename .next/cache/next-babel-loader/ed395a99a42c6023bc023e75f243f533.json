{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\Projects\\\\projectU\\\\projectu\\\\src\\\\components\\\\text-field\\\\InputHeader.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport infoIconW from '../../static/svg/infoW.svg';\nimport infoIconB from '../../static/svg/infoB.svg';\nimport '../../static/css/inputHeader.css';\n\nconst InputHeader = props => {\n  const {\n    0: expanded,\n    1: setExpanded\n  } = useState(false);\n\n  if (!props.info) {\n    return __jsx(\"label\", {\n      htmlFor: props.inputFor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 16\n      }\n    }, __jsx(\"h3\", {\n      className: \"info-title-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 48\n      }\n    }, props.title));\n  }\n\n  const showInfo = expanded ? {\n    display: 'block'\n  } : {\n    display: 'none'\n  };\n  const colorInfo = props.color === 'white' ? {\n    textColor: '#282828',\n    icon: infoIconB\n  } : {\n    textColor: 'white',\n    icon: infoIconW\n  };\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  })) // <div className=\"form-info-container\" style={{color: colorInfo.textColor}}>\n  //     <div className=\"info-header-container\">\n  //         <label htmlFor={props.inputFor}><h3 className=\"info-title-text\">{props.title}</h3></label>\n  //         <img onClick={() => setExpanded(!expanded)} src={colorInfo.icon} className=\"info-icon\" alt=\"info\" />\n  //     </div>\n  //     <div className=\"info-content\" style={showInfo}>\n  //         {props.children}\n  //     </div>\n  // </div>\n  ;\n}; //const mapStateToProps = (state) => {\n//\treturn {\n//\t}\n//}\n\n\nexport default connect(null)(InputHeader);","map":{"version":3,"sources":["C:/Code/Projects/projectU/projectu/src/components/text-field/InputHeader.js"],"names":["React","useState","connect","infoIconW","infoIconB","InputHeader","props","expanded","setExpanded","info","inputFor","title","showInfo","display","colorInfo","color","textColor","icon"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAO,kCAAP;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,CAAC,KAAD,CAAxC;;AAEA,MAAI,CAACK,KAAK,CAACG,IAAX,EAAiB;AACb,WAAO;AAAO,MAAA,OAAO,EAAEH,KAAK,CAACI,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCJ,KAAK,CAACK,KAAvC,CAAhC,CAAP;AACH;;AAED,QAAMC,QAAQ,GAAGL,QAAQ,GAAG;AAACM,IAAAA,OAAO,EAAE;AAAV,GAAH,GAAwB;AAACA,IAAAA,OAAO,EAAE;AAAV,GAAjD;AACA,QAAMC,SAAS,GAAGR,KAAK,CAACS,KAAN,KAAgB,OAAhB,GACd;AAACC,IAAAA,SAAS,EAAE,SAAZ;AAAuBC,IAAAA,IAAI,EAAEb;AAA7B,GADc,GAC4B;AAACY,IAAAA,SAAS,EAAE,OAAZ;AAAqBC,IAAAA,IAAI,EAAEd;AAA3B,GAD9C;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAII;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZJ;AAeH,CAzBD,C,CA2BA;AACA;AAEA;AACA;;;AACA,eAAeD,OAAO,CAClB,IADkB,CAAP,CAEbG,WAFa,CAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport infoIconW from '../../static/svg/infoW.svg'\r\nimport infoIconB from '../../static/svg/infoB.svg'\r\nimport '../../static/css/inputHeader.css'\r\n\r\nconst InputHeader = (props) => {\r\n    const [expanded, setExpanded] = useState(false)\r\n\r\n    if (!props.info) {\r\n        return <label htmlFor={props.inputFor}><h3 className=\"info-title-text\">{props.title}</h3></label>\r\n    }\r\n\r\n    const showInfo = expanded ? {display: 'block'} : {display: 'none'} \r\n    const colorInfo = props.color === 'white' ?\r\n        {textColor: '#282828', icon: infoIconB} : {textColor: 'white', icon: infoIconW}\r\n    return (\r\n        <div>\r\n            <h1></h1>\r\n        </div>\r\n        // <div className=\"form-info-container\" style={{color: colorInfo.textColor}}>\r\n        //     <div className=\"info-header-container\">\r\n        //         <label htmlFor={props.inputFor}><h3 className=\"info-title-text\">{props.title}</h3></label>\r\n        //         <img onClick={() => setExpanded(!expanded)} src={colorInfo.icon} className=\"info-icon\" alt=\"info\" />\r\n        //     </div>\r\n        //     <div className=\"info-content\" style={showInfo}>\r\n        //         {props.children}\r\n        //     </div>\r\n        // </div>\r\n\r\n    )\r\n}\r\n\r\n//const mapStateToProps = (state) => {\r\n//\treturn {\r\n        \r\n//\t}\r\n//}\r\nexport default connect(\r\n    null\r\n)(InputHeader)"]},"metadata":{},"sourceType":"module"}