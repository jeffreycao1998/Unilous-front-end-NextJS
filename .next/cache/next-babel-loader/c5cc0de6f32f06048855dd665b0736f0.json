{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\Projects\\\\projectU\\\\projectu\\\\pages\\\\blog\\\\react_to_nextjs.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Layout from '../../components/Layout';\nimport Head from 'next/head';\nimport B from '../../styles/blog.module.css';\n\nconst RtN = () => {\n  const reactPackages = `\n\"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n},`;\n  const nextPackages = `\n\"scripts\": {\n    \"dev\": \"next\",\n    \"build\": \"next build\",\n    \"start\": \"next start\"\n},`;\n  const routerItems = `\n<BrowserRouter>\n    <NavBar onQueryChange={onQueryChange} enteredSearch={enteredSearch} />\n    <Route exact path=\"/\" render={() => <Home search={search} /> } />\n    <Route path=\"/post/:id\" render={({match}) => <PostPage postId={match.params.id} /> } />\n</BrowserRouter>`;\n  const layout = `\n\n    <NavBar onQueryChange={onQueryChange} enteredSearch={enteredSearch} />\n    `;\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Contact | Unilous\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"Contact the Unilous team\",\n    key: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"navbar-height\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: B.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    className: B.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Converting a React application with Redux and Apollo to Next.JS\"), __jsx(\"img\", {\n    className: B.imgTitle,\n    src: \"https://i.imgur.com/dK14V4I.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), __jsx(\"p\", {\n    className: B.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"If you have clicked on this blog odds are that you have heard of \", __jsx(\"a\", {\n    href: \"https://nextjs.org/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 86\n    }\n  }, \"Next.JS\"), \", if not allow me to introduce it. Next.JS is a \", __jsx(\"a\", {\n    href: \"https://reactjs.org/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 34\n    }\n  }, \"React\"), \" framework that is best known for its server side rendering capablities which allows for better search engine optimization (SEO). In short the reason for which we among other React developers switch to Next.JS is to aliviate the hastle of SEO in the most effective manner.\"), __jsx(\"p\", {\n    className: B.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"Although Next.JS is already built on the shoulders of React, there are still many changes which need to happen before gettin the application up and running. For this guide I will not only show how to transform a React application to a Next.JS application, but a react application built with the centralized state management: \", __jsx(\"a\", {\n    href: \"https://redux.js.org/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 189\n    }\n  }, \"Redux\"), \", and the GraphQL API: \", __jsx(\"a\", {\n    href: \"https://www.apollographql.com/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 253\n    }\n  }, \"Apollo\"), \".\"), __jsx(\"h2\", {\n    className: B.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"1. Update your node environment\"), __jsx(\"p\", {\n    className: B.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"First you must set up the proper node packages so that the application runs as a Next.JS app rather than a React app.\"), __jsx(\"p\", {\n    className: B.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"You will need to replace the following scripts from React\"), __jsx(\"div\", {\n    className: `${B.codeContainer} ${B.remove}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, __jsx(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, reactPackages)), __jsx(\"p\", {\n    className: B.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"With the standard Next.JS scripts\"), __jsx(\"div\", {\n    className: `${B.codeContainer} ${B.add}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, __jsx(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, nextPackages)), __jsx(\"h2\", {\n    className: B.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"2. Adjusting navigation\"), __jsx(\"p\", {\n    className: B.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"Next.JS routing depends on the file structure whereas React routing was dependant on the \", __jsx(\"span\", {\n    className: B.codeBit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 110\n    }\n  }, __jsx(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 138\n    }\n  }, \"BrowserRouter\")), \" component. This process can be separated into several steps...\"), __jsx(\"h3\", {\n    className: B.subTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"a. Reorganize components\"), __jsx(\"p\", {\n    className: B.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Next.JS requires a root level folder named \", __jsx(\"span\", {\n    className: B.codeLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 64\n    }\n  }, \"pages\"), \".\"), __jsx(\"div\", {\n    style: {\n      display: 'grid'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    className: B.imgSM,\n    src: \"https://i.imgur.com/3FfHkZg.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  })), __jsx(\"p\", {\n    className: B.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Within this folder is where all of the routing happens. You can think of the pages folder as the host of your site and the pages within the folder are paths with an exception of \", __jsx(\"span\", {\n    className: B.codeLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 143\n    }\n  }, \"index.js\"), \" which will serve as the host page. For more information on routing in Next.JS I reccomend this \", __jsx(\"a\", {\n    href: \"https://nextjs.org/learn/basics/navigate-between-pages/pages-in-nextjs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 81\n    }\n  }, \"guide\"), \" from its official documentation.\"), __jsx(\"p\", {\n    className: B.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, \"To accomplish this you will need to move all of you root page files including your \", __jsx(\"span\", {\n    className: B.codeLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 104\n    }\n  }, \"App.js\"), \" file into a new pages folder. Next I strongly suggest you rename all of your files to follow \", __jsx(\"a\", {\n    href: \"https://library.stanford.edu/research/data-management-services/data-best-practices/best-practices-file-naming\",\n    rel: \"nofollow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 84\n    }\n  }, \"proper url naming conventions\"), \" so that you avoid problems with browsers and ensure your url still remains readable. In the case that you have dynamic routes you will need to follow this \", __jsx(\"a\", {\n    href: \"https://nextjs.org/learn/basics/dynamic-routes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 91\n    }\n  }, \"guide\"), \" from the official Next.JS documentation.\"), __jsx(\"h3\", {\n    className: B.subTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"b. Transform \", __jsx(\"span\", {\n    className: B.codeLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 57\n    }\n  }, \"App.js\"), \" to \", __jsx(\"span\", {\n    className: B.codeLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 103\n    }\n  }, \"Layout.js\")), __jsx(\"p\", {\n    className: B.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"The traditional App.js serves to distribute components to all of the pages to ensure they have a uniform appearance. In Next.JS, since all of the pages are independent of each other, that will no longer work the one single page to determine the global design of the page wont do. Effectively this page has serves no purpose being located in the pages folder, therefore it can be relocated back to the components folder.\"), __jsx(\"p\", {\n    className: B.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"Usually in within this App.js file you will contain the \", __jsx(\"span\", {\n    className: B.codeBit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 77\n    }\n  }, __jsx(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 105\n    }\n  }, \"BrowserRouter\")), \" component the navigation bar or header and the footer. To get started adjusting this file rename it to \", __jsx(\"span\", {\n    className: B.codeLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 69\n    }\n  }, \"Layout.js\"), \". Then remove the \", __jsx(\"span\", {\n    className: B.codeBit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 37\n    }\n  }, __jsx(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 65\n    }\n  }, \"BrowserRouter\")), \" component along with the \", __jsx(\"span\", {\n    className: B.codeBit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 124\n    }\n  }, __jsx(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 152\n    }\n  }, \"Route\")), \" components within it, as it is no longer needed.\"), __jsx(\"div\", {\n    className: `${B.codeContainer} ${B.remove}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, __jsx(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, routerItems)), __jsx(\"p\", {\n    className: B.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"In its place leave the other components like the navigation bar and add \", __jsx(\"span\", {\n    className: B.codeBit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 93\n    }\n  }, __jsx(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 121\n    }\n  }, '{props.children}'))), __jsx(\"div\", {\n    className: `${B.codeContainer} ${B.remove}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, __jsx(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, layout)), __jsx(\"h3\", {\n    className: B.subTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"c. Redirect paths\"), __jsx(\"p\", {\n    className: B.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \"Once you have your \", __jsx(\"span\", {\n    className: B.codeLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 40\n    }\n  }, \"pages\"), \" folder set up make sure to redirect all paths from files within the folder as the y have changed location within your application.\"), __jsx(\"h2\", {\n    className: B.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"3. Reformating \", __jsx(\"span\", {\n    className: B.codeLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 56\n    }\n  }, \"index.js\"), \" to \", __jsx(\"span\", {\n    className: B.codeLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 104\n    }\n  }, \"_app.js\")), __jsx(\"p\", {\n    className: B.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {// currentUser: state.currentUser,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {// setUserDD: bindActionCreators(setUserDD, dispatch),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RtN);","map":{"version":3,"sources":["C:/Code/Projects/projectU/projectu/pages/blog/react_to_nextjs.js"],"names":["React","connect","Layout","Head","B","RtN","reactPackages","nextPackages","routerItems","layout","container","title","imgTitle","text","codeContainer","remove","add","codeBit","subTitle","codeLike","display","imgSM","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Layout from '../../components/Layout'\r\nimport Head from 'next/head'\r\nimport B from '../../styles/blog.module.css'\r\n\r\nconst RtN = () => {\r\n    const reactPackages = `\r\n\"scripts\": {\r\n    \"start\": \"react-scripts start\",\r\n    \"build\": \"react-scripts build\",\r\n    \"test\": \"react-scripts test\",\r\n    \"eject\": \"react-scripts eject\"\r\n},`\r\n    const nextPackages = `\r\n\"scripts\": {\r\n    \"dev\": \"next\",\r\n    \"build\": \"next build\",\r\n    \"start\": \"next start\"\r\n},`\r\n    const routerItems = `\r\n<BrowserRouter>\r\n    <NavBar onQueryChange={onQueryChange} enteredSearch={enteredSearch} />\r\n    <Route exact path=\"/\" render={() => <Home search={search} /> } />\r\n    <Route path=\"/post/:id\" render={({match}) => <PostPage postId={match.params.id} /> } />\r\n</BrowserRouter>`\r\n    const layout = `\r\n\r\n    <NavBar onQueryChange={onQueryChange} enteredSearch={enteredSearch} />\r\n    `\r\n    return (\r\n        <Layout>\r\n            <Head>\r\n                <title>Contact | Unilous</title>\r\n                <meta name=\"description\" content=\"Contact the Unilous team\" key=\"description\"/>\r\n            </Head>\r\n            <div className=\"navbar-height\" />\r\n            <div className={B.container}>\r\n                <h1 className={B.title}>Converting a React application with Redux and Apollo to Next.JS</h1>\r\n                <img className={B.imgTitle} src=\"https://i.imgur.com/dK14V4I.jpg\" />\r\n                <p className={B.text}>\r\n                    If you have clicked on this blog odds are that you have heard of <a href=\"https://nextjs.org/\">Next.JS</a>, if not allow me to introduce it. \r\n                    Next.JS is a <a href=\"https://reactjs.org/\">React</a> framework that is best known for its server side rendering capablities which allows for better search engine optimization (SEO). \r\n                    In short the reason for which we among other React developers switch to Next.JS is to aliviate the hastle of SEO in the most effective manner.\r\n                </p>\r\n                <p className={B.text}>\r\n                    Although Next.JS is already built on the shoulders of React, there are still many changes which need to happen before gettin the application up and running.\r\n                    For this guide I will not only show how to transform a React application to a Next.JS application, but a react application built with the centralized state management: <a href=\"https://redux.js.org/\">Redux</a>, and the GraphQL API: <a href=\"https://www.apollographql.com/\">Apollo</a>. \r\n                </p>\r\n                <h2 className={B.title}>1. Update your node environment</h2>\r\n                <p className={B.text}>\r\n                    First you must set up the proper node packages so that the application runs as a Next.JS app rather than a React app.\r\n                </p>\r\n                <p className={B.text}>\r\n                    You will need to replace the following scripts from React\r\n                </p>\r\n                <div className={`${B.codeContainer} ${B.remove}`}>\r\n                    <code>{reactPackages}</code>\r\n                </div>\r\n                <p className={B.text}>\r\n                    With the standard Next.JS scripts\r\n                </p>\r\n                <div className={`${B.codeContainer} ${B.add}`}>\r\n                    <code>{nextPackages}</code>\r\n                </div>\r\n                <h2 className={B.title}>2. Adjusting navigation</h2>\r\n                <p className={B.text}>\r\n                    Next.JS routing depends on the file structure whereas React routing was dependant on the <span className={B.codeBit}><code>BrowserRouter</code></span> component. \r\n                    This process can be separated into several steps...\r\n                </p>\r\n                <h3 className={B.subTitle}>a. Reorganize components</h3>\r\n                <p className={B.text}>\r\n                    Next.JS requires a root level folder named <span className={B.codeLike}>pages</span>.\r\n                </p>\r\n                <div style={{display: 'grid'}}>\r\n                    <img className={B.imgSM} src=\"https://i.imgur.com/3FfHkZg.png\" />\r\n                </div>\r\n                <p className={B.text}>\r\n                    Within this folder is where all of the routing happens. \r\n                    You can think of the pages folder as the host of your site and the pages within the folder are paths with an exception of <span className={B.codeLike}>index.js</span> which will serve as the host page.\r\n                    For more information on routing in Next.JS I reccomend this <a href=\"https://nextjs.org/learn/basics/navigate-between-pages/pages-in-nextjs\">guide</a> from its official documentation.\r\n                </p>\r\n                <p className={B.text}>\r\n                    To accomplish this you will need to move all of you root page files including your <span className={B.codeLike}>App.js</span> file into a new pages folder.\r\n                    Next I strongly suggest you rename all of your files to follow <a href=\"https://library.stanford.edu/research/data-management-services/data-best-practices/best-practices-file-naming\" rel=\"nofollow\">proper url naming conventions</a> so that you avoid problems with browsers and ensure your url still remains readable.\r\n                    In the case that you have dynamic routes you will need to follow this <a href=\"https://nextjs.org/learn/basics/dynamic-routes\">guide</a> from the official Next.JS documentation.\r\n                </p>\r\n                <h3 className={B.subTitle}>b. Transform <span className={B.codeLike}>App.js</span> to <span className={B.codeLike}>Layout.js</span></h3>\r\n                <p className={B.text}>\r\n                    The traditional App.js serves to distribute components to all of the pages to ensure they have a uniform appearance. \r\n                    In Next.JS, since all of the pages are independent of each other, that will no longer work the one single page to determine the global design of the page wont do. \r\n                    Effectively this page has serves no purpose being located in the pages folder, therefore it can be relocated back to the components folder.\r\n                </p>\r\n                <p className={B.text}>\r\n                    Usually in within this App.js file you will contain the <span className={B.codeBit}><code>BrowserRouter</code></span> component the navigation bar or header and the footer. \r\n                    To get started adjusting this file rename it to <span className={B.codeLike}>Layout.js</span>. \r\n                    Then remove the <span className={B.codeBit}><code>BrowserRouter</code></span> component along with the <span className={B.codeBit}><code>Route</code></span> components within it, as it is no longer needed. \r\n                </p>\r\n                <div className={`${B.codeContainer} ${B.remove}`}>\r\n                    <code>{routerItems}</code>\r\n                </div>\r\n                <p className={B.text}>\r\n                    In its place leave the other components like the navigation bar and add <span className={B.codeBit}><code>{'{props.children}'}</code></span>\r\n                </p>\r\n                <div className={`${B.codeContainer} ${B.remove}`}>\r\n                    <code>{layout}</code>\r\n                </div>\r\n                <h3 className={B.subTitle}>c. Redirect paths</h3>\r\n                <p className={B.text}>\r\n                    Once you have your <span className={B.codeLike}>pages</span> folder set up make sure to redirect all paths from files within the folder as the y have changed location within your application.\r\n                </p>\r\n                <h2 className={B.title}>3. Reformating <span className={B.codeLike}>index.js</span> to <span className={B.codeLike}>_app.js</span></h2>\r\n                <p className={B.text}>\r\n\r\n                </p>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n        // currentUser: state.currentUser,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // setUserDD: bindActionCreators(setUserDD, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(RtN)"]},"metadata":{},"sourceType":"module"}