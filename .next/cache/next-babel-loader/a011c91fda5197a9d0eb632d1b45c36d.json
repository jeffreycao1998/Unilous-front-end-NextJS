{"ast":null,"code":"import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport token from './reducers/token';\nimport currentUser from './reducers/currentUser';\nimport posts from './reducers/posts';\nimport alertNotif from './reducers/alertNotif';\nimport stretchLayout from './reducers/stretchLayout';\nimport eventSearch from './reducers/eventSearch';\n\nconst bindMiddleware = middleware => {\n  if (true) {\n    const {\n      composeWithDevTools\n    } = require('redux-devtools-extension');\n\n    return composeWithDevTools(applyMiddleware(...middleware));\n  }\n\n  return applyMiddleware(...middleware);\n};\n\nconst reducer = combineReducers({\n  token // currentUser,\n  // posts,\n  // alertNotif,\n  // stretchLayout,\n  // eventSearch,\n\n});\n\nconst store = () => createStore(reducer, bindMiddleware([thunk]));\n\nexport default store;","map":{"version":3,"sources":["C:/Code/Projects/projectU/projectu/redux/store.js"],"names":["combineReducers","createStore","applyMiddleware","thunk","token","currentUser","posts","alertNotif","stretchLayout","eventSearch","bindMiddleware","middleware","composeWithDevTools","require","reducer","store"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,WAAzB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;AAEA,MAAMC,cAAc,GAAIC,UAAD,IAAgB;AACnC,YAA2C;AACvC,UAAM;AAACC,MAAAA;AAAD,QAAwBC,OAAO,CAAC,0BAAD,CAArC;;AACA,WAAOD,mBAAmB,CAACV,eAAe,CAAC,GAAGS,UAAJ,CAAhB,CAA1B;AACH;;AACD,SAAOT,eAAe,CAAC,GAAGS,UAAJ,CAAtB;AACH,CAND;;AAQA,MAAMG,OAAO,GAAGd,eAAe,CAAC;AAC5BI,EAAAA,KAD4B,CAE5B;AACA;AACA;AACA;AACA;;AAN4B,CAAD,CAA/B;;AASA,MAAMW,KAAK,GAAG,MAAMd,WAAW,CAC3Ba,OAD2B,EAE3BJ,cAAc,CAAC,CAACP,KAAD,CAAD,CAFa,CAA/B;;AAKA,eAAeY,KAAf","sourcesContent":["import {combineReducers, createStore, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport token from './reducers/token'\r\nimport currentUser from './reducers/currentUser'\r\nimport posts from './reducers/posts'\r\nimport alertNotif from './reducers/alertNotif'\r\nimport stretchLayout from './reducers/stretchLayout'\r\nimport eventSearch from './reducers/eventSearch'\r\n\r\nconst bindMiddleware = (middleware) => {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        const {composeWithDevTools} = require('redux-devtools-extension')\r\n        return composeWithDevTools(applyMiddleware(...middleware))\r\n    }\r\n    return applyMiddleware(...middleware)\r\n}\r\n\r\nconst reducer = combineReducers({\r\n    token,\r\n    // currentUser,\r\n    // posts,\r\n    // alertNotif,\r\n    // stretchLayout,\r\n    // eventSearch,\r\n})\r\n\r\nconst store = () => createStore(\r\n    reducer,\r\n    bindMiddleware([thunk])\r\n)\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}