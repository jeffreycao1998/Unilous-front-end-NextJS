{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\Projects\\\\projectU\\\\projectu\\\\pages\\\\results\\\\[searchQuery].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport resStyle from '../../styles/pages/results.module.css';\nimport Post from '../../components/post/Post';\nimport { useQuery } from '@apollo/react-hooks';\nimport { SEARCH_POSTS } from '../../src/schemas/queries';\nimport { addPosts } from '../../redux/reducers/posts';\nimport Link from 'next/link';\nimport Loading from '../../components/Loading';\nimport { palletteGenerator } from '../../src/functions/functions';\nimport { toggleStretchLayout } from '../../redux/reducers/stretchLayout';\nimport { setEventSearch } from '../../redux/reducers/eventSearch';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'next/router';\nimport { apolloClient } from '../../lib/apollo';\nimport Layout from '../../components/Layout';\nimport Head from 'next/head';\nconst Results = withRouter(_c = _s(props => {\n  _s();\n\n  const currentIds = props.posts ? props.posts.map(p => p._id) : [];\n  const {\n    0: scrollAtBottom,\n    1: setScrollAtBottom\n  } = useState(false);\n  const decodedSearch = decodeURIComponent(props.router.query.searchQuery) === 'all' ? '' : decodeURIComponent(props.router.query.searchQuery);\n  const SPQuery = useQuery(SEARCH_POSTS, {\n    variables: {\n      filterString: decodedSearch,\n      postIds: currentIds,\n      eventQuery: props.eventSearch\n    }\n  });\n\n  const moreResults = () => {\n    if (SPQuery.data && SPQuery.data.searchPosts === null) {\n      return false;\n    }\n\n    return true;\n  };\n\n  if (true) {\n    const triggerWhenScroll = () => {\n      if (window.innerHeight + window.scrollY > document.body.offsetHeight - 100 && !scrollAtBottom) {\n        setScrollAtBottom(true);\n      }\n\n      if (window.innerHeight + window.scrollY <= document.body.offsetHeight - 100 && scrollAtBottom) {\n        setScrollAtBottom(false);\n      }\n    };\n\n    window.addEventListener('scroll', triggerWhenScroll, false);\n  } // const postChangeConditions = (query, reducer) => {\n  //     if (!scrollAtBottom) return false\n  //     if (!query) return false\n  //     if (!query.searchPosts) return false\n  //     if (!reducer) {\n  //         return true\n  //     }\n  //     const queryTitles = query.searchPosts.map(i => i.title)\n  //     const reducerTitles = reducer.map(i => i.title)\n  //     for (const title of queryTitles) {\n  //         if (!reducerTitles.includes(title)) {\n  //             return true\n  //         }\n  //     }\n  //     return false\n  // }\n  // const postsSearched = postChangeConditions(SPQuery.data, props.posts) ?\n  //     SPQuery.data.searchPosts : null\n  // useEffect(() => {\n  //     if (!props.posts) {\n  //         props.addPosts(props.initialPosts)\n  //     }\n  //     if (postsSearched && props.posts) {\n  //         if (postsSearched.length > 0) {\n  //             if (!props.posts.map(p => p._id).includes(postsSearched[0]._id)){\n  //                 props.addPosts(SPQuery.data.searchPosts)\n  //                 setScrollAtBottom(false)\n  //             }\n  //         }\n  //     }\n  // }, [SPQuery, props.addPosts, props, postsSearched])\n\n\n  const eventQuery = props.eventSearch;\n\n  const eventKeys = () => {\n    if (eventQuery === 'COVID-19') {\n      return ['covid', 'coronavirus', 'outbreak', 'virus', 'emergency response'];\n    }\n\n    if (eventQuery === '2020 Election') {\n      return ['election', 'democrat', 'republican', 'vote'];\n    }\n\n    return null;\n  };\n\n  const postToShow = post => {\n    if (eventKeys()) {\n      for (const keyWord of eventKeys()) {\n        if (post.description.toLowerCase().includes(keyWord) || post.title.toLowerCase().includes(keyWord)) {\n          if (post.title.toLowerCase().includes(decodedSearch.toLowerCase())) return true;\n        }\n      }\n\n      return false;\n    }\n\n    if (post.title.toLowerCase().includes(decodedSearch.toLowerCase())) return true;\n\n    for (const skill of post.skillNames) {\n      if (decodedSearch.includes(skill)) return true;\n    }\n\n    return false;\n  };\n\n  const postsArray = props.posts ? props.posts.filter(p => postToShow(p)) : props.initialPosts;\n  const postsToShow = postsArray ? postsArray.map(p => __jsx(Post, {\n    stretch: props.stretchLayout,\n    key: `post${p._id}`,\n    post: p,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 59\n    }\n  })) : [];\n  const pallette = palletteGenerator('rgb(40,40,40)').colorPallette;\n  const layoutBtnClass = props.stretchLayout ? resStyle.layoutButtonGrid : resStyle.layoutButtonStretch;\n  const layoutClass = !props.stretchLayout ? resStyle.resultsContentGrid : resStyle.resultsContentStretch;\n  const eventsList = [{\n    name: 'COVID-19',\n    color: 'rgb(237,32,40)',\n    iconB: '/svg/events/virusB.svg',\n    iconW: '/svg/events/virusW.svg',\n    iconC: '/svg/events/virusC.svg'\n  }, {\n    name: '2020 Election',\n    color: 'rgb(255,0,255)',\n    iconB: '/svg/events/usaB.svg',\n    iconW: '/svg/events/usaW.svg',\n    iconC: '/svg/events/usaC.svg'\n  }];\n  const eventsHTML = eventsList.map(e => e.name === props.eventSearch ? __jsx(\"div\", {\n    className: resStyle.eventSelected,\n    onClick: () => props.setEventSearch(null),\n    style: {\n      borderColor: e.color,\n      backgroundColor: e.color\n    },\n    key: `EV${e.name}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: e.iconW,\n    className: resStyle.eventImage,\n    alt: e.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }), __jsx(\"h3\", {\n    className: resStyle.eventText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, e.name)) : __jsx(\"div\", {\n    className: resStyle.event,\n    onClick: () => props.setEventSearch(e.name),\n    style: {\n      borderColor: e.color,\n      color: e.color\n    },\n    key: `EV${e.name}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: e.iconC,\n    className: resStyle.eventImage,\n    alt: e.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), __jsx(\"h3\", {\n    className: resStyle.eventText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, e.name)));\n  const eventsContainerClass = props.eventSearch ? resStyle.ECActive : null;\n  const showLoading = moreResults() ? __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 41\n    }\n  }) : __jsx(\"h3\", {\n    style: {\n      opacity: '0.8'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 55\n    }\n  }, \"no more posts\");\n  const titlesString = postsArray ? postsArray.map(p => p.title).join(', ') : [];\n\n  const descriptionToShow = () => {\n    const start = decodeURIComponent(props.router.query.searchQuery) === 'all' ? 'Unilous projects: ' : `Unilous projects found for \"${decodeURIComponent(props.router.query.searchQuery)}\": `;\n    if (!postsArray) return start + 'No projects found. Be the first!';\n    const titlesArray = postsArray.map(p => p.title);\n    let dFinal = start;\n\n    for (const title of titlesArray) {\n      if (dFinal.concat(title).length < 155) {\n        if (dFinal === start) dFinal = [dFinal, title].join('');else dFinal = [dFinal, title].join(', ');\n      } else if (dFinal.slice(-3) !== '...') dFinal = dFinal + ' ...';\n    }\n\n    if (dFinal.length < 50) dFinal = [dFinal, titlesArray[0].slice(0, 95) + ' ...'].join('');\n    return dFinal;\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, \"Browse for projects in Unilous\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: descriptionToShow(),\n    key: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"home-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: resStyle.resultsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: \"/postformpage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    className: `${resStyle.formContainerExpand} standard-hover neutralize-link`,\n    title: \"add post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, __jsx(\"img\", {\n    className: resStyle.formExpandIcon,\n    src: \"/svg/plusW.svg\",\n    alt: \"team up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  }))), __jsx(\"div\", {\n    className: \"navbar-height\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }), __jsx(\"div\", {\n    onClick: () => props.toggleStretchLayout(!props.stretchLayout),\n    className: resStyle.layoutWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: resStyle.layoutContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: `layoutButton ${layoutBtnClass}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: resStyle.layoutBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 33\n    }\n  }), __jsx(\"div\", {\n    className: resStyle.layoutBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 33\n    }\n  }), __jsx(\"div\", {\n    className: resStyle.layoutBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 33\n    }\n  }), __jsx(\"div\", {\n    className: resStyle.layoutBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 33\n    }\n  })))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }), __jsx(\"div\", {\n    className: `resultsContent ${layoutClass}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, postsToShow), __jsx(\"div\", {\n    style: {\n      position: 'relative',\n      height: '400px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }, showLoading))));\n}, \"Fg7gsogDDEUYzGkA5RkPTWkn0is=\", false, function () {\n  return [useQuery];\n})); // const mapStateToProps = (state) => {\n// \treturn {\n//         posts: state.posts,\n//         search: state.search,\n//         stretchLayout: state.stretchLayout,\n//         eventSearch: state.eventSearch,\n// \t}\n// }\n// export default connect(\n//     mapStateToProps,\n//     { addPosts, toggleStretchLayout, setEventSearch }\n// )(Results)\n\n_c2 = Results;\n\nResults.getInitialProps = async context => {\n  const decodedSearch = decodeURIComponent(context.query.searchQuery) === 'all' ? '' : decodeURIComponent(context.query.searchQuery);\n  const postsQuery = await apolloClient.query({\n    query: SEARCH_POSTS,\n    variables: {\n      filterString: decodedSearch,\n      postIds: [],\n      eventQuery: null\n    }\n  }).catch(err => console.log(err));\n  return {\n    initialPosts: postsQuery.data.searchPosts\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts,\n    stretchLayout: state.stretchLayout,\n    eventSearch: state.eventSearch\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addPosts: bindActionCreators(addPosts, dispatch),\n    toggleStretchLayout: bindActionCreators(toggleStretchLayout, dispatch),\n    setEventSearch: bindActionCreators(setEventSearch, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Results);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Results$withRouter\");\n$RefreshReg$(_c2, \"Results\");","map":{"version":3,"sources":["C:/Code/Projects/projectU/projectu/pages/results/[searchQuery].js"],"names":["React","useState","useEffect","connect","resStyle","Post","useQuery","SEARCH_POSTS","addPosts","Link","Loading","palletteGenerator","toggleStretchLayout","setEventSearch","bindActionCreators","withRouter","apolloClient","Layout","Head","Results","props","currentIds","posts","map","p","_id","scrollAtBottom","setScrollAtBottom","decodedSearch","decodeURIComponent","router","query","searchQuery","SPQuery","variables","filterString","postIds","eventQuery","eventSearch","moreResults","data","searchPosts","triggerWhenScroll","window","innerHeight","scrollY","document","body","offsetHeight","addEventListener","eventKeys","postToShow","post","keyWord","description","toLowerCase","includes","title","skill","skillNames","postsArray","filter","initialPosts","postsToShow","stretchLayout","pallette","colorPallette","layoutBtnClass","layoutButtonGrid","layoutButtonStretch","layoutClass","resultsContentGrid","resultsContentStretch","eventsList","name","color","iconB","iconW","iconC","eventsHTML","e","eventSelected","borderColor","backgroundColor","eventImage","eventText","event","eventsContainerClass","ECActive","showLoading","opacity","titlesString","join","descriptionToShow","start","titlesArray","dFinal","concat","length","slice","resultsContainer","formContainerExpand","formExpandIcon","layoutWrapper","layoutContainer","layoutBox","position","height","getInitialProps","context","postsQuery","catch","err","console","log","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport resStyle from '../../styles/pages/results.module.css'\r\nimport Post from '../../components/post/Post'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport { SEARCH_POSTS } from '../../src/schemas/queries'\r\nimport { addPosts } from '../../redux/reducers/posts'\r\nimport Link from 'next/link'\r\nimport Loading from '../../components/Loading'\r\nimport { palletteGenerator } from '../../src/functions/functions'\r\nimport { toggleStretchLayout } from '../../redux/reducers/stretchLayout'\r\nimport { setEventSearch } from '../../redux/reducers/eventSearch'\r\nimport {bindActionCreators} from 'redux'\r\nimport {withRouter} from 'next/router'\r\nimport {apolloClient} from '../../lib/apollo'\r\nimport Layout from '../../components/Layout'\r\nimport Head from 'next/head'\r\n\r\nconst Results = withRouter((props) => {\r\n    const currentIds = props.posts ? props.posts.map(p => p._id) : []\r\n    const [scrollAtBottom, setScrollAtBottom] = useState(false)\r\n    const decodedSearch = decodeURIComponent(props.router.query.searchQuery) === 'all' ? '' : decodeURIComponent(props.router.query.searchQuery)\r\n    const SPQuery = useQuery(SEARCH_POSTS, {\r\n        variables: {\r\n            filterString: decodedSearch,\r\n            postIds: currentIds,\r\n            eventQuery: props.eventSearch,\r\n        }\r\n    })\r\n    const moreResults = () => {\r\n        if (SPQuery.data && SPQuery.data.searchPosts === null) {\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    if (typeof window !== 'undefined') {\r\n        const triggerWhenScroll = () => {\r\n            if ((window.innerHeight + window.scrollY) > (document.body.offsetHeight - 100) && !scrollAtBottom) {\r\n                setScrollAtBottom(true)\r\n            }\r\n            if ((window.innerHeight + window.scrollY) <= (document.body.offsetHeight - 100) && scrollAtBottom) {\r\n                setScrollAtBottom(false)\r\n            }\r\n        }\r\n        window.addEventListener('scroll', triggerWhenScroll, false)\r\n    }\r\n\r\n    // const postChangeConditions = (query, reducer) => {\r\n    //     if (!scrollAtBottom) return false\r\n    //     if (!query) return false\r\n    //     if (!query.searchPosts) return false\r\n    //     if (!reducer) {\r\n    //         return true\r\n    //     }\r\n    //     const queryTitles = query.searchPosts.map(i => i.title)\r\n    //     const reducerTitles = reducer.map(i => i.title)\r\n    //     for (const title of queryTitles) {\r\n    //         if (!reducerTitles.includes(title)) {\r\n    //             return true\r\n    //         }\r\n    //     }\r\n    //     return false\r\n    // }\r\n    // const postsSearched = postChangeConditions(SPQuery.data, props.posts) ?\r\n    //     SPQuery.data.searchPosts : null\r\n    // useEffect(() => {\r\n    //     if (!props.posts) {\r\n    //         props.addPosts(props.initialPosts)\r\n    //     }\r\n    //     if (postsSearched && props.posts) {\r\n    //         if (postsSearched.length > 0) {\r\n    //             if (!props.posts.map(p => p._id).includes(postsSearched[0]._id)){\r\n    //                 props.addPosts(SPQuery.data.searchPosts)\r\n    //                 setScrollAtBottom(false)\r\n    //             }\r\n    //         }\r\n    //     }\r\n    // }, [SPQuery, props.addPosts, props, postsSearched])\r\n\r\n    const eventQuery = props.eventSearch\r\n    const eventKeys = () => {\r\n        if (eventQuery === 'COVID-19') {\r\n            return ['covid', 'coronavirus', 'outbreak', 'virus', 'emergency response']\r\n        }\r\n        if (eventQuery === '2020 Election') {\r\n            return ['election', 'democrat', 'republican', 'vote']\r\n        }\r\n        return null\r\n    }\r\n    const postToShow = (post) => {\r\n        if (eventKeys()) {\r\n            for (const keyWord of eventKeys()) {\r\n                if (post.description.toLowerCase().includes(keyWord) || post.title.toLowerCase().includes(keyWord)) {\r\n                    if (post.title.toLowerCase().includes(decodedSearch.toLowerCase())) return true\r\n                }\r\n            }\r\n            return false\r\n        }\r\n        if (post.title.toLowerCase().includes(decodedSearch.toLowerCase())) return true\r\n        for (const skill of post.skillNames) {\r\n            if (decodedSearch.includes(skill)) return true\r\n        }\r\n        return false\r\n    }\r\n    const postsArray = props.posts ? props.posts.filter(p => postToShow(p)) : props.initialPosts\r\n    const postsToShow = postsArray ?  postsArray.map(p => <Post stretch={props.stretchLayout} key={`post${p._id}`} post={p} />) : []\r\n    const pallette = palletteGenerator('rgb(40,40,40)').colorPallette\r\n    const layoutBtnClass= props.stretchLayout ? resStyle.layoutButtonGrid : resStyle.layoutButtonStretch\r\n    const layoutClass = !props.stretchLayout ? resStyle.resultsContentGrid : resStyle.resultsContentStretch\r\n    \r\n    const eventsList = [\r\n        {name: 'COVID-19', color: 'rgb(237,32,40)', iconB: '/svg/events/virusB.svg', iconW: '/svg/events/virusW.svg', iconC: '/svg/events/virusC.svg'},\r\n        {name: '2020 Election', color: 'rgb(255,0,255)', iconB: '/svg/events/usaB.svg', iconW: '/svg/events/usaW.svg', iconC: '/svg/events/usaC.svg'} \r\n    ]\r\n    const eventsHTML = eventsList.map(e => e.name === props.eventSearch ? \r\n        <div className={resStyle.eventSelected} onClick={() => props.setEventSearch(null)} style={{borderColor: e.color, backgroundColor: e.color}} key={`EV${e.name}`}>\r\n            <img src={e.iconW} className={resStyle.eventImage} alt={e.name} />\r\n            <h3 className={resStyle.eventText}>{e.name}</h3>\r\n        </div>\r\n        :\r\n        <div className={resStyle.event} onClick={() => props.setEventSearch(e.name)} style={{borderColor: e.color, color: e.color}} key={`EV${e.name}`}>\r\n            <img src={e.iconC} className={resStyle.eventImage} alt={e.name} />\r\n            <h3 className={resStyle.eventText}>{e.name}</h3>\r\n        </div>\r\n    )\r\n    const eventsContainerClass = props.eventSearch ? resStyle.ECActive : null\r\n    const showLoading = moreResults() ? <Loading /> : <h3 style={{opacity: '0.8'}}>no more posts</h3>\r\n    const titlesString = postsArray ? postsArray.map(p => p.title).join(', ') : []\r\n\r\n    const descriptionToShow = () => {\r\n        const start = decodeURIComponent(props.router.query.searchQuery) === 'all' ? 'Unilous projects: ' : `Unilous projects found for \"${decodeURIComponent(props.router.query.searchQuery)}\": ` \r\n        if (!postsArray) return start + 'No projects found. Be the first!'\r\n        const titlesArray = postsArray.map(p => p.title)\r\n        let dFinal = start\r\n        for (const title of titlesArray) {\r\n            if (dFinal.concat(title).length < 155) {\r\n                if (dFinal === start) dFinal = [dFinal, title].join('')\r\n                else dFinal = [dFinal, title].join(', ')\r\n            }\r\n            else if (dFinal.slice(-3) !== '...') dFinal = dFinal + ' ...'\r\n        }\r\n        if (dFinal.length < 50) dFinal = [dFinal, titlesArray[0].slice(0,95) + ' ...'].join('')\r\n\r\n        return dFinal\r\n    }\r\n    return (\r\n        <Layout>\r\n            <Head>\r\n                <title>Browse for projects in Unilous</title>\r\n                <meta name=\"description\" content={descriptionToShow()} key=\"description\"/>\r\n            </Head>\r\n            <div className=\"home-wrapper\">\r\n                <div className={resStyle.resultsContainer}>\r\n                    <Link href=\"/postformpage\" >\r\n                        <a className={`${resStyle.formContainerExpand} standard-hover neutralize-link`} title=\"add post\">\r\n                            <img className={resStyle.formExpandIcon} src=\"/svg/plusW.svg\" alt=\"team up\" />\r\n                        </a>\r\n                    </Link>\r\n                    <div className=\"navbar-height\"/>\r\n                    {/* <h2 className={resStyle.secondaryTitle}>events</h2>\r\n                    <div className={`${resStyle.eventsContainer} ${eventsContainerClass}`}>\r\n                        {eventsHTML}\r\n                    </div> */}\r\n                    <div onClick={() => props.toggleStretchLayout(!props.stretchLayout)} className={resStyle.layoutWrapper}>\r\n                        <div className={resStyle.layoutContainer}>\r\n                            <div className={`layoutButton ${layoutBtnClass}`} >\r\n                                <div className={resStyle.layoutBox}/>\r\n                                <div className={resStyle.layoutBox}/>\r\n                                <div className={resStyle.layoutBox}/>\r\n                                <div className={resStyle.layoutBox}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div />\r\n                    <div className={`resultsContent ${layoutClass}`}>\r\n                        {postsToShow}\r\n                    </div>\r\n                    <div style={{position: 'relative', height: '400px'}}>\r\n                        {showLoading}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n})\r\n\r\n// const mapStateToProps = (state) => {\r\n// \treturn {\r\n//         posts: state.posts,\r\n//         search: state.search,\r\n//         stretchLayout: state.stretchLayout,\r\n//         eventSearch: state.eventSearch,\r\n// \t}\r\n// }\r\n// export default connect(\r\n//     mapStateToProps,\r\n//     { addPosts, toggleStretchLayout, setEventSearch }\r\n// )(Results)\r\n\r\nResults.getInitialProps = async (context) => {\r\n    const decodedSearch = decodeURIComponent(context.query.searchQuery) === 'all' ? '' : decodeURIComponent(context.query.searchQuery)\r\n    const postsQuery = await apolloClient.query({\r\n        query: SEARCH_POSTS,\r\n        variables: {\r\n            filterString: decodedSearch,\r\n            postIds: [],\r\n            eventQuery: null,\r\n        }\r\n    }).catch(err => console.log(err))\r\n    return {\r\n        initialPosts: postsQuery.data.searchPosts\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n        posts: state.posts,\r\n        stretchLayout: state.stretchLayout,\r\n        eventSearch: state.eventSearch,\r\n\t}\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPosts: bindActionCreators(addPosts, dispatch),\r\n        toggleStretchLayout: bindActionCreators(toggleStretchLayout, dispatch),\r\n        setEventSearch: bindActionCreators(setEventSearch, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Results)"]},"metadata":{},"sourceType":"module"}