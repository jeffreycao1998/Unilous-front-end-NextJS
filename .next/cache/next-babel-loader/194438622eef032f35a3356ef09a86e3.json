{"ast":null,"code":"// import {withApollo} from 'next-apollo'\n// import {HttpLink, InMemoryCache} from 'apollo-boost'\n// import {ApolloClient} from 'apollo-client'\n// import {createHttpLink} from 'apollo-link-http'\n// import {setContext} from 'apollo-link-context'\n// const httpLink = createHttpLink({\n//     uri: 'https://projectu-back-end-2020.herokuapp.com/graphql',\n// })\n// const authLink = setContext((_, { headers }) => {\n//     const token = localStorage.getItem('token')\n//     return {\n//         headers: {\n//             ...headers,\n//             authorization: token ? `berySecret ${token}` : null,\n//         }\n//     }\n// })\n// const apolloClient = new ApolloClient({\n//     link: authLink.concat(httpLink),\n//     cache: new InMemoryCache()\n// })\n// export default withApollo(apolloClient)","map":{"version":3,"sources":["C:/Code/Projects/projectU/projectu/lib/apollo.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA","sourcesContent":["// import {withApollo} from 'next-apollo'\r\n// import {HttpLink, InMemoryCache} from 'apollo-boost'\r\n// import {ApolloClient} from 'apollo-client'\r\n// import {createHttpLink} from 'apollo-link-http'\r\n// import {setContext} from 'apollo-link-context'\r\n\r\n\r\n\r\n// const httpLink = createHttpLink({\r\n//     uri: 'https://projectu-back-end-2020.herokuapp.com/graphql',\r\n// })\r\n\r\n// const authLink = setContext((_, { headers }) => {\r\n//     const token = localStorage.getItem('token')\r\n//     return {\r\n//         headers: {\r\n//             ...headers,\r\n//             authorization: token ? `berySecret ${token}` : null,\r\n//         }\r\n//     }\r\n// })\r\n\r\n\r\n\r\n// const apolloClient = new ApolloClient({\r\n//     link: authLink.concat(httpLink),\r\n//     cache: new InMemoryCache()\r\n// })\r\n\r\n// export default withApollo(apolloClient)\r\n\r\n\r\n"]},"metadata":{},"sourceType":"script"}