{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\Projects\\\\projectU\\\\projectu\\\\pages\\\\userPage.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { MAKE_NOTIFICATION } from '../../schemas/mutations';\nimport { FIND_USER } from '../../schemas/queries';\nimport { setAlert, resetAlert } from '../../reducers/alertNotif';\nimport '../../static/css/pages/userPage.css';\nimport PostSmallList from '../post/PostSmallList';\nimport Loading from '../Loading';\nimport FormContainer from '../text-field/FormContainer';\nimport userIcon from '../../static/svg/userB.svg';\nimport ReferenceLink from '../text-field/ReferenceLink';\nimport { palletteGenerator, useField, triggerAlert } from '../../functions/functions';\n\nconst UserPage = props => {\n  const {\n    0: currentUser,\n    1: setCurrentUser\n  } = useState(null);\n  const message = useField('text');\n  const decodedUser = decodeURIComponent(props.userUsername);\n  const userQuery = useQuery(FIND_USER, {\n    variables: {\n      username: decodedUser\n    }\n  });\n\n  const onError = e => {\n    const eMessage = e.message;\n\n    if (eMessage.includes('Path `message` (')) {\n      triggerAlert('warning', `message$: message of ${message.fields.value.length} characters cannot be more than 800 characters`, props.setAlert, props.resetAlert);\n    }\n  };\n\n  const [sendMessage] = useMutation(MAKE_NOTIFICATION, {\n    onError\n  });\n\n  const handleMessage = async () => {\n    if (!message.fields.value.length) {\n      triggerAlert('warning', `message$: message field is required`, props.setAlert, props.resetAlert);\n      return null;\n    }\n\n    const result = await sendMessage({\n      variables: {\n        userFromId: props.currentUser._id,\n        userToId: currentUser._id,\n        message: message.fields.value\n      }\n    });\n\n    if (result) {\n      message.reset();\n      triggerAlert('success', `sent: message has been sent to ${currentUser.username}`, props.setAlert, props.resetAlert);\n    }\n  };\n\n  const userConditions = () => {\n    const query = userQuery.data;\n    const reducer = currentUser;\n    if (!query) return null;\n    if (!query.findUser) return null;\n    if (!reducer || reducer.username !== query.username) return query.findUser;\n    return null;\n  };\n\n  const user = userConditions();\n  useEffect(() => {\n    if (user) {\n      setCurrentUser(user);\n    }\n  }, [user, setCurrentUser]);\n\n  if (!currentUser) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      style: {\n        height: '15vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }), __jsx(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  const currentUserUN = localStorage.getItem('username');\n  const pallette = palletteGenerator(\"rgb(40,40,40)\").colorPallette;\n  return __jsx(\"div\", {\n    className: \"userPage-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"navbar-height\",\n    style: {\n      gridColumn: '1/3'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    className: \"UP-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"UP-title-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    className: \"UP-title-icon\",\n    src: userIcon,\n    alt: \"user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }), __jsx(\"h2\", {\n    className: \"UP-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, currentUser.username)), __jsx(\"h3\", {\n    className: \"UP-title\",\n    style: {\n      opacity: '0.8'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"profile link\"), __jsx(ReferenceLink, {\n    rl: currentUser.referenceLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), __jsx(\"h2\", {\n    className: \"UP-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"posts\"), __jsx(\"div\", {\n    className: \"UP-posts-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, __jsx(PostSmallList, {\n    posts: currentUser.posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }))), currentUserUN !== currentUser.username && __jsx(FormContainer, {\n    pallette: pallette,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    className: \"form-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }\n  }, \"contact \", currentUser.username), __jsx(\"h4\", {\n    className: \"form-title-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }, \"message\"), __jsx(\"div\", {\n    className: \"form-field-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }, __jsx(\"textarea\", _extends({\n    className: \"form-field\"\n  }, message.fields, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    className: \"form-submit-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }, __jsx(\"h4\", {\n    onClick: () => handleMessage(),\n    className: \"form-submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }, \"send\"))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  resetAlert\n})(UserPage);","map":{"version":3,"sources":["C:/Code/Projects/projectU/projectu/pages/userPage.js"],"names":["React","useState","useEffect","connect","useQuery","useMutation","MAKE_NOTIFICATION","FIND_USER","setAlert","resetAlert","PostSmallList","Loading","FormContainer","userIcon","ReferenceLink","palletteGenerator","useField","triggerAlert","UserPage","props","currentUser","setCurrentUser","message","decodedUser","decodeURIComponent","userUsername","userQuery","variables","username","onError","e","eMessage","includes","fields","value","length","sendMessage","handleMessage","result","userFromId","_id","userToId","reset","userConditions","query","data","reducer","findUser","user","height","currentUserUN","localStorage","getItem","pallette","colorPallette","gridColumn","opacity","referenceLink","posts","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useQuery, useMutation } from '@apollo/react-hooks'\r\nimport { MAKE_NOTIFICATION } from '../../schemas/mutations'\r\nimport { FIND_USER } from '../../schemas/queries'\r\nimport { setAlert, resetAlert } from '../../reducers/alertNotif'\r\nimport '../../static/css/pages/userPage.css'\r\nimport PostSmallList from '../post/PostSmallList'\r\nimport Loading from '../Loading'\r\nimport FormContainer from '../text-field/FormContainer'\r\nimport userIcon from '../../static/svg/userB.svg'\r\nimport ReferenceLink from '../text-field/ReferenceLink'\r\nimport { palletteGenerator, useField, triggerAlert } from '../../functions/functions'\r\n\r\nconst UserPage = (props) => {\r\n    const [currentUser, setCurrentUser] = useState(null)\r\n    const message = useField('text')\r\n    const decodedUser = decodeURIComponent(props.userUsername)\r\n    const userQuery = useQuery(FIND_USER, {\r\n      variables: {username: decodedUser}\r\n    })\r\n    const onError = (e) => {\r\n      const eMessage = e.message\r\n      if (eMessage.includes('Path `message` (')) {\r\n        triggerAlert('warning', `message$: message of ${message.fields.value.length} characters cannot be more than 800 characters`, props.setAlert, props.resetAlert)\r\n      }\r\n    }\r\n    const [sendMessage] = useMutation(MAKE_NOTIFICATION, {\r\n      onError\r\n    })\r\n    const handleMessage = async () => {\r\n      if (!message.fields.value.length) {\r\n        triggerAlert('warning', `message$: message field is required`, props.setAlert, props.resetAlert)\r\n        return null\r\n      }\r\n      const result = await sendMessage({\r\n          variables: {\r\n              userFromId: props.currentUser._id,\r\n              userToId: currentUser._id,\r\n              message: message.fields.value,\r\n          }\r\n      })\r\n      if (result) {\r\n          message.reset()\r\n          triggerAlert('success', `sent: message has been sent to ${currentUser.username}`, props.setAlert, props.resetAlert)\r\n      }\r\n  }\r\n\r\n    const userConditions = () => {\r\n      const query = userQuery.data\r\n      const reducer = currentUser\r\n      if (!query) return null\r\n      if (!query.findUser) return null\r\n      if (!reducer || reducer.username !== query.username) return query.findUser\r\n      return null\r\n    }\r\n\r\n    const user = userConditions()\r\n    useEffect(() => {\r\n      if (user) {\r\n        setCurrentUser(user)\r\n      }\r\n    }, [user, setCurrentUser])\r\n    if (!currentUser) {\r\n      return (\r\n        <div>\r\n            <div style={{height: '15vh'}}/>\r\n            <Loading />\r\n        </div>\r\n      )\r\n    }\r\n    const currentUserUN = localStorage.getItem('username')\r\n    const pallette = palletteGenerator(\"rgb(40,40,40)\").colorPallette\r\n    return (\r\n        <div className=\"userPage-container\">\r\n          <div className=\"navbar-height\" style={{gridColumn: '1/3'}} />\r\n          <div className=\"UP-content\">\r\n            <div className=\"UP-title-container\">\r\n              <img className=\"UP-title-icon\" src={userIcon} alt=\"user\" />\r\n              <h2 className=\"UP-title\">{currentUser.username}</h2>\r\n            </div>\r\n            <h3 className=\"UP-title\" style={{opacity: '0.8'}}>profile link</h3>\r\n            <ReferenceLink rl={currentUser.referenceLink} />\r\n            <h2 className=\"UP-title\">posts</h2>\r\n            <div className=\"UP-posts-container\">\r\n              <PostSmallList posts={currentUser.posts} />\r\n            </div>\r\n          </div>\r\n            {(currentUserUN !== currentUser.username) &&\r\n            <FormContainer pallette={pallette} >\r\n                  <h3 className=\"form-title\">contact {currentUser.username}</h3>\r\n                  <h4 className=\"form-title-secondary\">message</h4>\r\n                  <div className=\"form-field-container\">\r\n                    <textarea className=\"form-field\" {...message.fields} />\r\n                  </div >\r\n                  <div className=\"form-submit-button-container\">\r\n                    \r\n                  <h4 onClick={() => handleMessage()} className=\"form-submit-button\">send</h4>\r\n                  </div>\r\n            </FormContainer>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n    currentUser: state.currentUser        \r\n\t}\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  {setAlert, resetAlert}\r\n)(UserPage)"]},"metadata":{},"sourceType":"module"}