{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\Projects\\\\projectU\\\\projectu\\\\components\\\\text-field\\\\InputHeader.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux'; // import infoIconW from '../../static/svg/infoW.svg'\n// import infoIconB from '../../static/svg/infoB.svg'\n\nimport IH from '../../styles/inputHeader.module.ss';\n\nconst InputHeader = props => {\n  _s();\n\n  const {\n    0: expanded,\n    1: setExpanded\n  } = useState(false);\n\n  if (!props.info) {\n    return __jsx(\"label\", {\n      htmlFor: props.inputFor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 16\n      }\n    }, __jsx(\"h3\", {\n      className: IH.infoTitleText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 48\n      }\n    }, props.title));\n  }\n\n  const showInfo = expanded ? {\n    display: 'block'\n  } : {\n    display: 'none'\n  };\n  const colorInfo = props.color === 'white' ? {\n    textColor: '#282828',\n    icon: 'svg/infoB.svg'\n  } : {\n    textColor: 'white',\n    icon: 'svg/infoW.svg'\n  };\n  return __jsx(\"div\", {\n    className: IH.formInfoContainer,\n    style: {\n      color: colorInfo.textColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: IH.infoHeaderContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: props.inputFor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, __jsx(\"h3\", {\n    className: IH.infoTitleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 49\n    }\n  }, props.title)), __jsx(\"img\", {\n    onClick: () => setExpanded(!expanded),\n    src: colorInfo.icon,\n    className: IH.infoIcon,\n    alt: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: IH.infoContent,\n    style: showInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, props.children));\n}; //const mapStateToProps = (state) => {\n//\treturn {\n//\t}\n//}\n\n\n_s(InputHeader, \"DuL5jiiQQFgbn7gBKAyxwS/H4Ek=\");\n\n_c = InputHeader;\nexport default connect(null)(InputHeader);\n\nvar _c;\n\n$RefreshReg$(_c, \"InputHeader\");","map":{"version":3,"sources":["C:/Code/Projects/projectU/projectu/components/text-field/InputHeader.js"],"names":["React","useState","connect","IH","InputHeader","props","expanded","setExpanded","info","inputFor","infoTitleText","title","showInfo","display","colorInfo","color","textColor","icon","formInfoContainer","infoHeaderContainer","infoIcon","infoContent","children"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;AACA;;AACA,OAAOC,EAAP,MAAe,oCAAf;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BN,QAAQ,CAAC,KAAD,CAAxC;;AAEA,MAAI,CAACI,KAAK,CAACG,IAAX,EAAiB;AACb,WAAO;AAAO,MAAA,OAAO,EAAEH,KAAK,CAACI,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC;AAAI,MAAA,SAAS,EAAEN,EAAE,CAACO,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCL,KAAK,CAACM,KAAxC,CAAhC,CAAP;AACH;;AAED,QAAMC,QAAQ,GAAGN,QAAQ,GAAG;AAACO,IAAAA,OAAO,EAAE;AAAV,GAAH,GAAwB;AAACA,IAAAA,OAAO,EAAE;AAAV,GAAjD;AACA,QAAMC,SAAS,GAAGT,KAAK,CAACU,KAAN,KAAgB,OAAhB,GACd;AAACC,IAAAA,SAAS,EAAE,SAAZ;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GADc,GACkC;AAACD,IAAAA,SAAS,EAAE,OAAZ;AAAqBC,IAAAA,IAAI,EAAE;AAA3B,GADpD;AAEA,SACI;AAAK,IAAA,SAAS,EAAEd,EAAE,CAACe,iBAAnB;AAAsC,IAAA,KAAK,EAAE;AAACH,MAAAA,KAAK,EAAED,SAAS,CAACE;AAAlB,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEb,EAAE,CAACgB,mBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAEd,KAAK,CAACI,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC;AAAI,IAAA,SAAS,EAAEN,EAAE,CAACO,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCL,KAAK,CAACM,KAAxC,CAAhC,CADJ,EAEI;AAAK,IAAA,OAAO,EAAE,MAAMJ,WAAW,CAAC,CAACD,QAAF,CAA/B;AAA4C,IAAA,GAAG,EAAEQ,SAAS,CAACG,IAA3D;AAAiE,IAAA,SAAS,EAAEd,EAAE,CAACiB,QAA/E;AAAyF,IAAA,GAAG,EAAC,MAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAEjB,EAAE,CAACkB,WAAnB;AAAgC,IAAA,KAAK,EAAET,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,KAAK,CAACiB,QADX,CALJ,CADJ;AAYH,CAtBD,C,CAwBA;AACA;AAEA;AACA;;;GA5BMlB,W;;KAAAA,W;AA6BN,eAAeF,OAAO,CAClB,IADkB,CAAP,CAEbE,WAFa,CAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\n// import infoIconW from '../../static/svg/infoW.svg'\r\n// import infoIconB from '../../static/svg/infoB.svg'\r\nimport IH from '../../styles/inputHeader.module.ss'\r\n\r\nconst InputHeader = (props) => {\r\n    const [expanded, setExpanded] = useState(false)\r\n\r\n    if (!props.info) {\r\n        return <label htmlFor={props.inputFor}><h3 className={IH.infoTitleText}>{props.title}</h3></label>\r\n    }\r\n\r\n    const showInfo = expanded ? {display: 'block'} : {display: 'none'} \r\n    const colorInfo = props.color === 'white' ?\r\n        {textColor: '#282828', icon: 'svg/infoB.svg'} : {textColor: 'white', icon: 'svg/infoW.svg'}\r\n    return (\r\n        <div className={IH.formInfoContainer} style={{color: colorInfo.textColor}}>\r\n            <div className={IH.infoHeaderContainer}>\r\n                <label htmlFor={props.inputFor}><h3 className={IH.infoTitleText}>{props.title}</h3></label>\r\n                <img onClick={() => setExpanded(!expanded)} src={colorInfo.icon} className={IH.infoIcon} alt=\"info\" />\r\n            </div>\r\n            <div className={IH.infoContent} style={showInfo}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n//const mapStateToProps = (state) => {\r\n//\treturn {\r\n        \r\n//\t}\r\n//}\r\nexport default connect(\r\n    null\r\n)(InputHeader)"]},"metadata":{},"sourceType":"module"}