{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\Projects\\\\projectU\\\\projectu\\\\pages\\\\user\\\\[username].js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { MAKE_NOTIFICATION } from '../../src/schemas/mutations';\nimport { FIND_USER, ALL_USERS, FIND_POST } from '../../src/schemas/queries';\nimport { setAlert, resetAlert } from '../../redux/reducers/alertNotif';\nimport UP from '../../styles/pages/userPage.module.css';\nimport PostSmallList from '../../components/post/PostSmallList';\nimport Loading from '../../components/Loading';\nimport FormContainer from '../../components/text-field/FormContainer'; // import userIcon from '../../static/svg/userB.svg'\n\nimport ReferenceLink from '../../components/text-field/ReferenceLink';\nimport { palletteGenerator, useField, triggerAlert } from '../../src/functions/functions';\nimport { bindActionCreators } from 'redux';\nimport { apolloClient } from '../../lib/apollo';\nimport { withRouter } from 'next/router';\nimport Link from 'next/link';\nconst UserPage = withRouter(props => {\n  const currentUser = props.user;\n  const message = useField('text');\n  const decodedUser = decodeURIComponent(props.userUsername); // const userQuery = useQuery(FIND_USER, {\n  //   variables: {username: decodedUser}\n  // })\n\n  const onError = e => {\n    const eMessage = e.message;\n\n    if (eMessage.includes('Path `message` (')) {\n      triggerAlert('warning', `message$: message of ${message.fields.value.length} characters cannot be more than 800 characters`, props.setAlert, props.resetAlert);\n    }\n  };\n\n  const [sendMessage] = useMutation(MAKE_NOTIFICATION, {\n    onError\n  });\n\n  const handleMessage = async () => {\n    if (!message.fields.value.length) {\n      triggerAlert('warning', `message$: message field is required`, props.setAlert, props.resetAlert);\n      return null;\n    }\n\n    const result = await sendMessage({\n      variables: {\n        userFromId: props.currentUser._id,\n        userToId: currentUser._id,\n        message: message.fields.value\n      }\n    });\n\n    if (result) {\n      message.reset();\n      triggerAlert('success', `sent: message has been sent to ${currentUser.username}`, props.setAlert, props.resetAlert);\n    }\n  }; // const userConditions = () => {\n  //   const query = userQuery.data\n  //   const reducer = currentUser\n  //   if (!query) return null\n  //   if (!query.findUser) return null\n  //   if (!reducer || reducer.username !== query.username) return query.findUser\n  //   return null\n  // }\n  // const user = userConditions()\n  // useEffect(() => {\n  //   if (user) {\n  //     setCurrentUser(user)\n  //   }\n  // }, [user, setCurrentUser])\n  // if (!currentUser) {\n  //   return (\n  //     <div>\n  //         <div style={{height: '15vh'}}/>\n  //         <Loading />\n  //     </div>\n  //   )\n  // }\n\n\n  const pallette = palletteGenerator(\"rgb(40,40,40)\").colorPallette;\n  return __jsx(\"div\", {\n    className: 'UP.UP-container',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: UP.test,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, props.user.username), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, props.user.referenceLink), __jsx(Link, {\n    href: \"/postpage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 32\n    }\n  }, \"PostPage\")), __jsx(\"div\", {\n    className: \"navbar-height\",\n    style: {\n      gridColumn: '1/3'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: UP.UP - content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: UP.UP - title - container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    className: UP.UP - title - icon,\n    src: \"/svg/userB.svg\",\n    alt: \"user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), __jsx(\"h2\", {\n    className: UP.UP - title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, currentUser.username)), __jsx(\"h3\", {\n    className: UP.UP - title,\n    style: {\n      opacity: '0.8'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"profile link\"), __jsx(ReferenceLink, {\n    rl: currentUser.referenceLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), __jsx(\"h2\", {\n    className: UP.UP - title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"posts\"), __jsx(\"div\", {\n    className: UP.UP - posts - container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, __jsx(PostSmallList, {\n    posts: currentUser.posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }))), __jsx(FormContainer, {\n    pallette: pallette,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, __jsx(\"h3\", {\n    className: \"form-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"contact \", currentUser.username), __jsx(\"h4\", {\n    className: \"form-title-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"message\"), __jsx(\"div\", {\n    className: \"form-field-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, __jsx(\"textarea\", _extends({\n    className: \"form-field\"\n  }, message.fields, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }))), __jsx(\"div\", {\n    className: \"form-submit-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, __jsx(\"h4\", {\n    onClick: () => handleMessage(),\n    className: \"form-submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"send\"))));\n}); // const mapStateToProps = (state) => {\n// \treturn {\n//     currentUser: state.currentUser        \n// \t}\n// }\n// export default connect(\n//   mapStateToProps,\n//   {setAlert, resetAlert}\n// )(UserPage)\n\nexport async function getStaticPaths() {\n  const usernamesQuery = await apolloClient.query({\n    query: ALL_USERS\n  }).then(res => {\n    return res;\n  }).catch(err => console.log(err));\n  const paths = usernamesQuery.data.allUsers.map(u => `/user/${encodeURIComponent(u.username)}`);\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const userQuery = await apolloClient.query({\n    query: FIND_USER,\n    variables: {\n      username: params.username\n    }\n  }).catch(err => console.log(err));\n  return {\n    props: {\n      user: userQuery.data.findUser\n    }\n  };\n}\n\nconst mapStateToProps = state => {\n  return {\n    alertNotif: state.alertNotif,\n    currentUser: state.currentUser\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAlert: bindActionCreators(setAlert, dispatch),\n    resetAlert: bindActionCreators(resetAlert, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPage); // uses formContainer.css","map":{"version":3,"sources":["C:/Code/Projects/projectU/projectu/pages/user/[username].js"],"names":["React","useState","useEffect","connect","useQuery","useMutation","MAKE_NOTIFICATION","FIND_USER","ALL_USERS","FIND_POST","setAlert","resetAlert","UP","PostSmallList","Loading","FormContainer","ReferenceLink","palletteGenerator","useField","triggerAlert","bindActionCreators","apolloClient","withRouter","Link","UserPage","props","currentUser","user","message","decodedUser","decodeURIComponent","userUsername","onError","e","eMessage","includes","fields","value","length","sendMessage","handleMessage","result","variables","userFromId","_id","userToId","reset","username","pallette","colorPallette","test","referenceLink","gridColumn","content","title","container","icon","opacity","posts","getStaticPaths","usernamesQuery","query","then","res","catch","err","console","log","paths","data","allUsers","map","u","encodeURIComponent","fallback","getStaticProps","params","userQuery","findUser","mapStateToProps","state","alertNotif","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useQuery, useMutation } from '@apollo/react-hooks'\r\nimport { MAKE_NOTIFICATION } from '../../src/schemas/mutations'\r\nimport { FIND_USER, ALL_USERS, FIND_POST } from '../../src/schemas/queries'\r\nimport { setAlert, resetAlert } from '../../redux/reducers/alertNotif'\r\nimport UP from '../../styles/pages/userPage.module.css';\r\nimport PostSmallList from '../../components/post/PostSmallList'\r\nimport Loading from '../../components/Loading'\r\nimport FormContainer from '../../components/text-field/FormContainer'\r\n// import userIcon from '../../static/svg/userB.svg'\r\nimport ReferenceLink from '../../components/text-field/ReferenceLink'\r\nimport { palletteGenerator, useField, triggerAlert } from '../../src/functions/functions'\r\nimport {bindActionCreators} from 'redux'\r\nimport {apolloClient} from '../../lib/apollo'\r\nimport {withRouter} from 'next/router'\r\nimport Link from 'next/link'\r\n\r\nconst UserPage = withRouter((props) => {\r\n    const currentUser = props.user\r\n    const message = useField('text')\r\n    const decodedUser = decodeURIComponent(props.userUsername)\r\n    // const userQuery = useQuery(FIND_USER, {\r\n    //   variables: {username: decodedUser}\r\n    // })\r\n    const onError = (e) => {\r\n      const eMessage = e.message\r\n      if (eMessage.includes('Path `message` (')) {\r\n        triggerAlert('warning', `message$: message of ${message.fields.value.length} characters cannot be more than 800 characters`, props.setAlert, props.resetAlert)\r\n      }\r\n    }\r\n    const [sendMessage] = useMutation(MAKE_NOTIFICATION, {\r\n      onError\r\n    })\r\n    const handleMessage = async () => {\r\n      if (!message.fields.value.length) {\r\n        triggerAlert('warning', `message$: message field is required`, props.setAlert, props.resetAlert)\r\n        return null\r\n      }\r\n      const result = await sendMessage({\r\n          variables: {\r\n              userFromId: props.currentUser._id,\r\n              userToId: currentUser._id,\r\n              message: message.fields.value,\r\n          }\r\n      })\r\n      if (result) {\r\n          message.reset()\r\n          triggerAlert('success', `sent: message has been sent to ${currentUser.username}`, props.setAlert, props.resetAlert)\r\n      }\r\n  }\r\n\r\n    // const userConditions = () => {\r\n    //   const query = userQuery.data\r\n    //   const reducer = currentUser\r\n    //   if (!query) return null\r\n    //   if (!query.findUser) return null\r\n    //   if (!reducer || reducer.username !== query.username) return query.findUser\r\n    //   return null\r\n    // }\r\n\r\n    // const user = userConditions()\r\n    // useEffect(() => {\r\n    //   if (user) {\r\n    //     setCurrentUser(user)\r\n    //   }\r\n    // }, [user, setCurrentUser])\r\n    // if (!currentUser) {\r\n    //   return (\r\n    //     <div>\r\n    //         <div style={{height: '15vh'}}/>\r\n    //         <Loading />\r\n    //     </div>\r\n    //   )\r\n    // }\r\n    const pallette = palletteGenerator(\"rgb(40,40,40)\").colorPallette\r\n    return (\r\n      <div className={'UP.UP-container'}>\r\n        <h1 className={UP.test}>{props.user.username}</h1>\r\n        <h2>{props.user.referenceLink}</h2>\r\n        <Link href=\"/postpage\"><a>PostPage</a></Link>\r\n        <div className=\"navbar-height\" style={{gridColumn: '1/3'}} />\r\n        <div className={UP.UP-content}>\r\n          <div className={UP.UP-title-container}>\r\n            <img className={UP.UP-title-icon} src='/svg/userB.svg' alt=\"user\" />\r\n            <h2 className={UP.UP-title}>{currentUser.username}</h2>\r\n          </div>\r\n          <h3 className={UP.UP-title} style={{opacity: '0.8'}}>profile link</h3>\r\n          <ReferenceLink rl={currentUser.referenceLink} />\r\n          <h2 className={UP.UP-title}>posts</h2>\r\n          <div className={UP.UP-posts-container}>\r\n            <PostSmallList posts={currentUser.posts} />\r\n          </div>\r\n        </div>\r\n          <FormContainer pallette={pallette} >\r\n                <h3 className=\"form-title\">contact {currentUser.username}</h3>\r\n                <h4 className=\"form-title-secondary\">message</h4>\r\n                <div className=\"form-field-container\">\r\n                  <textarea className=\"form-field\" {...message.fields} />\r\n                </div >\r\n                <div className=\"form-submit-button-container\">\r\n                  \r\n                <h4 onClick={() => handleMessage()} className=\"form-submit-button\">send</h4>\r\n                </div>\r\n          </FormContainer>\r\n      </div>\r\n    )\r\n})\r\n\r\n// const mapStateToProps = (state) => {\r\n// \treturn {\r\n//     currentUser: state.currentUser        \r\n// \t}\r\n// }\r\n// export default connect(\r\n//   mapStateToProps,\r\n//   {setAlert, resetAlert}\r\n// )(UserPage)\r\n\r\nexport async function getStaticPaths() {\r\n    const usernamesQuery = await apolloClient.query({query: ALL_USERS}).then((res) => {\r\n        return res\r\n    }).catch(err => console.log(err))\r\n    const paths = usernamesQuery.data.allUsers.map(u => `/user/${encodeURIComponent(u.username)}`)\r\n    return {\r\n        paths,\r\n        fallback: false\r\n    }\r\n}\r\n\r\nexport async function getStaticProps({params}) {\r\n  const userQuery = await apolloClient.query({\r\n    query: FIND_USER,\r\n    variables: {username: params.username}\r\n  }).catch(err => console.log(err))\r\n  return {\r\n    props: {\r\n      user: userQuery.data.findUser\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    alertNotif: state.alertNotif,\r\n    currentUser: state.currentUser\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setAlert: bindActionCreators(setAlert, dispatch),\r\n    resetAlert: bindActionCreators(resetAlert, dispatch),\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UserPage)\r\n\r\n// uses formContainer.css"]},"metadata":{},"sourceType":"module"}