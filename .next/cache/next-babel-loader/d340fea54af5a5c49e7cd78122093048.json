{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\Projects\\\\projectU\\\\projectu\\\\components\\\\newNavBar\\\\NavBar.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport NB from '../../styles/newNavBar.module.css';\nimport { useField } from '../../functions/functions';\nimport Link from 'next/link';\nimport NotSigned from './signed/NotSigned';\nimport Signed from './signed/Signed';\nimport { bindActionCreators } from 'redux';\nimport SignIn from '../user/form/SignIn';\nimport Register from '../user/form/Register';\nimport { clearToken } from '../../redux/reducers/token';\nimport { setCurrentUser } from '../../redux/reducers/currentUser';\nimport UserNotifList from '../user/utilities/UserNotifList';\nimport { FIND_USER } from '../../schemas/queries';\nimport { useQuery } from '@apollo/react-hooks';\nimport Router from 'next/router';\n\nconst NavBar = props => {\n  if (props.noUser) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"HWM\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: NB.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }, __jsx(Link, {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }\n    }, __jsx(\"a\", {\n      className: `${NB.brandContainer} neutralize-link`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 29\n      }\n    }, __jsx(\"img\", {\n      src: \"/svg/logo/logoW.svg\",\n      className: NB.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 33\n      }\n    }), __jsx(\"h2\", {\n      className: NB.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 33\n      }\n    }, \"Unilous\"))))), __jsx(\"div\", {\n      className: \"SWM\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: NB.containerM,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: NB.navIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }), __jsx(\"div\", {\n      className: NB.navIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }\n    }), __jsx(Link, {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }\n    }, __jsx(\"a\", {\n      className: `${NB.brandContainerM} neutralize-link`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }\n    }, __jsx(\"img\", {\n      src: \"/svg/logo/logoW.svg\",\n      className: NB.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 33\n      }\n    }), __jsx(\"h2\", {\n      className: NB.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 33\n      }\n    }, \"Unilous\"))))));\n  }\n\n  const searchQuery = useField('text');\n  const currentUserUN = localStorage.getItem('username') ? localStorage.getItem('username') : 'fakeUser';\n  const userQuery = useQuery(FIND_USER, {\n    variables: {\n      username: currentUserUN\n    }\n  });\n\n  const userQueryConditions = () => {\n    const query = userQuery.data;\n    const reducer = props.currentUser;\n\n    if (!query) {\n      return null;\n    }\n\n    if (!query.findUser) {\n      return null;\n    }\n\n    if (reducer) {\n      if (query.findUser.username === reducer.username) {\n        return null;\n      }\n    }\n\n    return query.findUser;\n  };\n\n  const userResult = userQueryConditions();\n  useEffect(() => {\n    if (userResult) {\n      props.setCurrentUser(userResult);\n    }\n  }, [props, props.currentUser, userResult]);\n  const SQCleaned = searchQuery.fields.value === '' ? 'all' : searchQuery.fields.value;\n\n  const enterSearch = () => {\n    Router.push(`/results/${SQCleaned}`);\n  };\n\n  const handleKeyPress = (e, noState) => {\n    if (event.key === 'Enter') {\n      if (noState) {\n        const SQ = e.target.value === '' ? 'all' : e.target.value;\n        Router.push(`/results/${SQ}`);\n      } else {\n        enterSearch();\n      }\n    }\n  };\n\n  const handleSubNavState = state => {\n    if (state === subNav) {\n      setSubNav(false);\n    } else {\n      setSubNav(state);\n    }\n  };\n\n  const handleSubNavItemState = state => {\n    if (state === subNavItem) {\n      setSubNavItem(false);\n    } else {\n      setSubNavItem(state);\n    }\n  };\n\n  const logout = () => {\n    localStorage.clear();\n    props.clearToken();\n    resetNav();\n  };\n\n  const signedState = props.token ? __jsx(Signed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 39\n    }\n  }) : __jsx(NotSigned, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 52\n    }\n  });\n  const username = props.currentUser ? props.currentUser.username : '';\n\n  const SubNav = () => {\n    if (!subNav) {\n      return null;\n    } else if (subNav === 'search') {\n      return __jsx(\"div\", {\n        className: NB.subNavContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: NB.searchContainerM,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }, __jsx(Link, {\n        href: \"/results/[searchQuery]\",\n        as: `/results/${SQCleaned}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }\n      }, __jsx(\"a\", {\n        className: NB.searchBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }\n      }, __jsx(\"img\", {\n        src: \"/svg/searchWW.svg\",\n        className: NB.magnifier,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 57\n        }\n      }))), __jsx(\"input\", {\n        id: \"search\",\n        className: NB.searchBar,\n        placeholder: \"Search\",\n        onKeyPress: e => handleKeyPress(e, true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      })));\n    } else if (subNav === 'menu') {\n      if (props.noUser) {\n        return __jsx(\"div\", {\n          className: NB.subNavContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }\n        }, __jsx(\"div\", {\n          className: NB.menuContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }\n        }, __jsx(\"button\", {\n          className: NB.userOption,\n          onClick: () => handleSubNavItemState('notification'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }\n        }), __jsx(\"button\", {\n          className: NB.userOption,\n          onClick: () => handleSubNavItemState('user'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }\n        }), __jsx(\"button\", {\n          className: NB.moreContainer,\n          onClick: () => handleSubNavItemState('more'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }\n        }, __jsx(\"img\", {\n          src: \"/svg/moreW.svg\",\n          className: NB.more,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 33\n          }\n        }))));\n      }\n\n      if (props.token) {\n        return __jsx(\"div\", {\n          className: NB.subNavContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }\n        }, __jsx(\"div\", {\n          className: NB.menuContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }\n        }, __jsx(\"button\", {\n          className: NB.userOption,\n          onClick: () => handleSubNavItemState('notification'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }\n        }, __jsx(\"div\", {\n          className: NB.notifContainerM,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 33\n          }\n        }, __jsx(\"img\", {\n          src: \"/svg/bellW.svg\",\n          className: NB.bell,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 37\n          }\n        }), __jsx(\"div\", {\n          className: NB.nofifCount,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 37\n          }\n        }, \"-\"))), __jsx(\"button\", {\n          className: NB.userOption,\n          onClick: () => handleSubNavItemState('user'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }\n        }, __jsx(\"div\", {\n          className: NB.username,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 33\n          }\n        }, username)), __jsx(\"button\", {\n          className: NB.moreContainer,\n          onClick: () => handleSubNavItemState('more'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }\n        }, __jsx(\"img\", {\n          src: \"/svg/moreW.svg\",\n          className: NB.more,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 33\n          }\n        }))));\n      } else {\n        return __jsx(\"div\", {\n          className: NB.subNavContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }\n        }, __jsx(\"div\", {\n          className: NB.menuContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }\n        }, __jsx(\"button\", {\n          className: NB.signOption,\n          onClick: () => handleSubNavItemState('sign in'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }\n        }, \"sign in\"), __jsx(\"button\", {\n          className: NB.signOption,\n          onClick: () => handleSubNavItemState('register'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }\n        }, \"register\"), __jsx(\"button\", {\n          className: NB.moreContainer,\n          onClick: () => handleSubNavItemState('more'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }\n        }, __jsx(\"img\", {\n          src: \"/svg/moreW.svg\",\n          className: NB.more,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 33\n          }\n        }))));\n      }\n    }\n  };\n\n  const SubNavItem = () => {\n    if (!subNavItem) {\n      return null;\n    }\n\n    if (subNavItem === 'sign in') {\n      return __jsx(\"div\", {\n        className: NB.SNIContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }\n      }, __jsx(SignIn, {\n        onSuccess: resetNav,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    if (subNavItem === 'register') {\n      return __jsx(\"div\", {\n        className: NB.SNIContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }\n      }, __jsx(Register, {\n        onSuccess: resetNav,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    if (subNavItem === 'notification') {\n      return __jsx(\"div\", {\n        className: NB.SNIContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }\n      }, __jsx(\"img\", {\n        src: \"/svg/bellW.svg\",\n        className: NB.titleBell,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }\n      }), __jsx(UserNotifList, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    if (subNavItem === 'user') {\n      return __jsx(\"div\", {\n        className: NB.SNIContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }\n      }, props.currentUser.username), __jsx(Link, {\n        onClick: () => resetNav(),\n        href: \"/user/[username]\",\n        as: `/user/${decodeURIComponent(props.currentUser.username)}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }\n      }, __jsx(\"a\", {\n        className: \"neutralize-link\",\n        style: {\n          color: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }\n      }, __jsx(\"h3\", {\n        className: NB.ddOption,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 81\n        }\n      }, \"account details\"))), __jsx(\"h3\", {\n        className: NB.ddOption,\n        onClick: () => logout(),\n        style: {\n          color: 'rgb(254,52,77)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }\n      }, \"Sign out\"));\n    }\n\n    if (subNavItem === 'more') {\n      return __jsx(\"div\", {\n        className: NB.SNIContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }\n      }, __jsx(\"img\", {\n        src: \"/svg/moreW.svg\",\n        className: NB.titleMore,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }\n      }), __jsx(Link, {\n        onClick: () => resetNav(),\n        href: \"/postformpage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }\n      }, __jsx(\"a\", {\n        className: \"neutralize-link\",\n        style: {\n          color: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }\n      }, __jsx(\"h3\", {\n        className: NB.ddOption,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 81\n        }\n      }, \"create project\"))));\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"HWM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: NB.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    className: `${NB.brandContainer} neutralize-link`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 25\n    }\n  }, __jsx(\"img\", {\n    src: \"/svg/logo/logoW.svg\",\n    className: NB.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 29\n    }\n  }), __jsx(\"h2\", {\n    className: NB.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 29\n    }\n  }, \"Unilous\"))), __jsx(\"div\", {\n    className: NB.searchContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  }, __jsx(Link, {\n    href: \"/results/[searchQuery]\",\n    as: `/results/${SQCleaned}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 25\n    }\n  }, __jsx(\"a\", {\n    className: NB.searchBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 29\n    }\n  }, __jsx(\"img\", {\n    src: \"/svg/searchWW.svg\",\n    className: NB.magnifier,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 57\n    }\n  }))), __jsx(\"input\", _extends({\n    className: NB.searchBar,\n    placeholder: \"Search\",\n    onKeyPress: e => handleKeyPress(e)\n  }, searchQuery.fields, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 25\n    }\n  }))), __jsx(Link, {\n    href: \"/postformpage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    className: `${NB.CPContainer} neutralize-link`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 25\n    }\n  }, __jsx(\"img\", {\n    src: \"/svg/plusW.svg\",\n    className: NB.plus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 29\n    }\n  }), __jsx(\"div\", {\n    className: NB.CPText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 29\n    }\n  }, \"create project\"))), signedState)), __jsx(\"div\", {\n    className: \"SWM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: NB.containerM,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: NB.navIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 21\n    }\n  }), __jsx(\"div\", {\n    className: NB.navIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 21\n    }\n  }), __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    className: `${NB.brandContainerM} neutralize-link`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 25\n    }\n  }, __jsx(\"img\", {\n    src: \"/svg/logo/logoW.svg\",\n    className: NB.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 29\n    }\n  }), __jsx(\"h2\", {\n    className: NB.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 29\n    }\n  }, \"Unilous\"))), __jsx(\"button\", {\n    onClick: () => handleSubNavState('search'),\n    className: NB.navItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 25\n    }\n  }, __jsx(\"img\", {\n    src: \"/svg/searchWW.svg\",\n    className: NB.navIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 29\n    }\n  }))), __jsx(\"button\", {\n    onClick: () => handleSubNavState('menu'),\n    className: NB.navItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: \"/svg/hamburgerW.svg\",\n    className: NB.navIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 25\n    }\n  })), __jsx(SubNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 21\n    }\n  }), __jsx(SubNavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 21\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser,\n    token: state.token // alertNotif: state.alertNotif\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    clearToken: bindActionCreators(clearToken, dispatch),\n    setCurrentUser: bindActionCreators(setCurrentUser, dispatch) // resetAlert: bindActionCreators(resetAlert, dispatch),\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);","map":{"version":3,"sources":["C:/Code/Projects/projectU/projectu/components/newNavBar/NavBar.js"],"names":["React","useState","useEffect","connect","NB","useField","Link","NotSigned","Signed","bindActionCreators","SignIn","Register","clearToken","setCurrentUser","UserNotifList","FIND_USER","useQuery","Router","NavBar","props","noUser","container","brandContainer","icon","name","containerM","navIcon","brandContainerM","searchQuery","currentUserUN","localStorage","getItem","userQuery","variables","username","userQueryConditions","query","data","reducer","currentUser","findUser","userResult","SQCleaned","fields","value","enterSearch","push","handleKeyPress","e","noState","event","key","SQ","target","handleSubNavState","state","subNav","setSubNav","handleSubNavItemState","subNavItem","setSubNavItem","logout","clear","resetNav","signedState","token","SubNav","subNavContainer","searchContainerM","searchBtn","magnifier","searchBar","menuContainer","userOption","moreContainer","more","notifContainerM","bell","nofifCount","signOption","SubNavItem","SNIContainer","titleBell","decodeURIComponent","color","ddOption","titleMore","searchContainer","CPContainer","plus","CPText","navItem","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport NB from '../../styles/newNavBar.module.css'\r\nimport {useField} from '../../functions/functions'\r\nimport Link from 'next/link'\r\nimport NotSigned from './signed/NotSigned'\r\nimport Signed from './signed/Signed'\r\nimport {bindActionCreators} from 'redux'\r\nimport SignIn from '../user/form/SignIn'\r\nimport Register from '../user/form/Register'\r\nimport {clearToken} from '../../redux/reducers/token'\r\nimport {setCurrentUser} from '../../redux/reducers/currentUser'\r\nimport UserNotifList from '../user/utilities/UserNotifList'\r\nimport { FIND_USER } from '../../schemas/queries'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport Router from 'next/router'\r\n\r\nconst NavBar = (props) => {\r\n    if (props.noUser) {\r\n        return (\r\n            <div>\r\n                <div className=\"HWM\">\r\n                    <div className={NB.container}>\r\n                        <Link href=\"/\">\r\n                            <a className={`${NB.brandContainer} neutralize-link`}>\r\n                                <img src=\"/svg/logo/logoW.svg\" className={NB.icon} />\r\n                                <h2 className={NB.name}>Unilous</h2>\r\n                            </a>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"SWM\">\r\n                    <div className={NB.containerM}>\r\n                        <div className={NB.navIcon} />\r\n                        <div className={NB.navIcon} />\r\n                        <Link href=\"/\">\r\n                            <a className={`${NB.brandContainerM} neutralize-link`}>\r\n                                <img src=\"/svg/logo/logoW.svg\" className={NB.icon} />\r\n                                <h2 className={NB.name}>Unilous</h2>\r\n                            </a>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    const searchQuery = useField('text')\r\n    const currentUserUN = localStorage.getItem('username') ? localStorage.getItem('username') : 'fakeUser'\r\n    const userQuery = useQuery(FIND_USER, {\r\n        variables: {username: currentUserUN}\r\n    })\r\n    const userQueryConditions = () => {\r\n        const query = userQuery.data\r\n        const reducer = props.currentUser\r\n        if (!query) { return null }\r\n        if (!query.findUser) { return null }\r\n        if (reducer) {\r\n            if (query.findUser.username === reducer.username) { return null }\r\n        }\r\n        return query.findUser\r\n    }\r\n    const userResult = userQueryConditions()\r\n\r\n    useEffect(() => {\r\n        if (userResult) {\r\n            props.setCurrentUser(userResult)\r\n        }\r\n    }, [props, props.currentUser, userResult])\r\n\r\n    const SQCleaned = searchQuery.fields.value === '' ? 'all' : searchQuery.fields.value\r\n\r\n    const enterSearch = () => {\r\n        Router.push(`/results/${SQCleaned}`)\r\n    }\r\n\r\n    const handleKeyPress = (e, noState) => {\r\n        if (event.key === 'Enter') {\r\n            if (noState) {\r\n                const SQ = e.target.value === '' ? 'all' : e.target.value\r\n                Router.push(`/results/${SQ}`)\r\n            }\r\n            else {enterSearch()}\r\n        }\r\n    }\r\n\r\n    const handleSubNavState = (state) => {\r\n        if (state === subNav) {setSubNav(false)}\r\n        else {setSubNav(state)}\r\n    }\r\n    const handleSubNavItemState = (state) => {\r\n        if (state === subNavItem) {setSubNavItem(false)}\r\n        else {setSubNavItem(state)}\r\n    }\r\n    const logout = () => {\r\n        localStorage.clear()\r\n        props.clearToken()\r\n        resetNav()\r\n    }\r\n\r\n    const signedState = props.token ? <Signed /> : <NotSigned />\r\n    const username = props.currentUser ? props.currentUser.username : ''\r\n    const SubNav = () => {\r\n        if (!subNav) {return null}\r\n        else if (subNav === 'search') {\r\n            return (\r\n                <div className={NB.subNavContainer}>\r\n                    <div className={NB.searchContainerM}>\r\n                        <Link href=\"/results/[searchQuery]\" as={`/results/${SQCleaned}`}>\r\n                            <a className={NB.searchBtn}><img src=\"/svg/searchWW.svg\" className={NB.magnifier} /></a>\r\n                        </Link>\r\n                        <input id=\"search\" className={NB.searchBar} placeholder=\"Search\" onKeyPress={(e) => handleKeyPress(e, true)} />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if (subNav === 'menu') {\r\n            if (props.noUser) {\r\n                return (\r\n                    <div className={NB.subNavContainer}>\r\n                        <div className={NB.menuContainer}>\r\n                            <button className={NB.userOption} onClick={() => handleSubNavItemState('notification')} />\r\n                            <button className={NB.userOption} onClick={() => handleSubNavItemState('user')} />\r\n                            <button className={NB.moreContainer} onClick={() => handleSubNavItemState('more')} >\r\n                                <img src=\"/svg/moreW.svg\" className={NB.more} />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            if (props.token) {\r\n                return (\r\n                    <div className={NB.subNavContainer}>\r\n                        <div className={NB.menuContainer}>\r\n                            <button className={NB.userOption} onClick={() => handleSubNavItemState('notification')}>\r\n                                <div className={NB.notifContainerM}>\r\n                                    <img src=\"/svg/bellW.svg\" className={NB.bell} />\r\n                                    <div className={NB.nofifCount}>-</div>\r\n                                </div>\r\n                            </button>\r\n                            <button className={NB.userOption} onClick={() => handleSubNavItemState('user')}>\r\n                                <div className={NB.username}>{username}</div>\r\n                            </button>\r\n                            <button className={NB.moreContainer} onClick={() => handleSubNavItemState('more')} >\r\n                                <img src=\"/svg/moreW.svg\" className={NB.more} />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            else {\r\n                return (\r\n                    <div className={NB.subNavContainer}>\r\n                        <div className={NB.menuContainer}>\r\n                            <button className={NB.signOption} onClick={() => handleSubNavItemState('sign in')} >sign in</button>\r\n                            <button className={NB.signOption} onClick={() => handleSubNavItemState('register')} >register</button>\r\n                            <button className={NB.moreContainer} onClick={() => handleSubNavItemState('more')} >\r\n                                <img src=\"/svg/moreW.svg\" className={NB.more} />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const SubNavItem = () => {\r\n        if (!subNavItem) {return null}\r\n        if (subNavItem === 'sign in') {\r\n            return (\r\n                <div className={NB.SNIContainer}>\r\n                    <SignIn onSuccess={resetNav} />\r\n                </div>\r\n            )\r\n        }\r\n        if (subNavItem === 'register') {\r\n            return (\r\n                <div className={NB.SNIContainer}>\r\n                    <Register onSuccess={resetNav}/>\r\n                </div>\r\n            )\r\n        }\r\n        if (subNavItem === 'notification') {\r\n            return (\r\n                <div className={NB.SNIContainer}>\r\n                    <img src=\"/svg/bellW.svg\" className={NB.titleBell} />\r\n                    <UserNotifList />\r\n                </div>\r\n            )\r\n        }\r\n        if (subNavItem === 'user') {\r\n            return (\r\n                <div className={NB.SNIContainer}>\r\n                    <h2>{props.currentUser.username}</h2>\r\n                    <Link onClick={() => resetNav()} href=\"/user/[username]\" as={`/user/${decodeURIComponent(props.currentUser.username)}`}>\r\n                        <a className=\"neutralize-link\" style={{color: 'white'}}><h3 className={NB.ddOption}>account details</h3></a>\r\n                    </Link>\r\n                    <h3 className={NB.ddOption} onClick={() => logout()} style={{color: 'rgb(254,52,77)'}}>Sign out</h3>\r\n                </div>\r\n            )\r\n        }\r\n        if (subNavItem === 'more') {\r\n            return (\r\n                <div className={NB.SNIContainer}>\r\n                    <img src=\"/svg/moreW.svg\" className={NB.titleMore} />\r\n                    <Link onClick={() => resetNav()} href=\"/postformpage\" >\r\n                        <a className=\"neutralize-link\" style={{color: 'white'}}><h3 className={NB.ddOption}>create project</h3></a>\r\n                    </Link>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n \r\n    return (\r\n        <div>\r\n            <div className=\"HWM\">\r\n                <div className={NB.container}>\r\n                    <Link href=\"/\">\r\n                        <a className={`${NB.brandContainer} neutralize-link`}>\r\n                            <img src=\"/svg/logo/logoW.svg\" className={NB.icon} />\r\n                            <h2 className={NB.name}>Unilous</h2>\r\n                        </a>\r\n                    </Link>\r\n                    <div className={NB.searchContainer}>\r\n                        <Link href=\"/results/[searchQuery]\" as={`/results/${SQCleaned}`}>\r\n                            <a className={NB.searchBtn}><img src=\"/svg/searchWW.svg\" className={NB.magnifier} /></a>\r\n                        </Link>\r\n                        <input className={NB.searchBar} placeholder=\"Search\" onKeyPress={(e) => handleKeyPress(e)} {...searchQuery.fields} />\r\n                    </div>\r\n                    <Link href=\"/postformpage\">\r\n                        <a className={`${NB.CPContainer} neutralize-link`}>\r\n                            <img src=\"/svg/plusW.svg\" className={NB.plus} />\r\n                            <div className={NB.CPText}>create project</div>\r\n                        </a>\r\n                    </Link>\r\n                    {signedState}\r\n                </div>\r\n            </div>\r\n            <div className=\"SWM\">\r\n                <div className={NB.containerM}>\r\n                    <div className={NB.navIcon} />\r\n                    <div className={NB.navIcon} />\r\n                    <Link href=\"/\">\r\n                        <a className={`${NB.brandContainerM} neutralize-link`}>\r\n                            <img src=\"/svg/logo/logoW.svg\" className={NB.icon} />\r\n                            <h2 className={NB.name}>Unilous</h2>\r\n                        </a>\r\n                    </Link>\r\n                    <button onClick={() => handleSubNavState('search')} className={NB.navItem}>\r\n                        <label htmlFor=\"search\">\r\n                            <img src=\"/svg/searchWW.svg\" className={NB.navIcon} />\r\n                        </label>\r\n                    </button>\r\n                    <button onClick={() => handleSubNavState('menu')} className={NB.navItem}>\r\n                        <img src=\"/svg/hamburgerW.svg\" className={NB.navIcon} />\r\n                    </button>\r\n                    <SubNav />\r\n                    <SubNavItem />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n        currentUser: state.currentUser,\r\n        token: state.token,\r\n        // alertNotif: state.alertNotif\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearToken: bindActionCreators(clearToken, dispatch),\r\n        setCurrentUser: bindActionCreators(setCurrentUser, dispatch),\r\n        // resetAlert: bindActionCreators(resetAlert, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(NavBar)"]},"metadata":{},"sourceType":"module"}