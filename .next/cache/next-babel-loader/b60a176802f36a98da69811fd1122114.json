{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\Projects\\\\projectU\\\\projectu\\\\src\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { ApolloClient } from 'apollo-client';\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { setContext } from 'apollo-link-context'; //    DEPLOYED https://projectu-back-end-2020.herokuapp.com/graphql\n// DEVELOPMENT https://unilous-back-end-dev.herokuapp.com/graphql\n//       LOCAL https://localhost:4000/graphql\n//   ALTERNATE https://cakecrusher-projectu-back-end.glitch.me/graphql\n\nconst renderApp = () => {\n  const httpLink = createHttpLink({\n    uri: 'https://projectu-back-end-2020.herokuapp.com/graphql'\n  });\n  const authLink = setContext((_, {\n    headers\n  }) => {\n    const token = localStorage.getItem('token');\n    return {\n      headers: _objectSpread(_objectSpread({}, headers), {}, {\n        authorization: token ? `berySecret ${token}` : null\n      })\n    };\n  });\n  const client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache()\n  });\n  return ReactDOM.render(__jsx(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, __jsx(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, __jsx(App, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }))), document.getElementById('root'));\n};\n\nrenderApp();\nstore.subscribe(() => renderApp());","map":{"version":3,"sources":["C:/Code/Projects/projectU/projectu/src/index.js"],"names":["React","ReactDOM","App","Provider","store","ApolloClient","ApolloProvider","createHttpLink","InMemoryCache","setContext","renderApp","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache","render","document","getElementById","subscribe"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,UAAT,QAA2B,qBAA3B,C,CACA;AACA;AACA;AACA;;AACA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAMC,QAAQ,GAAGJ,cAAc,CAAC;AAC5BK,IAAAA,GAAG,EAAE;AADuB,GAAD,CAA/B;AAIA,QAAMC,QAAQ,GAAGJ,UAAU,CAAC,CAACK,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAoB;AAC5C,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,WAAO;AACHH,MAAAA,OAAO,kCACAA,OADA;AAEHI,QAAAA,aAAa,EAAEH,KAAK,GAAI,cAAaA,KAAM,EAAvB,GAA2B;AAF5C;AADJ,KAAP;AAMH,GAR0B,CAA3B;AAUA,QAAMI,MAAM,GAAG,IAAIf,YAAJ,CAAiB;AAC5BgB,IAAAA,IAAI,EAAER,QAAQ,CAACS,MAAT,CAAgBX,QAAhB,CADsB;AAE5BY,IAAAA,KAAK,EAAE,IAAIf,aAAJ;AAFqB,GAAjB,CAAf;AAKA,SACQP,QAAQ,CAACuB,MAAT,CACI,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEJ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEhB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,EAMIqB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANJ,CADR;AAUH,CA9BD;;AAgCAhB,SAAS;AAETN,KAAK,CAACuB,SAAN,CAAgB,MACZjB,SAAS,EADb","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport { ApolloClient } from 'apollo-client'\nimport { ApolloProvider } from \"@apollo/react-hooks\"\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { setContext } from 'apollo-link-context'\n//    DEPLOYED https://projectu-back-end-2020.herokuapp.com/graphql\n// DEVELOPMENT https://unilous-back-end-dev.herokuapp.com/graphql\n//       LOCAL https://localhost:4000/graphql\n//   ALTERNATE https://cakecrusher-projectu-back-end.glitch.me/graphql\nconst renderApp = () => {\n    const httpLink = createHttpLink({\n        uri: 'https://projectu-back-end-2020.herokuapp.com/graphql',\n    })\n    \n    const authLink = setContext((_, { headers }) => {\n        const token = localStorage.getItem('token')\n        return {\n            headers: {\n                ...headers,\n                authorization: token ? `berySecret ${token}` : null,\n            }\n        }\n    })\n\n    const client = new ApolloClient({\n        link: authLink.concat(httpLink),\n        cache: new InMemoryCache()\n    })\n\n    return (\n            ReactDOM.render(\n                <ApolloProvider client={client}>\n                    <Provider store={store}>\n                        <App />\n                    </Provider>\n                </ApolloProvider>,\n                document.getElementById('root')\n            )\n    )\n}\n\nrenderApp()\n\nstore.subscribe(() => (\n    renderApp()\n))"]},"metadata":{},"sourceType":"module"}